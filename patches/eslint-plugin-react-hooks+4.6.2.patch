diff --git a/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js b/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js
index 441442f..d1ec5dc 100644
--- a/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js
+++ b/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js
@@ -905,7 +905,7 @@ var ExhaustiveDeps = {
         var _callee = callee,
             name = _callee.name;
 
-        if (name === 'useRef' && id.type === 'Identifier') {
+        if ((name === 'useRef' || name === "useLazyRef") && id.type === 'Identifier') {
           // useRef() return value is stable.
           return true;
         } else if (name === 'useState' || name === 'useReducer') {
diff --git a/node_modules/eslint-plugin-react-hooks/index.js b/node_modules/eslint-plugin-react-hooks/index.js
index 0e91baf..7e86d46 100644
--- a/node_modules/eslint-plugin-react-hooks/index.js
+++ b/node_modules/eslint-plugin-react-hooks/index.js
@@ -1,9 +1,3 @@
 'use strict';
 
-// TODO: this doesn't make sense for an ESLint rule.
-// We need to fix our build process to not create bundles for "raw" packages like this.
-if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./cjs/eslint-plugin-react-hooks.production.min.js');
-} else {
-  module.exports = require('./cjs/eslint-plugin-react-hooks.development.js');
-}
+module.exports = require('./cjs/eslint-plugin-react-hooks.development.js');
