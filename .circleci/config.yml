version: 2

defaults: &defaults
  working_directory: ~/project
  docker:
    - image: circleci/node:10

attach: &attach
  attach_workspace:
    at: ~/project

jobs:
  Prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            # When lock file changes, use increasingly general patterns to
            # restore cache
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - yarn-v1-
      - run: yarn --version
      - run: yarn ci
      - save_cache:
          key: yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            # This should cache the yarn cache instead of node_modules, which is
            # needed because yarn ci actually removes node_modules before
            # installing to guarantee a clean slate.
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - .

  Danger:
    <<: *defaults
    <<: *attach
    steps:
      - run: yarn danger

  Docs:
    <<: *defaults
    <<: *attach
    steps:
      - run: cd docs && yarn build

  Filesize:
    <<: *defaults
    <<: *attach
    steps:
      - run: yarn filesize

  Apollo Client Monorepo:
    <<: *defaults
    <<: *attach
    steps:
      - run:
          name: Jest suite with coverage
          command: yarn test-ci && yarn coverage:upload
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

workflows:
  version: 2
  Build and Test:
    jobs:
      - Prepare
      - Danger:
          requires:
            - Prepare
      - Docs:
          requires:
            - Prepare
      - Filesize:
          requires:
            - Prepare
      - Apollo Client Monorepo:
          requires:
            - Prepare
