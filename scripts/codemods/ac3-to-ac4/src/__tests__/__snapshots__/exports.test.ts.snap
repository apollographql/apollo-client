// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`all exports > @apollo/client 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  ApolloClientOptions,
-  DefaultOptions,
   ApolloClient,
-  mergeOptions,
-  FetchMoreOptions,
   ObservableQuery,
-  QueryOptions,
-  WatchQueryOptions,
-  MutationOptions,
-  SubscriptionOptions,
   FetchPolicy,
   WatchQueryFetchPolicy,
   MutationFetchPolicy,
   RefetchWritePolicy,
   ErrorPolicy,
   FetchMoreQueryOptions,
-  SubscribeToMoreOptions,
   SubscribeToMoreFunction,
   UpdateQueryMapFn,
   UpdateQueryOptions,
   SubscribeToMoreUpdateQueryFn,
@@  @@
   StoreObject,
   DocumentTransform,
   Observable,
   isReference,
-  makeReference,
   setLogVerbosity,
   gql,
   resetCaches,
   disableFragmentWarnings,
@@  @@
   RefetchQueryDescriptor,
   InternalRefetchQueryDescriptor,
   RefetchQueriesInclude,
   InternalRefetchQueriesInclude,
-  RefetchQueriesOptions,
   RefetchQueriesPromiseResults,
-  RefetchQueriesResult,
   InternalRefetchQueriesOptions,
   InternalRefetchQueriesResult,
   InternalRefetchQueriesMap,
   PureQueryOptions,
   OperationVariables,
-  ApolloQueryResult,
   MutationQueryReducer,
   MutationQueryReducersMap,
   MutationUpdaterFn,
   MutationUpdaterFunction,
@@  @@
   concat,
   execute,
   ApolloLink,
   DocumentNode,
-  Path,
-  ExecutionPatchInitialResult,
-  IncrementalPayload,
-  ExecutionPatchIncrementalResult,
   ApolloPayloadResult,
-  ExecutionPatchResult,
-  GraphQLRequest,
-  Operation,
-  SingleExecutionResult,
-  FetchResult,
-  NextLink,
-  RequestHandler,
   ServerParseError,
   parseAndCheckHttpResponse,
   ClientParseError,
   serializeFetchParameter,
@@  @@
   selectURI,
   createHttpLink,
   HttpLink,
   rewriteURIForGET,
-  ApolloContextValue,
-  ApolloProvider,
   ApolloConsumer,
-  getApolloContext,
   resetApolloContext,
   IDocumentDefinition,
   DocumentType,
   operationName,
   parser,
-  PreloadQueryOptions,
-  PreloadQueryFetchPolicy,
-  PreloadQueryFunction,
-  createQueryPreloader,
-  useQuery,
-  UseSuspenseQueryResult,
-  useSuspenseQuery,
-  UseBackgroundQueryResult,
-  useBackgroundQuery,
-  UseSuspenseFragmentResult,
-  UseSuspenseFragmentOptions,
-  useSuspenseFragment,
-  LoadQueryFunction,
-  UseLoadableQueryResult,
-  useLoadableQuery,
-  UseQueryRefHandlersResult,
-  useQueryRefHandlers,
-  UseReadQueryResult,
-  useReadQuery,
-  skipToken,
-  SkipToken,
-  useApolloClient,
-  useLazyQuery,
-  useMutation,
-  useSubscription,
-  useReactiveVar,
-  useFragment,
-  UseFragmentOptions,
-  UseFragmentResult,
-  QueryReference,
-  QueryRef,
-  PreloadedQueryRef,
-  Context,
   CommonOptions,
   BaseQueryOptions,
-  QueryFunctionOptions,
   ObservableQueryFields,
-  QueryResult,
   QueryDataOptions,
-  QueryHookOptions,
-  LazyQueryHookOptions,
-  LazyQueryHookExecOptions,
-  SuspenseQueryHookFetchPolicy,
-  SuspenseQueryHookOptions,
-  BackgroundQueryHookFetchPolicy,
-  BackgroundQueryHookOptions,
-  LoadableQueryHookFetchPolicy,
-  LoadableQueryHookOptions,
   QueryLazyOptions,
-  LazyQueryResult,
-  QueryTuple,
-  LazyQueryExecFunction,
-  LazyQueryResultTuple,
   RefetchQueriesFunction,
   BaseMutationOptions,
-  MutationFunctionOptions,
-  MutationResult,
-  MutationFunction,
-  MutationHookOptions,
   MutationDataOptions,
-  MutationTuple,
-  OnDataOptions,
-  OnSubscriptionDataOptions,
-  BaseSubscriptionOptions,
-  SubscriptionResult,
-  SubscriptionHookOptions,
-  SubscriptionDataOptions,
   SubscriptionCurrentObservable,
-  VariablesOption,
-  NoInfer
+  Defer20220824Handler,
+  Incremental,
+  FormattedExecutionResult,
 } from "@apollo/client";
-type _Test_ApolloClientOptions = ApolloClientOptions<TCacheShape>;
-type _Test_DefaultOptions = DefaultOptions;
+
+import {
+  ApolloProvider,
+  createQueryPreloader,
+  getApolloContext,
+  skipToken,
+  useApolloClient,
+  useBackgroundQuery,
+  useFragment,
+  useLazyQuery,
+  useLoadableQuery,
+  useMutation,
+  useQuery,
+  useQueryRefHandlers,
+  useReactiveVar,
+  useReadQuery,
+  useSubscription,
+  useSuspenseFragment,
+  useSuspenseQuery,
+} from "@apollo/client/react";
+
+import type {
+  QueryRef,
+  ApolloContextValue,
+  MutationFunction,
+  PreloadedQueryRef,
+  PreloadQueryFetchPolicy,
+  PreloadQueryFunction,
+  PreloadQueryOptions,
+  QueryRef,
+  SkipToken,
+  SubscriptionDataOptions,
+} from "@apollo/client/react";
+
+import type { NoInfer, VariablesOption } from "@apollo/client/utilities/internal";
+type _Test_ApolloClientOptions = ApolloClient.Options<TCacheShape>;
+type _Test_DefaultOptions = ApolloClient.DefaultOptions;
 class _Test_ApolloClient extends ApolloClient<TCacheShape> {}
 const _test_ApolloClient = new ApolloClient<TCacheShape>(options)
 mergeOptions<TDefaultOptions, TOptions>(defaults, options)
-type _Test_FetchMoreOptions = FetchMoreOptions<TData, TVariables>;
+type _Test_FetchMoreOptions = ObservableQuery.FetchMoreOptions<TData, TVariables>;
 class _Test_ObservableQuery extends ObservableQuery<TData, TVariables> {}
 const _test_ObservableQuery = new ObservableQuery<TData, TVariables>(param0)
-type _Test_QueryOptions = QueryOptions<TVariables, TData>;
-type _Test_WatchQueryOptions = WatchQueryOptions<TVariables, TData>;
-type _Test_MutationOptions = MutationOptions<TData, TVariables, TContext, TCache>;
-type _Test_SubscriptionOptions = SubscriptionOptions<TVariables, TData>;
+type _Test_QueryOptions = ApolloClient.QueryOptions<TData, TVariables>;
+type _Test_WatchQueryOptions = ApolloClient.WatchQueryOptions<TData, TVariables>;
+type _Test_MutationOptions = ApolloClient.MutateOptions<TData, TVariables, TContext, TCache>;
+type _Test_SubscriptionOptions = ApolloClient.SubscribeOptions<TData, TVariables>;
 type _Test_FetchPolicy = FetchPolicy;
 type _Test_WatchQueryFetchPolicy = WatchQueryFetchPolicy;
 type _Test_MutationFetchPolicy = MutationFetchPolicy;
 type _Test_RefetchWritePolicy = RefetchWritePolicy;
 type _Test_ErrorPolicy = ErrorPolicy;
 type _Test_FetchMoreQueryOptions = FetchMoreQueryOptions<TVariables, TData>;
-type _Test_SubscribeToMoreOptions = SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
+type _Test_SubscribeToMoreOptions = ObservableQuery.SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
 type _Test_SubscribeToMoreFunction = SubscribeToMoreFunction<TData, TVariables>;
 type _Test_UpdateQueryMapFn = UpdateQueryMapFn<TData, TVariables>;
 type _Test_UpdateQueryOptions = UpdateQueryOptions<TData, TVariables>;
 type _Test_SubscribeToMoreUpdateQueryFn = SubscribeToMoreUpdateQueryFn<TData, TVariables, TSubscriptionData>;
@@  @@
 type _Test_RefetchQueryDescriptor = RefetchQueryDescriptor;
 type _Test_InternalRefetchQueryDescriptor = InternalRefetchQueryDescriptor;
 type _Test_RefetchQueriesInclude = RefetchQueriesInclude;
 type _Test_InternalRefetchQueriesInclude = InternalRefetchQueriesInclude;
-type _Test_RefetchQueriesOptions = RefetchQueriesOptions<TCache, TResult>;
+type _Test_RefetchQueriesOptions = ApolloClient.RefetchQueriesOptions<TCache, TResult>;
 type _Test_RefetchQueriesPromiseResults = RefetchQueriesPromiseResults<TResult>;
-type _Test_RefetchQueriesResult = RefetchQueriesResult<TResult>;
+type _Test_RefetchQueriesResult = ApolloClient.RefetchQueriesResult<TResult>;
 type _Test_InternalRefetchQueriesOptions = InternalRefetchQueriesOptions<TCache, TResult>;
 type _Test_InternalRefetchQueriesResult = InternalRefetchQueriesResult<TResult>;
 type _Test_InternalRefetchQueriesMap = InternalRefetchQueriesMap<TResult>;
 type _Test_PureQueryOptions = PureQueryOptions<TVariables, TData>;
 type _Test_OperationVariables = OperationVariables;
-type _Test_ApolloQueryResult = ApolloQueryResult<T>;
+type _Test_ApolloQueryResult = ObservableQuery.Result<T>;
 type _Test_MutationQueryReducer = MutationQueryReducer<T>;
 type _Test_MutationQueryReducersMap = MutationQueryReducersMap<T>;
 type _Test_MutationUpdaterFn = MutationUpdaterFn<T>;
 type _Test_MutationUpdaterFunction = MutationUpdaterFunction<TData, TVariables, TContext, TCache>;
@@  @@
 const _Test_execute = execute;
 class _Test_ApolloLink extends ApolloLink {}
 const _test_ApolloLink = new ApolloLink(request)
 type _Test_DocumentNode = DocumentNode;
-type _Test_Path = Path;
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
+type _Test_Path = Incremental.Path;
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
 type _Test_ApolloPayloadResult = ApolloPayloadResult<TData, TExtensions>;
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
-type _Test_Operation = Operation;
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
-type _Test_NextLink = NextLink;
-type _Test_RequestHandler = RequestHandler;
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
+type _Test_Operation = ApolloLink.Operation;
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
+type _Test_NextLink = ApolloLink.ForwardFunction;
+type _Test_RequestHandler = ApolloLink.RequestHandler;
 type _Test_ServerParseError = ServerParseError;
 parseAndCheckHttpResponse(operations)
 type _Test_ClientParseError = ClientParseError;
 const _Test_serializeFetchParameter = serializeFetchParameter;
@@  @@
 type _Test_PreloadQueryFetchPolicy = PreloadQueryFetchPolicy;
 type _Test_PreloadQueryFunction = PreloadQueryFunction;
 createQueryPreloader(client)
 useQuery<TData, TVariables>(query, options)
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
 useSuspenseQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
 useBackgroundQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
 useSuspenseFragment<TData, TVariables>(options)
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
 useLoadableQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
 useQueryRefHandlers<TData, TVariables>(queryRef)
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
 useReadQuery<TData>(queryRef)
 const _Test_skipToken = skipToken;
 type _Test_SkipToken = SkipToken;
 useApolloClient(override)
@@  @@
 useMutation<TData, TVariables, TContext, TCache>(mutation, options)
 useSubscription<TData, TVariables>(subscription, options)
 useReactiveVar<T>(rv)
 useFragment<TData, TVars>(options)
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
-type _Test_QueryReference = QueryReference<TData, TVariables>;
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
+type _Test_UseFragmentResult = useFragment.Result<TData>;
+type _Test_QueryReference = QueryRef<TData, TVariables>;
 type _Test_QueryRef = QueryRef<TData, TVariables>;
 type _Test_PreloadedQueryRef = PreloadedQueryRef<TData, TVariables>;
-type _Test_Context = Context;
+type _Test_Context = DefaultContext;
 type _Test_CommonOptions = CommonOptions<TOptions>;
 type _Test_BaseQueryOptions = BaseQueryOptions<TVariables, TData>;
-type _Test_QueryFunctionOptions = QueryFunctionOptions<TData, TVariables>;
+type _Test_QueryFunctionOptions = useQuery.Options<TData, TVariables>;
 type _Test_ObservableQueryFields = ObservableQueryFields<TData, TVariables>;
-type _Test_QueryResult = QueryResult<TData, TVariables>;
+type _Test_QueryResult = useQuery.Result<TData, TVariables>;
 type _Test_QueryDataOptions = QueryDataOptions<TData, TVariables>;
-type _Test_QueryHookOptions = QueryHookOptions<TData, TVariables>;
-type _Test_LazyQueryHookOptions = LazyQueryHookOptions<TData, TVariables>;
-type _Test_LazyQueryHookExecOptions = LazyQueryHookExecOptions<TData, TVariables>;
-type _Test_SuspenseQueryHookFetchPolicy = SuspenseQueryHookFetchPolicy;
-type _Test_SuspenseQueryHookOptions = SuspenseQueryHookOptions<TData, TVariables>;
-type _Test_BackgroundQueryHookFetchPolicy = BackgroundQueryHookFetchPolicy;
-type _Test_BackgroundQueryHookOptions = BackgroundQueryHookOptions<TData, TVariables>;
-type _Test_LoadableQueryHookFetchPolicy = LoadableQueryHookFetchPolicy;
-type _Test_LoadableQueryHookOptions = LoadableQueryHookOptions;
+type _Test_QueryHookOptions = useQuery.Options<TData, TVariables>;
+type _Test_LazyQueryHookOptions = useLazyQuery.Options<TData, TVariables>;
+type _Test_LazyQueryHookExecOptions = useLazyQuery.ExecOptions<TData, TVariables>;
+type _Test_SuspenseQueryHookFetchPolicy = useSuspenseQuery.FetchPolicy;
+type _Test_SuspenseQueryHookOptions = useSuspenseQuery.Options<TVariables>;
+type _Test_BackgroundQueryHookFetchPolicy = useBackgroundQuery.FetchPolicy;
+type _Test_BackgroundQueryHookOptions = useBackgroundQuery.Options<TVariables>;
+type _Test_LoadableQueryHookFetchPolicy = useLoadableQuery.FetchPolicy;
+type _Test_LoadableQueryHookOptions = useLoadableQuery.Options;
 type _Test_QueryLazyOptions = QueryLazyOptions<TVariables>;
-type _Test_LazyQueryResult = LazyQueryResult<TData, TVariables>;
-type _Test_QueryTuple = QueryTuple<TData, TVariables>;
-type _Test_LazyQueryExecFunction = LazyQueryExecFunction<TData, TVariables>;
-type _Test_LazyQueryResultTuple = LazyQueryResultTuple<TData, TVariables>;
+type _Test_LazyQueryResult = useLazyQuery.Result<TData, TVariables>;
+type _Test_QueryTuple = useLazyQuery.ResultTuple<TData, TVariables>;
+type _Test_LazyQueryExecFunction = useLazyQuery.ExecFunction<TData, TVariables>;
+type _Test_LazyQueryResultTuple = useLazyQuery.ResultTuple<TData, TVariables>;
 type _Test_RefetchQueriesFunction = RefetchQueriesFunction;
 type _Test_BaseMutationOptions = BaseMutationOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationFunctionOptions = MutationFunctionOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationResult = MutationResult<TData>;
+type _Test_MutationFunctionOptions = useMutation.MutationFunctionOptions<TData, TVariables, TCache>;
+type _Test_MutationResult = useMutation.Result<TData>;
 type _Test_MutationFunction = MutationFunction<TData, TVariables, TContext, TCache>;
-type _Test_MutationHookOptions = MutationHookOptions<TData, TVariables, TContext, TCache>;
+type _Test_MutationHookOptions = useMutation.Options<TData, TVariables, TCache>;
 type _Test_MutationDataOptions = MutationDataOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationTuple = MutationTuple<TData, TVariables, TContext, TCache>;
-type _Test_OnDataOptions = OnDataOptions<TData>;
-type _Test_OnSubscriptionDataOptions = OnSubscriptionDataOptions<TData>;
-type _Test_BaseSubscriptionOptions = BaseSubscriptionOptions<TData, TVariables>;
-type _Test_SubscriptionResult = SubscriptionResult<TData, TVariables>;
-type _Test_SubscriptionHookOptions = SubscriptionHookOptions<TData, TVariables>;
+type _Test_MutationTuple = useMutation.ResultTuple<TData, TVariables, TCache>;
+type _Test_OnDataOptions = useSubscription.OnDataOptions<TData>;
+type _Test_OnSubscriptionDataOptions = useSubscription.OnSubscriptionDataOptions<TData>;
+type _Test_BaseSubscriptionOptions = useSubscription.Options<TData, TVariables>;
+type _Test_SubscriptionResult = useSubscription.Result<TData>;
+type _Test_SubscriptionHookOptions = useSubscription.Options<TData, TVariables>;
 type _Test_SubscriptionDataOptions = SubscriptionDataOptions<TData, TVariables>;
 type _Test_SubscriptionCurrentObservable = SubscriptionCurrentObservable;
 type _Test_VariablesOption = VariablesOption<TVariables>;
 type _Test_NoInfer = NoInfer<T>;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/cache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
   Transaction,
-  WatchFragmentOptions,
-  WatchFragmentResult,
   ApolloCache,
   Cache,
   DataProxy,
   MissingTree,
@@  @@
   ReadFieldOptions,
   MissingFieldError,
   Reference,
   isReference,
-  makeReference,
   canonicalStringify,
   EntityStore,
   fieldNameFromStoreName,
   defaultDataIdFromObject,
@@  @@
   ApolloReducerConfig,
   InMemoryCacheConfig,
   MergeInfo,
   MergeTree,
-  ReadMergeModifyContext
+  ReadMergeModifyContext,
 } from "@apollo/client/cache";
 type _Test_Transaction = Transaction<T>;
-type _Test_WatchFragmentOptions = WatchFragmentOptions<TData, TVars>;
-type _Test_WatchFragmentResult = WatchFragmentResult<TData>;
+type _Test_WatchFragmentOptions = ApolloCache.WatchFragmentOptions<TData, TVars>;
+type _Test_WatchFragmentResult = ApolloCache.WatchFragmentResult<TData>;
 class _Test_ApolloCache extends ApolloCache<TSerialized> {}
 const _test_ApolloCache = new ApolloCache<TSerialized>()
 const _Test_Cache = Cache;
 const _Test_DataProxy = DataProxy;
"
`;

exports[`all exports > @apollo/client/core 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  ApolloClientOptions,
-  DefaultOptions,
   ApolloClient,
-  mergeOptions,
-  FetchMoreOptions,
   ObservableQuery,
-  QueryOptions,
-  WatchQueryOptions,
-  MutationOptions,
-  SubscriptionOptions,
   FetchPolicy,
   WatchQueryFetchPolicy,
   MutationFetchPolicy,
   RefetchWritePolicy,
   ErrorPolicy,
   FetchMoreQueryOptions,
-  SubscribeToMoreOptions,
   SubscribeToMoreFunction,
   UpdateQueryMapFn,
   UpdateQueryOptions,
   SubscribeToMoreUpdateQueryFn,
@@  @@
   StoreObject,
   DocumentTransform,
   Observable,
   isReference,
-  makeReference,
   setLogVerbosity,
   gql,
   resetCaches,
   disableFragmentWarnings,
@@  @@
   RefetchQueryDescriptor,
   InternalRefetchQueryDescriptor,
   RefetchQueriesInclude,
   InternalRefetchQueriesInclude,
-  RefetchQueriesOptions,
   RefetchQueriesPromiseResults,
-  RefetchQueriesResult,
   InternalRefetchQueriesOptions,
   InternalRefetchQueriesResult,
   InternalRefetchQueriesMap,
   PureQueryOptions,
   OperationVariables,
-  ApolloQueryResult,
   MutationQueryReducer,
   MutationQueryReducersMap,
   MutationUpdaterFn,
   MutationUpdaterFunction,
@@  @@
   concat,
   execute,
   ApolloLink,
   DocumentNode,
-  Path,
-  ExecutionPatchInitialResult,
-  IncrementalPayload,
-  ExecutionPatchIncrementalResult,
   ApolloPayloadResult,
-  ExecutionPatchResult,
-  GraphQLRequest,
-  Operation,
-  SingleExecutionResult,
-  FetchResult,
-  NextLink,
-  RequestHandler,
   ServerParseError,
   parseAndCheckHttpResponse,
   ClientParseError,
   serializeFetchParameter,
@@  @@
   createSignalIfSupported,
   selectURI,
   createHttpLink,
   HttpLink,
-  rewriteURIForGET
-} from "@apollo/client/core";
-type _Test_ApolloClientOptions = ApolloClientOptions<TCacheShape>;
-type _Test_DefaultOptions = DefaultOptions;
+  rewriteURIForGET,
+  Defer20220824Handler,
+  Incremental,
+  FormattedExecutionResult,
+} from "@apollo/client";
+type _Test_ApolloClientOptions = ApolloClient.Options<TCacheShape>;
+type _Test_DefaultOptions = ApolloClient.DefaultOptions;
 class _Test_ApolloClient extends ApolloClient<TCacheShape> {}
 const _test_ApolloClient = new ApolloClient<TCacheShape>(options)
 mergeOptions<TDefaultOptions, TOptions>(defaults, options)
-type _Test_FetchMoreOptions = FetchMoreOptions<TData, TVariables>;
+type _Test_FetchMoreOptions = ObservableQuery.FetchMoreOptions<TData, TVariables>;
 class _Test_ObservableQuery extends ObservableQuery<TData, TVariables> {}
 const _test_ObservableQuery = new ObservableQuery<TData, TVariables>(param0)
-type _Test_QueryOptions = QueryOptions<TVariables, TData>;
-type _Test_WatchQueryOptions = WatchQueryOptions<TVariables, TData>;
-type _Test_MutationOptions = MutationOptions<TData, TVariables, TContext, TCache>;
-type _Test_SubscriptionOptions = SubscriptionOptions<TVariables, TData>;
+type _Test_QueryOptions = ApolloClient.QueryOptions<TData, TVariables>;
+type _Test_WatchQueryOptions = ApolloClient.WatchQueryOptions<TData, TVariables>;
+type _Test_MutationOptions = ApolloClient.MutateOptions<TData, TVariables, TContext, TCache>;
+type _Test_SubscriptionOptions = ApolloClient.SubscribeOptions<TData, TVariables>;
 type _Test_FetchPolicy = FetchPolicy;
 type _Test_WatchQueryFetchPolicy = WatchQueryFetchPolicy;
 type _Test_MutationFetchPolicy = MutationFetchPolicy;
 type _Test_RefetchWritePolicy = RefetchWritePolicy;
 type _Test_ErrorPolicy = ErrorPolicy;
 type _Test_FetchMoreQueryOptions = FetchMoreQueryOptions<TVariables, TData>;
-type _Test_SubscribeToMoreOptions = SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
+type _Test_SubscribeToMoreOptions = ObservableQuery.SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
 type _Test_SubscribeToMoreFunction = SubscribeToMoreFunction<TData, TVariables>;
 type _Test_UpdateQueryMapFn = UpdateQueryMapFn<TData, TVariables>;
 type _Test_UpdateQueryOptions = UpdateQueryOptions<TData, TVariables>;
 type _Test_SubscribeToMoreUpdateQueryFn = SubscribeToMoreUpdateQueryFn<TData, TVariables, TSubscriptionData>;
@@  @@
 type _Test_RefetchQueryDescriptor = RefetchQueryDescriptor;
 type _Test_InternalRefetchQueryDescriptor = InternalRefetchQueryDescriptor;
 type _Test_RefetchQueriesInclude = RefetchQueriesInclude;
 type _Test_InternalRefetchQueriesInclude = InternalRefetchQueriesInclude;
-type _Test_RefetchQueriesOptions = RefetchQueriesOptions<TCache, TResult>;
+type _Test_RefetchQueriesOptions = ApolloClient.RefetchQueriesOptions<TCache, TResult>;
 type _Test_RefetchQueriesPromiseResults = RefetchQueriesPromiseResults<TResult>;
-type _Test_RefetchQueriesResult = RefetchQueriesResult<TResult>;
+type _Test_RefetchQueriesResult = ApolloClient.RefetchQueriesResult<TResult>;
 type _Test_InternalRefetchQueriesOptions = InternalRefetchQueriesOptions<TCache, TResult>;
 type _Test_InternalRefetchQueriesResult = InternalRefetchQueriesResult<TResult>;
 type _Test_InternalRefetchQueriesMap = InternalRefetchQueriesMap<TResult>;
 type _Test_PureQueryOptions = PureQueryOptions<TVariables, TData>;
 type _Test_OperationVariables = OperationVariables;
-type _Test_ApolloQueryResult = ApolloQueryResult<T>;
+type _Test_ApolloQueryResult = ObservableQuery.Result<T>;
 type _Test_MutationQueryReducer = MutationQueryReducer<T>;
 type _Test_MutationQueryReducersMap = MutationQueryReducersMap<T>;
 type _Test_MutationUpdaterFn = MutationUpdaterFn<T>;
 type _Test_MutationUpdaterFunction = MutationUpdaterFunction<TData, TVariables, TContext, TCache>;
@@  @@
 const _Test_execute = execute;
 class _Test_ApolloLink extends ApolloLink {}
 const _test_ApolloLink = new ApolloLink(request)
 type _Test_DocumentNode = DocumentNode;
-type _Test_Path = Path;
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
+type _Test_Path = Incremental.Path;
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
 type _Test_ApolloPayloadResult = ApolloPayloadResult<TData, TExtensions>;
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
-type _Test_Operation = Operation;
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
-type _Test_NextLink = NextLink;
-type _Test_RequestHandler = RequestHandler;
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
+type _Test_Operation = ApolloLink.Operation;
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
+type _Test_NextLink = ApolloLink.ForwardFunction;
+type _Test_RequestHandler = ApolloLink.RequestHandler;
 type _Test_ServerParseError = ServerParseError;
 parseAndCheckHttpResponse(operations)
 type _Test_ClientParseError = ClientParseError;
 const _Test_serializeFetchParameter = serializeFetchParameter;
"
`;

exports[`all exports > @apollo/client/dev 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/errors 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/link/batch 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import {
-  BatchableRequest,
-  BatchHandler,
-  OperationBatcher,
-  BatchLink
-} from "@apollo/client/link/batch";
+import { BatchableRequest, OperationBatcher, BatchLink } from "@apollo/client/link/batch";
 type _Test_BatchableRequest = BatchableRequest;
-type _Test_BatchHandler = BatchHandler;
+type _Test_BatchHandler = BatchLink.BatchHandler;
 class _Test_OperationBatcher extends OperationBatcher {}
 const _test_OperationBatcher = new OperationBatcher(param0)
 class _Test_BatchLink extends BatchLink {}
 const _test_BatchLink = new BatchLink(fetchParams)
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/batch-http 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/link/context 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
   setContext,
-  ContextSetter
+  SetContextLink
 } from "@apollo/client/link/context";
 setContext(setter)
-type _Test_ContextSetter = ContextSetter;
\\ No newline at end of file
+type _Test_ContextSetter = SetContextLink.LegacyContextSetter;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/core 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
   concat,
   execute,
   ApolloLink,
   DocumentNode,
-  Path,
-  ExecutionPatchInitialResult,
-  IncrementalPayload,
-  ExecutionPatchIncrementalResult,
   ApolloPayloadResult,
-  ExecutionPatchResult,
-  GraphQLRequest,
-  Operation,
-  SingleExecutionResult,
-  FetchResult,
-  NextLink,
-  RequestHandler
-} from "@apollo/client/link/core";
+} from "@apollo/client/link";
+
+import type { FormattedExecutionResult } from "graphql";
+import type { Defer20220824Handler, Incremental } from "@apollo/client/incremental";
 const _Test_empty = empty;
 const _Test_from = from;
 const _Test_split = split;
 const _Test_concat = concat;
 const _Test_execute = execute;
 class _Test_ApolloLink extends ApolloLink {}
 const _test_ApolloLink = new ApolloLink(request)
 type _Test_DocumentNode = DocumentNode;
-type _Test_Path = Path;
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
+type _Test_Path = Incremental.Path;
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
 type _Test_ApolloPayloadResult = ApolloPayloadResult<TData, TExtensions>;
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
-type _Test_Operation = Operation;
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
-type _Test_NextLink = NextLink;
-type _Test_RequestHandler = RequestHandler;
\\ No newline at end of file
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
+type _Test_Operation = ApolloLink.Operation;
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
+type _Test_NextLink = ApolloLink.ForwardFunction;
+type _Test_RequestHandler = ApolloLink.RequestHandler;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/error 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import {
-  onError,
-  ErrorResponse,
-  ErrorLink,
-  ErrorHandler
-} from "@apollo/client/link/error";
+import { onError, ErrorLink } from "@apollo/client/link/error";
 onError(errorHandler)
-type _Test_ErrorResponse = ErrorResponse;
+type _Test_ErrorResponse = ErrorLink.ErrorHandlerOptions;
 class _Test_ErrorLink extends ErrorLink {}
 const _test_ErrorLink = new ErrorLink(errorHandler)
-type _Test_ErrorHandler = ErrorHandler;
\\ No newline at end of file
+type _Test_ErrorHandler = ErrorLink.ErrorHandler;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/http 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  ServerParseError,
   parseAndCheckHttpResponse,
   ClientParseError,
   serializeFetchParameter,
   HttpOptions,
@@  @@
   createSignalIfSupported,
   selectURI,
   createHttpLink,
   HttpLink,
-  rewriteURIForGET
+  rewriteURIForGET,
 } from "@apollo/client/link/http";
+import type { ServerParseError } from "@apollo/client/errors";
 type _Test_ServerParseError = ServerParseError;
 parseAndCheckHttpResponse(operations)
 type _Test_ClientParseError = ClientParseError;
 const _Test_serializeFetchParameter = serializeFetchParameter;
"
`;

exports[`all exports > @apollo/client/link/persisted-queries 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import {
-  VERSION,
-  ErrorResponse,
-  PersistedQueryLink,
-  createPersistedQueryLink
-} from "@apollo/client/link/persisted-queries";
+import { VERSION, PersistedQueryLink, createPersistedQueryLink } from "@apollo/client/link/persisted-queries";
 const _Test_VERSION = VERSION;
-type _Test_ErrorResponse = ErrorResponse;
+type _Test_ErrorResponse = PersistedQueryLink.DisableFunctionOptions;
 const _Test_PersistedQueryLink = PersistedQueryLink;
 const _Test_createPersistedQueryLink = createPersistedQueryLink;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/remove-typename 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  RemoveTypenameFromVariablesOptions,
   removeTypenameFromVariables,
-  KEEP
+  KEEP,
+  RemoveTypenameFromVariablesLink
 } from "@apollo/client/link/remove-typename";
-type _Test_RemoveTypenameFromVariablesOptions = RemoveTypenameFromVariablesOptions;
+type _Test_RemoveTypenameFromVariablesOptions = RemoveTypenameFromVariablesLink.Options;
 removeTypenameFromVariables(options)
 const _Test_KEEP = KEEP;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/link/retry 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/link/schema 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/link/subscriptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/link/utils 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
   fromError,
   toPromise,
   fromPromise,
-  ServerError,
   throwServerError,
   validateOperation,
   createOperation,
   transformOperation,
-  filterOperationVariables
+  filterOperationVariables,
 } from "@apollo/client/link/utils";
+import type { ServerError } from "@apollo/client/errors";
 fromError<T>(errorValue)
 toPromise<R>(observable)
 fromPromise<T>(promise)
 type _Test_ServerError = ServerError;
"
`;

exports[`all exports > @apollo/client/link/ws 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import {
-  WebSocketLink,
-  WebSocketParams
-} from "@apollo/client/link/ws";
+import { WebSocketLink } from "@apollo/client/link/ws";
 class _Test_WebSocketLink extends WebSocketLink {}
 const _test_WebSocketLink = new WebSocketLink(paramsOrClient)
-type _Test_WebSocketParams = WebSocketParams;
\\ No newline at end of file
+type _Test_WebSocketParams = WebSocketLink.Configuration;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/masking 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/react 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
   PreloadQueryFetchPolicy,
   PreloadQueryFunction,
   createQueryPreloader,
   useQuery,
-  UseSuspenseQueryResult,
   useSuspenseQuery,
-  UseBackgroundQueryResult,
   useBackgroundQuery,
-  UseSuspenseFragmentResult,
-  UseSuspenseFragmentOptions,
   useSuspenseFragment,
-  LoadQueryFunction,
-  UseLoadableQueryResult,
   useLoadableQuery,
-  UseQueryRefHandlersResult,
   useQueryRefHandlers,
-  UseReadQueryResult,
   useReadQuery,
   skipToken,
   SkipToken,
   useApolloClient,
@@  @@
   useMutation,
   useSubscription,
   useReactiveVar,
   useFragment,
-  UseFragmentOptions,
-  UseFragmentResult,
-  QueryReference,
   QueryRef,
   PreloadedQueryRef,
-  Context,
   CommonOptions,
   BaseQueryOptions,
-  QueryFunctionOptions,
   ObservableQueryFields,
-  QueryResult,
   QueryDataOptions,
-  QueryHookOptions,
-  LazyQueryHookOptions,
-  LazyQueryHookExecOptions,
-  SuspenseQueryHookFetchPolicy,
-  SuspenseQueryHookOptions,
-  BackgroundQueryHookFetchPolicy,
-  BackgroundQueryHookOptions,
-  LoadableQueryHookFetchPolicy,
-  LoadableQueryHookOptions,
   QueryLazyOptions,
-  LazyQueryResult,
-  QueryTuple,
-  LazyQueryExecFunction,
-  LazyQueryResultTuple,
   RefetchQueriesFunction,
   BaseMutationOptions,
-  MutationFunctionOptions,
-  MutationResult,
   MutationFunction,
-  MutationHookOptions,
   MutationDataOptions,
-  MutationTuple,
-  OnDataOptions,
-  OnSubscriptionDataOptions,
-  BaseSubscriptionOptions,
-  SubscriptionResult,
-  SubscriptionHookOptions,
   SubscriptionDataOptions,
   SubscriptionCurrentObservable,
-  VariablesOption,
-  NoInfer
 } from "@apollo/client/react";
+import type { DefaultContext } from "@apollo/client";
+import type { NoInfer, VariablesOption } from "@apollo/client/utilities/internal";
 type _Test_ApolloContextValue = ApolloContextValue;
 const _Test_ApolloProvider = ApolloProvider;
 const _Test_ApolloConsumer = ApolloConsumer;
 getApolloContext()
@@  @@
 type _Test_PreloadQueryFetchPolicy = PreloadQueryFetchPolicy;
 type _Test_PreloadQueryFunction = PreloadQueryFunction;
 createQueryPreloader(client)
 useQuery<TData, TVariables>(query, options)
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
 useSuspenseQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
 useBackgroundQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
 useSuspenseFragment<TData, TVariables>(options)
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
 useLoadableQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
 useQueryRefHandlers<TData, TVariables>(queryRef)
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
 useReadQuery<TData>(queryRef)
 const _Test_skipToken = skipToken;
 type _Test_SkipToken = SkipToken;
 useApolloClient(override)
@@  @@
 useMutation<TData, TVariables, TContext, TCache>(mutation, options)
 useSubscription<TData, TVariables>(subscription, options)
 useReactiveVar<T>(rv)
 useFragment<TData, TVars>(options)
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
-type _Test_QueryReference = QueryReference<TData, TVariables>;
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
+type _Test_UseFragmentResult = useFragment.Result<TData>;
+type _Test_QueryReference = QueryRef<TData, TVariables>;
 type _Test_QueryRef = QueryRef<TData, TVariables>;
 type _Test_PreloadedQueryRef = PreloadedQueryRef<TData, TVariables>;
-type _Test_Context = Context;
+type _Test_Context = DefaultContext;
 type _Test_CommonOptions = CommonOptions<TOptions>;
 type _Test_BaseQueryOptions = BaseQueryOptions<TVariables, TData>;
-type _Test_QueryFunctionOptions = QueryFunctionOptions<TData, TVariables>;
+type _Test_QueryFunctionOptions = useQuery.Options<TData, TVariables>;
 type _Test_ObservableQueryFields = ObservableQueryFields<TData, TVariables>;
-type _Test_QueryResult = QueryResult<TData, TVariables>;
+type _Test_QueryResult = useQuery.Result<TData, TVariables>;
 type _Test_QueryDataOptions = QueryDataOptions<TData, TVariables>;
-type _Test_QueryHookOptions = QueryHookOptions<TData, TVariables>;
-type _Test_LazyQueryHookOptions = LazyQueryHookOptions<TData, TVariables>;
-type _Test_LazyQueryHookExecOptions = LazyQueryHookExecOptions<TData, TVariables>;
-type _Test_SuspenseQueryHookFetchPolicy = SuspenseQueryHookFetchPolicy;
-type _Test_SuspenseQueryHookOptions = SuspenseQueryHookOptions<TData, TVariables>;
-type _Test_BackgroundQueryHookFetchPolicy = BackgroundQueryHookFetchPolicy;
-type _Test_BackgroundQueryHookOptions = BackgroundQueryHookOptions<TData, TVariables>;
-type _Test_LoadableQueryHookFetchPolicy = LoadableQueryHookFetchPolicy;
-type _Test_LoadableQueryHookOptions = LoadableQueryHookOptions;
+type _Test_QueryHookOptions = useQuery.Options<TData, TVariables>;
+type _Test_LazyQueryHookOptions = useLazyQuery.Options<TData, TVariables>;
+type _Test_LazyQueryHookExecOptions = useLazyQuery.ExecOptions<TData, TVariables>;
+type _Test_SuspenseQueryHookFetchPolicy = useSuspenseQuery.FetchPolicy;
+type _Test_SuspenseQueryHookOptions = useSuspenseQuery.Options<TVariables>;
+type _Test_BackgroundQueryHookFetchPolicy = useBackgroundQuery.FetchPolicy;
+type _Test_BackgroundQueryHookOptions = useBackgroundQuery.Options<TVariables>;
+type _Test_LoadableQueryHookFetchPolicy = useLoadableQuery.FetchPolicy;
+type _Test_LoadableQueryHookOptions = useLoadableQuery.Options;
 type _Test_QueryLazyOptions = QueryLazyOptions<TVariables>;
-type _Test_LazyQueryResult = LazyQueryResult<TData, TVariables>;
-type _Test_QueryTuple = QueryTuple<TData, TVariables>;
-type _Test_LazyQueryExecFunction = LazyQueryExecFunction<TData, TVariables>;
-type _Test_LazyQueryResultTuple = LazyQueryResultTuple<TData, TVariables>;
+type _Test_LazyQueryResult = useLazyQuery.Result<TData, TVariables>;
+type _Test_QueryTuple = useLazyQuery.ResultTuple<TData, TVariables>;
+type _Test_LazyQueryExecFunction = useLazyQuery.ExecFunction<TData, TVariables>;
+type _Test_LazyQueryResultTuple = useLazyQuery.ResultTuple<TData, TVariables>;
 type _Test_RefetchQueriesFunction = RefetchQueriesFunction;
 type _Test_BaseMutationOptions = BaseMutationOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationFunctionOptions = MutationFunctionOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationResult = MutationResult<TData>;
+type _Test_MutationFunctionOptions = useMutation.MutationFunctionOptions<TData, TVariables, TCache>;
+type _Test_MutationResult = useMutation.Result<TData>;
 type _Test_MutationFunction = MutationFunction<TData, TVariables, TContext, TCache>;
-type _Test_MutationHookOptions = MutationHookOptions<TData, TVariables, TContext, TCache>;
+type _Test_MutationHookOptions = useMutation.Options<TData, TVariables, TCache>;
 type _Test_MutationDataOptions = MutationDataOptions<TData, TVariables, TContext, TCache>;
-type _Test_MutationTuple = MutationTuple<TData, TVariables, TContext, TCache>;
-type _Test_OnDataOptions = OnDataOptions<TData>;
-type _Test_OnSubscriptionDataOptions = OnSubscriptionDataOptions<TData>;
-type _Test_BaseSubscriptionOptions = BaseSubscriptionOptions<TData, TVariables>;
-type _Test_SubscriptionResult = SubscriptionResult<TData, TVariables>;
-type _Test_SubscriptionHookOptions = SubscriptionHookOptions<TData, TVariables>;
+type _Test_MutationTuple = useMutation.ResultTuple<TData, TVariables, TCache>;
+type _Test_OnDataOptions = useSubscription.OnDataOptions<TData>;
+type _Test_OnSubscriptionDataOptions = useSubscription.OnSubscriptionDataOptions<TData>;
+type _Test_BaseSubscriptionOptions = useSubscription.Options<TData, TVariables>;
+type _Test_SubscriptionResult = useSubscription.Result<TData>;
+type _Test_SubscriptionHookOptions = useSubscription.Options<TData, TVariables>;
 type _Test_SubscriptionDataOptions = SubscriptionDataOptions<TData, TVariables>;
 type _Test_SubscriptionCurrentObservable = SubscriptionCurrentObservable;
 type _Test_VariablesOption = VariablesOption<TVariables>;
 type _Test_NoInfer = NoInfer<T>;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/react/components 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/react/context 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
   ApolloConsumer,
   ApolloContextValue,
   getApolloContext,
   resetApolloContext,
-  ApolloProviderProps,
-  ApolloProvider
-} from "@apollo/client/react/context";
+  ApolloProvider,
+} from "@apollo/client/react";
 type _Test_ApolloConsumerProps = ApolloConsumerProps;
 const _Test_ApolloConsumer = ApolloConsumer;
 type _Test_ApolloContextValue = ApolloContextValue;
 getApolloContext()
 const _Test_resetApolloContext = resetApolloContext;
-type _Test_ApolloProviderProps = ApolloProviderProps<TCache>;
+type _Test_ApolloProviderProps = ApolloProvider.Props<TCache>;
 const _Test_ApolloProvider = ApolloProvider;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/react/hoc 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/react/hooks 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
   useQuery,
-  UseSuspenseQueryResult,
   useSuspenseQuery,
-  UseBackgroundQueryResult,
   useBackgroundQuery,
-  UseSuspenseFragmentResult,
-  UseSuspenseFragmentOptions,
   useSuspenseFragment,
-  LoadQueryFunction,
-  UseLoadableQueryResult,
   useLoadableQuery,
-  UseQueryRefHandlersResult,
   useQueryRefHandlers,
-  UseReadQueryResult,
   useReadQuery,
   skipToken,
   SkipToken,
   useApolloClient,
@@  @@
   useMutation,
   useSubscription,
   useReactiveVar,
   useFragment,
-  UseFragmentOptions,
-  UseFragmentResult
-} from "@apollo/client/react/hooks";
+} from "@apollo/client/react";
 useQuery<TData, TVariables>(query, options)
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
 useSuspenseQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
 useBackgroundQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
 useSuspenseFragment<TData, TVariables>(options)
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
 useLoadableQuery<TData, TVariables, TOptions>(query, options)
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
 useQueryRefHandlers<TData, TVariables>(queryRef)
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
 useReadQuery<TData>(queryRef)
 const _Test_skipToken = skipToken;
 type _Test_SkipToken = SkipToken;
 useApolloClient(override)
@@  @@
 useMutation<TData, TVariables, TContext, TCache>(mutation, options)
 useSubscription<TData, TVariables>(subscription, options)
 useReactiveVar<T>(rv)
 useFragment<TData, TVars>(options)
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
\\ No newline at end of file
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
+type _Test_UseFragmentResult = useFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`all exports > @apollo/client/react/internal 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
   getSuspenseCache,
   CacheKey,
   QueryKey,
-  QueryReference,
-  QueryRef,
-  PreloadedQueryRef,
   InternalQueryReference,
   getWrappedPromise,
   unwrapQueryRef,
   updateWrappedQueryRef,
   wrapQueryRef,
   assertWrappedQueryRef,
   SuspenseCacheOptions,
-  HookWrappers
+  HookWrappers,
 } from "@apollo/client/react/internal";
+import type { QueryRef, PreloadedQueryRef, QueryRef } from "@apollo/client/react";
 getSuspenseCache(client)
 type _Test_CacheKey = CacheKey;
 type _Test_QueryKey = QueryKey;
-type _Test_QueryReference = QueryReference<TData, TVariables>;
+type _Test_QueryReference = QueryRef<TData, TVariables>;
 type _Test_QueryRef = QueryRef<TData, TVariables>;
 type _Test_PreloadedQueryRef = PreloadedQueryRef<TData, TVariables>;
 class _Test_InternalQueryReference extends InternalQueryReference<TData> {}
 const _test_InternalQueryReference = new InternalQueryReference<TData>(observable, options)
"
`;

exports[`all exports > @apollo/client/react/parser 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/react/ssr 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/testing 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  MockedProviderProps,
-  MockedProvider,
-  MockedResponse,
-  MockLinkOptions,
-  ResultFunction,
   MockLink,
   mockSingleLink,
   MockSubscriptionLink,
   mockObservableLink,
@@  @@
   wait,
   tick,
   withErrorSpy,
   withWarningSpy,
-  withLogSpy
+  withLogSpy,
 } from "@apollo/client/testing";
+import { MockedProvider, MockedProviderProps } from "@apollo/client/testing/react";
 type _Test_MockedProviderProps = MockedProviderProps<TSerializedCache>;
 class _Test_MockedProvider extends MockedProvider {}
 const _test_MockedProvider = new MockedProvider(props)
-type _Test_MockedResponse = MockedResponse<TData, TVariables>;
-type _Test_MockLinkOptions = MockLinkOptions;
-type _Test_ResultFunction = ResultFunction<T, V>;
+type _Test_MockedResponse = MockLink.MockedResponse<TData, TVariables>;
+type _Test_MockLinkOptions = MockLink.Options;
+type _Test_ResultFunction = MockLink.ResultFunction<T, V>;
 class _Test_MockLink extends MockLink {}
 const _test_MockLink = new MockLink(mockedResponses, addTypename, options)
 mockSingleLink(mockedResponses)
 class _Test_MockSubscriptionLink extends MockSubscriptionLink {}
"
`;

exports[`all exports > @apollo/client/testing/core 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  MockedResponse,
-  MockLinkOptions,
-  ResultFunction,
   MockLink,
   mockSingleLink,
   MockSubscriptionLink,
   mockObservableLink,
@@  @@
   wait,
   tick,
   withErrorSpy,
   withWarningSpy,
-  withLogSpy
-} from "@apollo/client/testing/core";
-type _Test_MockedResponse = MockedResponse<TData, TVariables>;
-type _Test_MockLinkOptions = MockLinkOptions;
-type _Test_ResultFunction = ResultFunction<T, V>;
+  withLogSpy,
+} from "@apollo/client/testing";
+type _Test_MockedResponse = MockLink.MockedResponse<TData, TVariables>;
+type _Test_MockLinkOptions = MockLink.Options;
+type _Test_ResultFunction = MockLink.ResultFunction<T, V>;
 class _Test_MockLink extends MockLink {}
 const _test_MockLink = new MockLink(mockedResponses, addTypename, options)
 mockSingleLink(mockedResponses)
 class _Test_MockSubscriptionLink extends MockSubscriptionLink {}
"
`;

exports[`all exports > @apollo/client/testing/experimental 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/utilities 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
 import {
-  DEV,
-  maybe,
   DirectiveInfo,
   InclusionDirectives,
-  shouldInclude,
-  hasDirectives,
   hasAnyDirectives,
   hasAllDirectives,
   hasClientExports,
   getDirectiveNames,
   getInclusionDirectives,
   getFragmentMaskMode,
   DocumentTransformCacheKey,
   DocumentTransform,
-  FragmentMap,
-  FragmentMapFunction,
-  createFragmentMap,
-  getFragmentQueryDocument,
-  getFragmentFromSelection,
   isFullyUnmaskedOperation,
-  checkDocument,
-  getOperationDefinition,
-  getOperationName,
-  getFragmentDefinitions,
-  getQueryDefinition,
-  getFragmentDefinition,
   getMainDefinition,
-  getDefaultValues,
   print,
   StoreObject,
   AsStoreObject,
   Reference,
   StoreValue,
   Directives,
   VariableValue,
-  makeReference,
-  isDocumentNode,
   isReference,
-  isField,
   isInlineFragment,
   valueToObjectRepresentation,
-  storeKeyNameFromField,
-  argumentsObjectFromField,
-  resultKeyNameFromField,
-  getStoreKeyName,
   getTypenameFromResult,
   RemoveNodeConfig,
   GetNodeConfig,
   RemoveDirectiveConfig,
@@  @@
   RemoveVariableDefinitionConfig,
   addTypenameToDocument,
   addNonReactiveToNamedFragments,
   buildQueryFromSelectionSet,
-  removeDirectivesFromDocument,
   removeConnectionDirectiveFromDocument,
   removeArgumentsFromDocument,
   removeFragmentSpreadFromDocument,
   removeClientSetsFromDocument,
@@  @@
   ObservableSubscription,
   Observable,
   PromiseWithState,
   isStatefulPromise,
-  createFulfilledPromise,
-  createRejectedPromise,
   wrapPromiseWithState,
-  preventUnhandledRejection,
-  maybeDeepFreeze,
   canonicalStringify,
-  omitDeep,
   stripTypename,
-  DeepOmit,
   DeepPartial,
   OnlyRequiredProperties,
-  Prettify,
-  Primitive,
   UnionToIntersection,
-  NoInfer,
-  RemoveIndexSignature,
-  AutoCleanedStrongCache,
-  AutoCleanedWeakCache,
   cacheSizes,
   defaultCacheSizes,
   CacheSizes,
-  mergeDeep,
-  mergeDeepArray,
   TupleToIntersection,
   ReconcilerFunction,
-  DeepMerger,
-  cloneDeep,
   iterateObserversSafely,
   asyncMap,
   ConcastSourcesIterable,
   ConcastSourcesArray,
   Concast,
   fixObservableSubclass,
-  isNonEmptyArray,
-  isArray,
-  isNonNullObject,
-  isPlainObject,
-  graphQLResultHasError,
-  getGraphQLErrorsFromResult,
   canUseWeakMap,
   canUseWeakSet,
   canUseSymbol,
   canUseAsyncIteratorSymbol,
-  canUseDOM,
   canUseLayoutEffect,
-  compact,
-  makeUniqueId,
-  stringifyForDisplay,
-  mergeOptions,
   isExecutionPatchIncrementalResult,
   isExecutionPatchInitialResult,
   isExecutionPatchResult,
   isApolloPayloadResult,
   mergeIncrementalData,
-  IsStrictlyAny
+  IsStrictlyAny,
 } from "@apollo/client/utilities";
-const _Test_DEV = DEV;
+
+import {
+  argumentsObjectFromField,
+  AutoCleanedStrongCache,
+  AutoCleanedWeakCache,
+  canUseDOM,
+  checkDocument,
+  cloneDeep,
+  compact,
+  createFragmentMap,
+  createFulfilledPromise,
+  createRejectedPromise,
+  DeepMerger,
+  getDefaultValues,
+  getFragmentDefinition,
+  getFragmentDefinitions,
+  getFragmentFromSelection,
+  getFragmentQueryDocument,
+  getGraphQLErrorsFromResult,
+  getOperationDefinition,
+  getOperationName,
+  getQueryDefinition,
+  getStoreKeyName,
+  graphQLResultHasError,
+  hasDirectives,
+  isArray,
+  isDocumentNode,
+  isField,
+  isNonEmptyArray,
+  isNonNullObject,
+  isPlainObject,
+  makeReference,
+  makeUniqueId,
+  maybeDeepFreeze,
+  mergeDeep,
+  mergeDeepArray,
+  mergeOptions,
+  omitDeep,
+  preventUnhandledRejection,
+  removeDirectivesFromDocument,
+  resultKeyNameFromField,
+  shouldInclude,
+  storeKeyNameFromField,
+  stringifyForDisplay,
+  DeepOmit,
+  FragmentMap,
+  FragmentMapFunction,
+  NoInfer,
+  Prettify,
+  Primitive,
+  RemoveIndexSignature,
+} from "@apollo/client/utilities/internal";
+
+const _Test_DEV = __DEV__;
 maybe<T>(thunk)
 type _Test_DirectiveInfo = DirectiveInfo;
 type _Test_InclusionDirectives = InclusionDirectives;
 shouldInclude(param0, variables)
"
`;

exports[`all exports > @apollo/client/utilities/globals 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`all exports > @apollo/client/utilities/subscriptions/relay 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloClientOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloClientOptions } from "@apollo/client";
-type _Test_ApolloClientOptions = ApolloClientOptions<TCacheShape>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_ApolloClientOptions = ApolloClient.Options<TCacheShape>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ApolloConsumer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloContextValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloContextValue } from "@apollo/client";
+import type { ApolloContextValue } from "@apollo/client/react";
 type _Test_ApolloContextValue = ApolloContextValue;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloPayloadResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ApolloProvider 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloProvider } from "@apollo/client";
+import { ApolloProvider } from "@apollo/client/react";
 const _Test_ApolloProvider = ApolloProvider;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ApolloQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloQueryResult } from "@apollo/client";
-type _Test_ApolloQueryResult = ApolloQueryResult<T>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_ApolloQueryResult = ObservableQuery.Result<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ApolloReducerConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > BackgroundQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BackgroundQueryHookFetchPolicy } from "@apollo/client";
-type _Test_BackgroundQueryHookFetchPolicy = BackgroundQueryHookFetchPolicy;
\\ No newline at end of file
+import type { useBackgroundQuery } from "@apollo/client/react";
+type _Test_BackgroundQueryHookFetchPolicy = useBackgroundQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > BackgroundQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BackgroundQueryHookOptions } from "@apollo/client";
-type _Test_BackgroundQueryHookOptions = BackgroundQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useBackgroundQuery } from "@apollo/client/react";
+type _Test_BackgroundQueryHookOptions = useBackgroundQuery.Options<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > BaseMutationOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > BaseQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > BaseSubscriptionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BaseSubscriptionOptions } from "@apollo/client";
-type _Test_BaseSubscriptionOptions = BaseSubscriptionOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useSubscription } from "@apollo/client/react";
+type _Test_BaseSubscriptionOptions = useSubscription.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > Cache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ClientParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > CommonOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Context 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Context } from "@apollo/client";
-type _Test_Context = Context;
\\ No newline at end of file
+import type { DefaultContext } from "@apollo/client";
+type _Test_Context = DefaultContext;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > DataMasking 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DataProxy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DefaultContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DefaultOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DefaultOptions } from "@apollo/client";
-type _Test_DefaultOptions = DefaultOptions;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_DefaultOptions = ApolloClient.DefaultOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > DiffQueryAgainstStoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DocumentTransform 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DocumentTransformCacheKey 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > DocumentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ErrorPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ExecutionPatchIncrementalResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchIncrementalResult } from "@apollo/client";
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ExecutionPatchInitialResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchInitialResult } from "@apollo/client";
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ExecutionPatchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchResult } from "@apollo/client";
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > FetchMoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchMoreOptions } from "@apollo/client";
-type _Test_FetchMoreOptions = FetchMoreOptions<TData, TVariables>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_FetchMoreOptions = ObservableQuery.FetchMoreOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > FetchMoreQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FetchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchResult } from "@apollo/client";
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > FieldFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FieldMergeFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FieldPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FieldReadFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FragmentMatcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > FragmentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > GraphQLRequest 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { GraphQLRequest } from "@apollo/client";
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > HttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > HttpOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > IDocumentDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > IdGetter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > IdGetterObj 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InMemoryCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InMemoryCacheConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > IncrementalPayload 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { IncrementalPayload } from "@apollo/client";
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > InternalRefetchQueriesInclude 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InternalRefetchQueriesMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InternalRefetchQueriesOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InternalRefetchQueriesResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > InternalRefetchQueryDescriptor 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > LazyQueryExecFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryExecFunction } from "@apollo/client";
-type _Test_LazyQueryExecFunction = LazyQueryExecFunction<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryExecFunction = useLazyQuery.ExecFunction<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LazyQueryHookExecOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryHookExecOptions } from "@apollo/client";
-type _Test_LazyQueryHookExecOptions = LazyQueryHookExecOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryHookExecOptions = useLazyQuery.ExecOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LazyQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryHookOptions } from "@apollo/client";
-type _Test_LazyQueryHookOptions = LazyQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryHookOptions = useLazyQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LazyQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryResult } from "@apollo/client";
-type _Test_LazyQueryResult = LazyQueryResult<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryResult = useLazyQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LazyQueryResultTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryResultTuple } from "@apollo/client";
-type _Test_LazyQueryResultTuple = LazyQueryResultTuple<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryResultTuple = useLazyQuery.ResultTuple<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LoadQueryFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadQueryFunction } from "@apollo/client";
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
\\ No newline at end of file
+import type { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LoadableQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadableQueryHookFetchPolicy } from "@apollo/client";
-type _Test_LoadableQueryHookFetchPolicy = LoadableQueryHookFetchPolicy;
\\ No newline at end of file
+import type { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadableQueryHookFetchPolicy = useLoadableQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > LoadableQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadableQueryHookOptions } from "@apollo/client";
-type _Test_LoadableQueryHookOptions = LoadableQueryHookOptions;
\\ No newline at end of file
+import type { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadableQueryHookOptions = useLoadableQuery.Options;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > Masked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MaskedDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MaybeMasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MergeInfo 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MergeTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MethodKeys 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MissingFieldError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationFunction } from "@apollo/client";
+import type { MutationFunction } from "@apollo/client/react";
 type _Test_MutationFunction = MutationFunction<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationFunctionOptions } from "@apollo/client";
-type _Test_MutationFunctionOptions = MutationFunctionOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import type { useMutation } from "@apollo/client/react";
+type _Test_MutationFunctionOptions = useMutation.MutationFunctionOptions<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationHookOptions } from "@apollo/client";
-type _Test_MutationHookOptions = MutationHookOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import type { useMutation } from "@apollo/client/react";
+type _Test_MutationHookOptions = useMutation.Options<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationOptions } from "@apollo/client";
-type _Test_MutationOptions = MutationOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_MutationOptions = ApolloClient.MutateOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationQueryReducer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationQueryReducersMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationResult } from "@apollo/client";
-type _Test_MutationResult = MutationResult<TData>;
\\ No newline at end of file
+import type { useMutation } from "@apollo/client/react";
+type _Test_MutationResult = useMutation.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationTuple } from "@apollo/client";
-type _Test_MutationTuple = MutationTuple<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import type { useMutation } from "@apollo/client/react";
+type _Test_MutationTuple = useMutation.ResultTuple<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > MutationUpdaterFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > MutationUpdaterFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > NetworkStatus 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > NextLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NextLink } from "@apollo/client";
-type _Test_NextLink = NextLink;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_NextLink = ApolloLink.ForwardFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > NoInfer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NoInfer } from "@apollo/client";
+import type { NoInfer } from "@apollo/client/utilities/internal";
 type _Test_NoInfer = NoInfer<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > NormalizedCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > NormalizedCacheObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Observable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ObservableQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ObservableQueryFields 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ObservableSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Observer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > OnDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OnDataOptions } from "@apollo/client";
-type _Test_OnDataOptions = OnDataOptions<TData>;
\\ No newline at end of file
+import type { useSubscription } from "@apollo/client/react";
+type _Test_OnDataOptions = useSubscription.OnDataOptions<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > OnQueryUpdated 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > OnSubscriptionDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OnSubscriptionDataOptions } from "@apollo/client";
-type _Test_OnSubscriptionDataOptions = OnSubscriptionDataOptions<TData>;
\\ No newline at end of file
+import type { useSubscription } from "@apollo/client/react";
+type _Test_OnSubscriptionDataOptions = useSubscription.OnSubscriptionDataOptions<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > Operation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Operation } from "@apollo/client";
-type _Test_Operation = Operation;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_Operation = ApolloLink.Operation;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > OperationVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > OptimisticStoreItem 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Path 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Path } from "@apollo/client";
-type _Test_Path = Path;
\\ No newline at end of file
+import { Incremental } from "@apollo/client";
+type _Test_Path = Incremental.Path;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > PossibleTypesMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > PreloadQueryFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PreloadQueryFetchPolicy } from "@apollo/client";
+import type { PreloadQueryFetchPolicy } from "@apollo/client/react";
 type _Test_PreloadQueryFetchPolicy = PreloadQueryFetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > PreloadQueryFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PreloadQueryFunction } from "@apollo/client";
+import type { PreloadQueryFunction } from "@apollo/client/react";
 type _Test_PreloadQueryFunction = PreloadQueryFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > PreloadQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PreloadQueryOptions } from "@apollo/client";
+import type { PreloadQueryOptions } from "@apollo/client/react";
 type _Test_PreloadQueryOptions = PreloadQueryOptions<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > PreloadedQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PreloadedQueryRef } from "@apollo/client";
+import type { PreloadedQueryRef } from "@apollo/client/react";
 type _Test_PreloadedQueryRef = PreloadedQueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > PureQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > QueryDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > QueryFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryFunctionOptions } from "@apollo/client";
-type _Test_QueryFunctionOptions = QueryFunctionOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useQuery } from "@apollo/client/react";
+type _Test_QueryFunctionOptions = useQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryHookOptions } from "@apollo/client";
-type _Test_QueryHookOptions = QueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useQuery } from "@apollo/client/react";
+type _Test_QueryHookOptions = useQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryLazyOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > QueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryOptions } from "@apollo/client";
-type _Test_QueryOptions = QueryOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_QueryOptions = ApolloClient.QueryOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryRef } from "@apollo/client";
+import type { QueryRef } from "@apollo/client/react";
 type _Test_QueryRef = QueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryReference } from "@apollo/client";
-type _Test_QueryReference = QueryReference<TData, TVariables>;
\\ No newline at end of file
+import type { QueryRef } from "@apollo/client/react";
+type _Test_QueryReference = QueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryResult } from "@apollo/client";
-type _Test_QueryResult = QueryResult<TData, TVariables>;
\\ No newline at end of file
+import type { useQuery } from "@apollo/client/react";
+type _Test_QueryResult = useQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > QueryTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryTuple } from "@apollo/client";
-type _Test_QueryTuple = QueryTuple<TData, TVariables>;
\\ No newline at end of file
+import type { useLazyQuery } from "@apollo/client/react";
+type _Test_QueryTuple = useLazyQuery.ResultTuple<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > ReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ReadMergeModifyContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ReadQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Reference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RefetchQueriesFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RefetchQueriesInclude 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RefetchQueriesOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesOptions } from "@apollo/client";
-type _Test_RefetchQueriesOptions = RefetchQueriesOptions<TCache, TResult>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_RefetchQueriesOptions = ApolloClient.RefetchQueriesOptions<TCache, TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > RefetchQueriesPromiseResults 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RefetchQueriesResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesResult } from "@apollo/client";
-type _Test_RefetchQueriesResult = RefetchQueriesResult<TResult>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_RefetchQueriesResult = ApolloClient.RefetchQueriesResult<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > RefetchQueryDescriptor 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RefetchWritePolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > RequestHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RequestHandler } from "@apollo/client";
-type _Test_RequestHandler = RequestHandler;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_RequestHandler = ApolloLink.RequestHandler;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > Resolver 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Resolvers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > ServerParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > SingleExecutionResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SingleExecutionResult } from "@apollo/client";
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import { FormattedExecutionResult } from "@apollo/client";
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SkipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SkipToken } from "@apollo/client";
+import type { SkipToken } from "@apollo/client/react";
 type _Test_SkipToken = SkipToken;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > StoreObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > StoreValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > SubscribeToMoreFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > SubscribeToMoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscribeToMoreOptions } from "@apollo/client";
-type _Test_SubscribeToMoreOptions = SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_SubscribeToMoreOptions = ObservableQuery.SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SubscribeToMoreUpdateQueryFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > SubscriptionCurrentObservable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > SubscriptionDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionDataOptions } from "@apollo/client";
+import type { SubscriptionDataOptions } from "@apollo/client/react";
 type _Test_SubscriptionDataOptions = SubscriptionDataOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SubscriptionHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionHookOptions } from "@apollo/client";
-type _Test_SubscriptionHookOptions = SubscriptionHookOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useSubscription } from "@apollo/client/react";
+type _Test_SubscriptionHookOptions = useSubscription.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SubscriptionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionOptions } from "@apollo/client";
-type _Test_SubscriptionOptions = SubscriptionOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_SubscriptionOptions = ApolloClient.SubscribeOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SubscriptionResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionResult } from "@apollo/client";
-type _Test_SubscriptionResult = SubscriptionResult<TData, TVariables>;
\\ No newline at end of file
+import type { useSubscription } from "@apollo/client/react";
+type _Test_SubscriptionResult = useSubscription.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SuspenseQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SuspenseQueryHookFetchPolicy } from "@apollo/client";
-type _Test_SuspenseQueryHookFetchPolicy = SuspenseQueryHookFetchPolicy;
\\ No newline at end of file
+import type { useSuspenseQuery } from "@apollo/client/react";
+type _Test_SuspenseQueryHookFetchPolicy = useSuspenseQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > SuspenseQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SuspenseQueryHookOptions } from "@apollo/client";
-type _Test_SuspenseQueryHookOptions = SuspenseQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useSuspenseQuery } from "@apollo/client/react";
+type _Test_SuspenseQueryHookOptions = useSuspenseQuery.Options<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > Transaction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > TypePolicies 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > TypePolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > TypedDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > Unmasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > UpdateQueryMapFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > UpdateQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > UriFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > UseBackgroundQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseBackgroundQueryResult } from "@apollo/client";
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
\\ No newline at end of file
+import type { useBackgroundQuery } from "@apollo/client/react";
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentOptions } from "@apollo/client";
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
\\ No newline at end of file
+import type { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentResult } from "@apollo/client";
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
\\ No newline at end of file
+import type { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentResult = useFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseLoadableQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseLoadableQueryResult } from "@apollo/client";
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
\\ No newline at end of file
+import type { useLoadableQuery } from "@apollo/client/react";
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseQueryRefHandlersResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseQueryRefHandlersResult } from "@apollo/client";
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
\\ No newline at end of file
+import type { useQueryRefHandlers } from "@apollo/client/react";
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseReadQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseReadQueryResult } from "@apollo/client";
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
\\ No newline at end of file
+import type { useReadQuery } from "@apollo/client/react";
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseSuspenseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentOptions } from "@apollo/client";
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
\\ No newline at end of file
+import type { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseSuspenseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentResult } from "@apollo/client";
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
\\ No newline at end of file
+import type { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > UseSuspenseQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseQueryResult } from "@apollo/client";
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
\\ No newline at end of file
+import type { useSuspenseQuery } from "@apollo/client/react";
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > VariablesOption 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { VariablesOption } from "@apollo/client";
+import type { VariablesOption } from "@apollo/client/utilities/internal";
 type _Test_VariablesOption = VariablesOption<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > WatchFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > WatchFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > WatchQueryFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > WatchQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchQueryOptions } from "@apollo/client";
-type _Test_WatchQueryOptions = WatchQueryOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_WatchQueryOptions = ApolloClient.WatchQueryOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > checkFetcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > concat 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > createHttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > createQueryPreloader 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createQueryPreloader } from "@apollo/client";
+import { createQueryPreloader } from "@apollo/client/react";
 createQueryPreloader(client)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > createSignalIfSupported 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > defaultDataIdFromObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > defaultPrinter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > disableExperimentalFragmentVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > disableFragmentWarnings 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > empty 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > enableExperimentalFragmentVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > execute 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > fallbackHttpConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > from 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > fromError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > fromPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > getApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getApolloContext } from "@apollo/client";
+import { getApolloContext } from "@apollo/client/react";
 getApolloContext()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > gql 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > isApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > isNetworkRequestSettled 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > isReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > makeReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeReference } from "@apollo/client";
 makeReference(id)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > makeVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > mergeOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mergeOptions } from "@apollo/client";
 mergeOptions<TDefaultOptions, TOptions>(defaults, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > operationName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > parseAndCheckHttpResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > parser 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > resetApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > resetCaches 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > rewriteURIForGET 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > selectHttpOptionsAndBody 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > selectHttpOptionsAndBodyInternal 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > selectURI 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > serializeFetchParameter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > setLogVerbosity 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > skipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { skipToken } from "@apollo/client";
+import { skipToken } from "@apollo/client/react";
 const _Test_skipToken = skipToken;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > split 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > throwServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > toPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client > useApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useApolloClient } from "@apollo/client";
+import { useApolloClient } from "@apollo/client/react";
 useApolloClient(override)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useBackgroundQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useBackgroundQuery } from "@apollo/client";
+import { useBackgroundQuery } from "@apollo/client/react";
 useBackgroundQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useFragment } from "@apollo/client";
+import { useFragment } from "@apollo/client/react";
 useFragment<TData, TVars>(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useLazyQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useLazyQuery } from "@apollo/client";
+import { useLazyQuery } from "@apollo/client/react";
 useLazyQuery<TData, TVariables>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useLoadableQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useLoadableQuery } from "@apollo/client";
+import { useLoadableQuery } from "@apollo/client/react";
 useLoadableQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useMutation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useMutation } from "@apollo/client";
+import { useMutation } from "@apollo/client/react";
 useMutation<TData, TVariables, TContext, TCache>(mutation, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useQuery } from "@apollo/client";
+import { useQuery } from "@apollo/client/react";
 useQuery<TData, TVariables>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useQueryRefHandlers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useQueryRefHandlers } from "@apollo/client";
+import { useQueryRefHandlers } from "@apollo/client/react";
 useQueryRefHandlers<TData, TVariables>(queryRef)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useReactiveVar } from "@apollo/client";
+import { useReactiveVar } from "@apollo/client/react";
 useReactiveVar<T>(rv)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useReadQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useReadQuery } from "@apollo/client";
+import { useReadQuery } from "@apollo/client/react";
 useReadQuery<TData>(queryRef)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSubscription } from "@apollo/client";
+import { useSubscription } from "@apollo/client/react";
 useSubscription<TData, TVariables>(subscription, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useSuspenseFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSuspenseFragment } from "@apollo/client";
+import { useSuspenseFragment } from "@apollo/client/react";
 useSuspenseFragment<TData, TVariables>(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client > useSuspenseQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSuspenseQuery } from "@apollo/client";
+import { useSuspenseQuery } from "@apollo/client/react";
 useSuspenseQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/cache > ApolloCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ApolloReducerConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Cache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > DataProxy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > DiffQueryAgainstStoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > EntityStore 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > FieldFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > FieldMergeFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > FieldPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > FieldReadFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > FragmentRegistryAPI 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > IdGetter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > IdGetterObj 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > InMemoryCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > InMemoryCacheConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > MergeInfo 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > MergeTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > MissingFieldError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > MissingTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Modifier 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ModifierDetails 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Modifiers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > NormalizedCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > NormalizedCacheObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > OptimisticStoreItem 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Policies 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > PossibleTypesMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ReadFieldOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ReadMergeModifyContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > ReadQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Reference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > StoreObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > StoreValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > Transaction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > TypePolicies 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > TypePolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > WatchFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchFragmentOptions } from "@apollo/client/cache";
-type _Test_WatchFragmentOptions = WatchFragmentOptions<TData, TVars>;
\\ No newline at end of file
+import { ApolloCache } from "@apollo/client/cache";
+type _Test_WatchFragmentOptions = ApolloCache.WatchFragmentOptions<TData, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/cache > WatchFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchFragmentResult } from "@apollo/client/cache";
-type _Test_WatchFragmentResult = WatchFragmentResult<TData>;
\\ No newline at end of file
+import { ApolloCache } from "@apollo/client/cache";
+type _Test_WatchFragmentResult = ApolloCache.WatchFragmentResult<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/cache > cacheSlot 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > canonicalStringify 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > createFragmentRegistry 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > defaultDataIdFromObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > fieldNameFromStoreName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > isReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/cache > makeReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeReference } from "@apollo/client/cache";
 makeReference(id)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/cache > makeVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/core > ApolloCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloCache } from "@apollo/client/core";
+import { ApolloCache } from "@apollo/client";
 class _Test_ApolloCache extends ApolloCache<TSerialized> {}
 const _test_ApolloCache = new ApolloCache<TSerialized>()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloClient } from "@apollo/client/core";
+import { ApolloClient } from "@apollo/client";
 class _Test_ApolloClient extends ApolloClient<TCacheShape> {}
 const _test_ApolloClient = new ApolloClient<TCacheShape>(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloClientOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloClientOptions } from "@apollo/client/core";
-type _Test_ApolloClientOptions = ApolloClientOptions<TCacheShape>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_ApolloClientOptions = ApolloClient.Options<TCacheShape>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloError } from "@apollo/client/core";
+import { ApolloError } from "@apollo/client";
 class _Test_ApolloError extends ApolloError {}
 const _test_ApolloError = new ApolloError(param0)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloLink } from "@apollo/client/core";
+import { ApolloLink } from "@apollo/client";
 class _Test_ApolloLink extends ApolloLink {}
 const _test_ApolloLink = new ApolloLink(request)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloPayloadResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloPayloadResult } from "@apollo/client/core";
+import { ApolloPayloadResult } from "@apollo/client";
 type _Test_ApolloPayloadResult = ApolloPayloadResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloQueryResult } from "@apollo/client/core";
-type _Test_ApolloQueryResult = ApolloQueryResult<T>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_ApolloQueryResult = ObservableQuery.Result<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ApolloReducerConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloReducerConfig } from "@apollo/client/core";
+import { ApolloReducerConfig } from "@apollo/client";
 type _Test_ApolloReducerConfig = ApolloReducerConfig;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Cache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Cache } from "@apollo/client/core";
+import { Cache } from "@apollo/client";
 const _Test_Cache = Cache;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ClientParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ClientParseError } from "@apollo/client/core";
+import { ClientParseError } from "@apollo/client";
 type _Test_ClientParseError = ClientParseError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DataMasking 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DataMasking } from "@apollo/client/core";
+import { DataMasking } from "@apollo/client";
 type _Test_DataMasking = DataMasking;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DataProxy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DataProxy } from "@apollo/client/core";
+import { DataProxy } from "@apollo/client";
 const _Test_DataProxy = DataProxy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DefaultContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DefaultContext } from "@apollo/client/core";
+import { DefaultContext } from "@apollo/client";
 type _Test_DefaultContext = DefaultContext;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DefaultOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DefaultOptions } from "@apollo/client/core";
-type _Test_DefaultOptions = DefaultOptions;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_DefaultOptions = ApolloClient.DefaultOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DiffQueryAgainstStoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DiffQueryAgainstStoreOptions } from "@apollo/client/core";
+import { DiffQueryAgainstStoreOptions } from "@apollo/client";
 type _Test_DiffQueryAgainstStoreOptions = DiffQueryAgainstStoreOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DocumentNode } from "@apollo/client/core";
+import { DocumentNode } from "@apollo/client";
 type _Test_DocumentNode = DocumentNode;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DocumentTransform 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DocumentTransform } from "@apollo/client/core";
+import { DocumentTransform } from "@apollo/client";
 class _Test_DocumentTransform extends DocumentTransform {}
 const _test_DocumentTransform = new DocumentTransform(transform, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > DocumentTransformCacheKey 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DocumentTransformCacheKey } from "@apollo/client/core";
+import { DocumentTransformCacheKey } from "@apollo/client";
 type _Test_DocumentTransformCacheKey = DocumentTransformCacheKey;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ErrorPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ErrorPolicy } from "@apollo/client/core";
+import { ErrorPolicy } from "@apollo/client";
 type _Test_ErrorPolicy = ErrorPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ExecutionPatchIncrementalResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchIncrementalResult } from "@apollo/client/core";
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ExecutionPatchInitialResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchInitialResult } from "@apollo/client/core";
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ExecutionPatchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchResult } from "@apollo/client/core";
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FetchMoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchMoreOptions } from "@apollo/client/core";
-type _Test_FetchMoreOptions = FetchMoreOptions<TData, TVariables>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_FetchMoreOptions = ObservableQuery.FetchMoreOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FetchMoreQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchMoreQueryOptions } from "@apollo/client/core";
+import { FetchMoreQueryOptions } from "@apollo/client";
 type _Test_FetchMoreQueryOptions = FetchMoreQueryOptions<TVariables, TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchPolicy } from "@apollo/client/core";
+import { FetchPolicy } from "@apollo/client";
 type _Test_FetchPolicy = FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FetchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchResult } from "@apollo/client/core";
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FieldFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FieldFunctionOptions } from "@apollo/client/core";
+import { FieldFunctionOptions } from "@apollo/client";
 type _Test_FieldFunctionOptions = FieldFunctionOptions<TArgs, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FieldMergeFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FieldMergeFunction } from "@apollo/client/core";
+import { FieldMergeFunction } from "@apollo/client";
 type _Test_FieldMergeFunction = FieldMergeFunction<TExisting, TIncoming, TOptions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FieldPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FieldPolicy } from "@apollo/client/core";
+import { FieldPolicy } from "@apollo/client";
 type _Test_FieldPolicy = FieldPolicy<TExisting, TIncoming, TReadResult, TOptions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FieldReadFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FieldReadFunction } from "@apollo/client/core";
+import { FieldReadFunction } from "@apollo/client";
 type _Test_FieldReadFunction = FieldReadFunction<TExisting, TReadResult, TOptions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FragmentMatcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FragmentMatcher } from "@apollo/client/core";
+import { FragmentMatcher } from "@apollo/client";
 type _Test_FragmentMatcher = FragmentMatcher;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > FragmentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FragmentType } from "@apollo/client/core";
+import { FragmentType } from "@apollo/client";
 type _Test_FragmentType = FragmentType<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > GraphQLRequest 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { GraphQLRequest } from "@apollo/client/core";
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > HttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { HttpLink } from "@apollo/client/core";
+import { HttpLink } from "@apollo/client";
 class _Test_HttpLink extends HttpLink {}
 const _test_HttpLink = new HttpLink(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > HttpOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { HttpOptions } from "@apollo/client/core";
+import { HttpOptions } from "@apollo/client";
 type _Test_HttpOptions = HttpOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > IdGetter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { IdGetter } from "@apollo/client/core";
+import { IdGetter } from "@apollo/client";
 type _Test_IdGetter = IdGetter;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > IdGetterObj 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { IdGetterObj } from "@apollo/client/core";
+import { IdGetterObj } from "@apollo/client";
 type _Test_IdGetterObj = IdGetterObj;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InMemoryCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InMemoryCache } from "@apollo/client/core";
+import { InMemoryCache } from "@apollo/client";
 class _Test_InMemoryCache extends InMemoryCache {}
 const _test_InMemoryCache = new InMemoryCache(config)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InMemoryCacheConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InMemoryCacheConfig } from "@apollo/client/core";
+import { InMemoryCacheConfig } from "@apollo/client";
 type _Test_InMemoryCacheConfig = InMemoryCacheConfig;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > IncrementalPayload 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { IncrementalPayload } from "@apollo/client/core";
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
\\ No newline at end of file
+import { Defer20220824Handler } from "@apollo/client";
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InternalRefetchQueriesInclude 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InternalRefetchQueriesInclude } from "@apollo/client/core";
+import { InternalRefetchQueriesInclude } from "@apollo/client";
 type _Test_InternalRefetchQueriesInclude = InternalRefetchQueriesInclude;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InternalRefetchQueriesMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InternalRefetchQueriesMap } from "@apollo/client/core";
+import { InternalRefetchQueriesMap } from "@apollo/client";
 type _Test_InternalRefetchQueriesMap = InternalRefetchQueriesMap<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InternalRefetchQueriesOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InternalRefetchQueriesOptions } from "@apollo/client/core";
+import { InternalRefetchQueriesOptions } from "@apollo/client";
 type _Test_InternalRefetchQueriesOptions = InternalRefetchQueriesOptions<TCache, TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InternalRefetchQueriesResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InternalRefetchQueriesResult } from "@apollo/client/core";
+import { InternalRefetchQueriesResult } from "@apollo/client";
 type _Test_InternalRefetchQueriesResult = InternalRefetchQueriesResult<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > InternalRefetchQueryDescriptor 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { InternalRefetchQueryDescriptor } from "@apollo/client/core";
+import { InternalRefetchQueryDescriptor } from "@apollo/client";
 type _Test_InternalRefetchQueryDescriptor = InternalRefetchQueryDescriptor;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Masked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Masked } from "@apollo/client/core";
+import { Masked } from "@apollo/client";
 type _Test_Masked = Masked<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MaskedDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MaskedDocumentNode } from "@apollo/client/core";
+import { MaskedDocumentNode } from "@apollo/client";
 type _Test_MaskedDocumentNode = MaskedDocumentNode<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MaybeMasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MaybeMasked } from "@apollo/client/core";
+import { MaybeMasked } from "@apollo/client";
 type _Test_MaybeMasked = MaybeMasked<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MergeInfo 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MergeInfo } from "@apollo/client/core";
+import { MergeInfo } from "@apollo/client";
 type _Test_MergeInfo = MergeInfo;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MergeTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MergeTree } from "@apollo/client/core";
+import { MergeTree } from "@apollo/client";
 type _Test_MergeTree = MergeTree;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MethodKeys 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MethodKeys } from "@apollo/client/core";
+import { MethodKeys } from "@apollo/client";
 type _Test_MethodKeys = MethodKeys<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MissingFieldError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MissingFieldError } from "@apollo/client/core";
+import { MissingFieldError } from "@apollo/client";
 class _Test_MissingFieldError extends MissingFieldError {}
 const _test_MissingFieldError = new MissingFieldError(message, path, query, variables)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationFetchPolicy } from "@apollo/client/core";
+import { MutationFetchPolicy } from "@apollo/client";
 type _Test_MutationFetchPolicy = MutationFetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationOptions } from "@apollo/client/core";
-type _Test_MutationOptions = MutationOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_MutationOptions = ApolloClient.MutateOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationQueryReducer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationQueryReducer } from "@apollo/client/core";
+import { MutationQueryReducer } from "@apollo/client";
 type _Test_MutationQueryReducer = MutationQueryReducer<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationQueryReducersMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationQueryReducersMap } from "@apollo/client/core";
+import { MutationQueryReducersMap } from "@apollo/client";
 type _Test_MutationQueryReducersMap = MutationQueryReducersMap<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationUpdaterFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationUpdaterFn } from "@apollo/client/core";
+import { MutationUpdaterFn } from "@apollo/client";
 type _Test_MutationUpdaterFn = MutationUpdaterFn<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > MutationUpdaterFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationUpdaterFunction } from "@apollo/client/core";
+import { MutationUpdaterFunction } from "@apollo/client";
 type _Test_MutationUpdaterFunction = MutationUpdaterFunction<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > NetworkStatus 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NetworkStatus } from "@apollo/client/core";
+import { NetworkStatus } from "@apollo/client";
 type _Test_NetworkStatus = NetworkStatus;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > NextLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NextLink } from "@apollo/client/core";
-type _Test_NextLink = NextLink;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_NextLink = ApolloLink.ForwardFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > NormalizedCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NormalizedCache } from "@apollo/client/core";
+import { NormalizedCache } from "@apollo/client";
 type _Test_NormalizedCache = NormalizedCache;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > NormalizedCacheObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NormalizedCacheObject } from "@apollo/client/core";
+import { NormalizedCacheObject } from "@apollo/client";
 type _Test_NormalizedCacheObject = NormalizedCacheObject;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Observable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Observable } from "@apollo/client/core";
\\ No newline at end of file
+import { Observable } from "@apollo/client";
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ObservableQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ObservableQuery } from "@apollo/client/core";
+import { ObservableQuery } from "@apollo/client";
 class _Test_ObservableQuery extends ObservableQuery<TData, TVariables> {}
 const _test_ObservableQuery = new ObservableQuery<TData, TVariables>(param0)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ObservableSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ObservableSubscription } from "@apollo/client/core";
\\ No newline at end of file
+import { ObservableSubscription } from "@apollo/client";
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Observer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Observer } from "@apollo/client/core";
\\ No newline at end of file
+import { Observer } from "@apollo/client";
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > OnQueryUpdated 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OnQueryUpdated } from "@apollo/client/core";
+import { OnQueryUpdated } from "@apollo/client";
 type _Test_OnQueryUpdated = OnQueryUpdated<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Operation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Operation } from "@apollo/client/core";
-type _Test_Operation = Operation;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_Operation = ApolloLink.Operation;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > OperationVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OperationVariables } from "@apollo/client/core";
+import { OperationVariables } from "@apollo/client";
 type _Test_OperationVariables = OperationVariables;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > OptimisticStoreItem 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OptimisticStoreItem } from "@apollo/client/core";
+import { OptimisticStoreItem } from "@apollo/client";
 type _Test_OptimisticStoreItem = OptimisticStoreItem;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Path 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Path } from "@apollo/client/core";
-type _Test_Path = Path;
\\ No newline at end of file
+import { Incremental } from "@apollo/client";
+type _Test_Path = Incremental.Path;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > PossibleTypesMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PossibleTypesMap } from "@apollo/client/core";
+import { PossibleTypesMap } from "@apollo/client";
 type _Test_PossibleTypesMap = PossibleTypesMap;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > PureQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PureQueryOptions } from "@apollo/client/core";
+import { PureQueryOptions } from "@apollo/client";
 type _Test_PureQueryOptions = PureQueryOptions<TVariables, TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > QueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryOptions } from "@apollo/client/core";
-type _Test_QueryOptions = QueryOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_QueryOptions = ApolloClient.QueryOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ReactiveVar } from "@apollo/client/core";
+import { ReactiveVar } from "@apollo/client";
 type _Test_ReactiveVar = ReactiveVar<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ReadMergeModifyContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ReadMergeModifyContext } from "@apollo/client/core";
+import { ReadMergeModifyContext } from "@apollo/client";
 type _Test_ReadMergeModifyContext = ReadMergeModifyContext;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ReadQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ReadQueryOptions } from "@apollo/client/core";
+import { ReadQueryOptions } from "@apollo/client";
 type _Test_ReadQueryOptions = ReadQueryOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Reference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Reference } from "@apollo/client/core";
+import { Reference } from "@apollo/client";
 type _Test_Reference = Reference;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchQueriesInclude 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesInclude } from "@apollo/client/core";
+import { RefetchQueriesInclude } from "@apollo/client";
 type _Test_RefetchQueriesInclude = RefetchQueriesInclude;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchQueriesOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesOptions } from "@apollo/client/core";
-type _Test_RefetchQueriesOptions = RefetchQueriesOptions<TCache, TResult>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_RefetchQueriesOptions = ApolloClient.RefetchQueriesOptions<TCache, TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchQueriesPromiseResults 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesPromiseResults } from "@apollo/client/core";
+import { RefetchQueriesPromiseResults } from "@apollo/client";
 type _Test_RefetchQueriesPromiseResults = RefetchQueriesPromiseResults<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchQueriesResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueriesResult } from "@apollo/client/core";
-type _Test_RefetchQueriesResult = RefetchQueriesResult<TResult>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_RefetchQueriesResult = ApolloClient.RefetchQueriesResult<TResult>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchQueryDescriptor 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchQueryDescriptor } from "@apollo/client/core";
+import { RefetchQueryDescriptor } from "@apollo/client";
 type _Test_RefetchQueryDescriptor = RefetchQueryDescriptor;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RefetchWritePolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RefetchWritePolicy } from "@apollo/client/core";
+import { RefetchWritePolicy } from "@apollo/client";
 type _Test_RefetchWritePolicy = RefetchWritePolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > RequestHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RequestHandler } from "@apollo/client/core";
-type _Test_RequestHandler = RequestHandler;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client";
+type _Test_RequestHandler = ApolloLink.RequestHandler;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Resolver 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Resolver } from "@apollo/client/core";
+import { Resolver } from "@apollo/client";
 type _Test_Resolver = Resolver;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Resolvers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Resolvers } from "@apollo/client/core";
+import { Resolvers } from "@apollo/client";
 type _Test_Resolvers = Resolvers;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ServerError } from "@apollo/client/core";
+import { ServerError } from "@apollo/client";
 type _Test_ServerError = ServerError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > ServerParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ServerParseError } from "@apollo/client/core";
+import { ServerParseError } from "@apollo/client";
 type _Test_ServerParseError = ServerParseError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > SingleExecutionResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SingleExecutionResult } from "@apollo/client/core";
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import { FormattedExecutionResult } from "@apollo/client";
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > StoreObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { StoreObject } from "@apollo/client/core";
+import { StoreObject } from "@apollo/client";
 type _Test_StoreObject = StoreObject;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > StoreValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { StoreValue } from "@apollo/client/core";
+import { StoreValue } from "@apollo/client";
 type _Test_StoreValue = StoreValue;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > SubscribeToMoreFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscribeToMoreFunction } from "@apollo/client/core";
+import { SubscribeToMoreFunction } from "@apollo/client";
 type _Test_SubscribeToMoreFunction = SubscribeToMoreFunction<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > SubscribeToMoreOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscribeToMoreOptions } from "@apollo/client/core";
-type _Test_SubscribeToMoreOptions = SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
\\ No newline at end of file
+import { ObservableQuery } from "@apollo/client";
+type _Test_SubscribeToMoreOptions = ObservableQuery.SubscribeToMoreOptions<TData, TSubscriptionVariables, TSubscriptionData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > SubscribeToMoreUpdateQueryFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscribeToMoreUpdateQueryFn } from "@apollo/client/core";
+import { SubscribeToMoreUpdateQueryFn } from "@apollo/client";
 type _Test_SubscribeToMoreUpdateQueryFn = SubscribeToMoreUpdateQueryFn<TData, TVariables, TSubscriptionData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > SubscriptionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionOptions } from "@apollo/client/core";
-type _Test_SubscriptionOptions = SubscriptionOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_SubscriptionOptions = ApolloClient.SubscribeOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Transaction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Transaction } from "@apollo/client/core";
+import { Transaction } from "@apollo/client";
 type _Test_Transaction = Transaction<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > TypePolicies 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { TypePolicies } from "@apollo/client/core";
+import { TypePolicies } from "@apollo/client";
 type _Test_TypePolicies = TypePolicies;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > TypePolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { TypePolicy } from "@apollo/client/core";
+import { TypePolicy } from "@apollo/client";
 type _Test_TypePolicy = TypePolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > TypedDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { TypedDocumentNode } from "@apollo/client/core";
+import { TypedDocumentNode } from "@apollo/client";
 type _Test_TypedDocumentNode = TypedDocumentNode<TResult, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > Unmasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Unmasked } from "@apollo/client/core";
+import { Unmasked } from "@apollo/client";
 type _Test_Unmasked = Unmasked<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > UpdateQueryMapFn 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UpdateQueryMapFn } from "@apollo/client/core";
+import { UpdateQueryMapFn } from "@apollo/client";
 type _Test_UpdateQueryMapFn = UpdateQueryMapFn<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > UpdateQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UpdateQueryOptions } from "@apollo/client/core";
+import { UpdateQueryOptions } from "@apollo/client";
 type _Test_UpdateQueryOptions = UpdateQueryOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > UriFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UriFunction } from "@apollo/client/core";
+import { UriFunction } from "@apollo/client";
 type _Test_UriFunction = UriFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > WatchFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchFragmentOptions } from "@apollo/client/core";
+import { WatchFragmentOptions } from "@apollo/client";
 type _Test_WatchFragmentOptions = WatchFragmentOptions<TData, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > WatchFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchFragmentResult } from "@apollo/client/core";
+import { WatchFragmentResult } from "@apollo/client";
 type _Test_WatchFragmentResult = WatchFragmentResult<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > WatchQueryFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchQueryFetchPolicy } from "@apollo/client/core";
+import { WatchQueryFetchPolicy } from "@apollo/client";
 type _Test_WatchQueryFetchPolicy = WatchQueryFetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > WatchQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WatchQueryOptions } from "@apollo/client/core";
-type _Test_WatchQueryOptions = WatchQueryOptions<TVariables, TData>;
\\ No newline at end of file
+import { ApolloClient } from "@apollo/client";
+type _Test_WatchQueryOptions = ApolloClient.WatchQueryOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > checkFetcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { checkFetcher } from "@apollo/client/core";
+import { checkFetcher } from "@apollo/client";
 const _Test_checkFetcher = checkFetcher;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > concat 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { concat } from "@apollo/client/core";
+import { concat } from "@apollo/client";
 const _Test_concat = concat;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > createHttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createHttpLink } from "@apollo/client/core";
+import { createHttpLink } from "@apollo/client";
 const _Test_createHttpLink = createHttpLink;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > createSignalIfSupported 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createSignalIfSupported } from "@apollo/client/core";
+import { createSignalIfSupported } from "@apollo/client";
 const _Test_createSignalIfSupported = createSignalIfSupported;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > defaultDataIdFromObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { defaultDataIdFromObject } from "@apollo/client/core";
+import { defaultDataIdFromObject } from "@apollo/client";
 defaultDataIdFromObject(param0, context)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > defaultPrinter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { defaultPrinter } from "@apollo/client/core";
+import { defaultPrinter } from "@apollo/client";
 const _Test_defaultPrinter = defaultPrinter;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > disableExperimentalFragmentVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { disableExperimentalFragmentVariables } from "@apollo/client/core";
+import { disableExperimentalFragmentVariables } from "@apollo/client";
 disableExperimentalFragmentVariables()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > disableFragmentWarnings 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { disableFragmentWarnings } from "@apollo/client/core";
+import { disableFragmentWarnings } from "@apollo/client";
 disableFragmentWarnings()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > empty 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { empty } from "@apollo/client/core";
+import { empty } from "@apollo/client";
 const _Test_empty = empty;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > enableExperimentalFragmentVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { enableExperimentalFragmentVariables } from "@apollo/client/core";
+import { enableExperimentalFragmentVariables } from "@apollo/client";
 enableExperimentalFragmentVariables()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > execute 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { execute } from "@apollo/client/core";
+import { execute } from "@apollo/client";
 const _Test_execute = execute;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > fallbackHttpConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { fallbackHttpConfig } from "@apollo/client/core";
+import { fallbackHttpConfig } from "@apollo/client";
 const _Test_fallbackHttpConfig = fallbackHttpConfig;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > from 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { from } from "@apollo/client/core";
+import { from } from "@apollo/client";
 const _Test_from = from;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > fromError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { fromError } from "@apollo/client/core";
+import { fromError } from "@apollo/client";
 fromError<T>(errorValue)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > fromPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { fromPromise } from "@apollo/client/core";
+import { fromPromise } from "@apollo/client";
 fromPromise<T>(promise)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > gql 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { gql } from "@apollo/client/core";
+import { gql } from "@apollo/client";
 gql(literals, args)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > isApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isApolloError } from "@apollo/client/core";
+import { isApolloError } from "@apollo/client";
 isApolloError(err)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > isNetworkRequestSettled 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isNetworkRequestSettled } from "@apollo/client/core";
+import { isNetworkRequestSettled } from "@apollo/client";
 isNetworkRequestSettled(networkStatus)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > isReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isReference } from "@apollo/client/core";
+import { isReference } from "@apollo/client";
 isReference(obj)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > makeReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeReference } from "@apollo/client/core";
 makeReference(id)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > makeVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeVar } from "@apollo/client/core";
+import { makeVar } from "@apollo/client";
 makeVar<T>(value)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > mergeOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mergeOptions } from "@apollo/client/core";
 mergeOptions<TDefaultOptions, TOptions>(defaults, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > parseAndCheckHttpResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { parseAndCheckHttpResponse } from "@apollo/client/core";
+import { parseAndCheckHttpResponse } from "@apollo/client";
 parseAndCheckHttpResponse(operations)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > resetCaches 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { resetCaches } from "@apollo/client/core";
+import { resetCaches } from "@apollo/client";
 resetCaches()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > rewriteURIForGET 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { rewriteURIForGET } from "@apollo/client/core";
+import { rewriteURIForGET } from "@apollo/client";
 rewriteURIForGET(chosenURI, body)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > selectHttpOptionsAndBody 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { selectHttpOptionsAndBody } from "@apollo/client/core";
+import { selectHttpOptionsAndBody } from "@apollo/client";
 selectHttpOptionsAndBody(operation, fallbackConfig, configs)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > selectHttpOptionsAndBodyInternal 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { selectHttpOptionsAndBodyInternal } from "@apollo/client/core";
+import { selectHttpOptionsAndBodyInternal } from "@apollo/client";
 selectHttpOptionsAndBodyInternal(operation, printer, configs)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > selectURI 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { selectURI } from "@apollo/client/core";
+import { selectURI } from "@apollo/client";
 const _Test_selectURI = selectURI;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > serializeFetchParameter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { serializeFetchParameter } from "@apollo/client/core";
+import { serializeFetchParameter } from "@apollo/client";
 const _Test_serializeFetchParameter = serializeFetchParameter;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > setLogVerbosity 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { setLogVerbosity } from "@apollo/client/core";
\\ No newline at end of file
+import { setLogVerbosity } from "@apollo/client";
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > split 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { split } from "@apollo/client/core";
+import { split } from "@apollo/client";
 const _Test_split = split;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > throwServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { throwServerError } from "@apollo/client/core";
+import { throwServerError } from "@apollo/client";
 const _Test_throwServerError = throwServerError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/core > toPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { toPromise } from "@apollo/client/core";
+import { toPromise } from "@apollo/client";
 toPromise<R>(observable)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/dev > ErrorMessageHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/dev > loadDevMessages 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/dev > loadErrorMessageHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/dev > loadErrorMessages 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/dev > setErrorMessageHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > ApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > ApolloErrorOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > GraphQLErrors 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > NetworkError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > PROTOCOL_ERRORS_SYMBOL 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > graphQLResultHasProtocolErrors 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/errors > isApolloError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/batch > BatchHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BatchHandler } from "@apollo/client/link/batch";
-type _Test_BatchHandler = BatchHandler;
\\ No newline at end of file
+import { BatchLink } from "@apollo/client/link/batch";
+type _Test_BatchHandler = BatchLink.BatchHandler;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/batch > BatchLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/batch > BatchableRequest 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/batch > OperationBatcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/batch-http > BatchHttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/context > ContextSetter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ContextSetter } from "@apollo/client/link/context";
-type _Test_ContextSetter = ContextSetter;
\\ No newline at end of file
+import { SetContextLink } from "@apollo/client/link/context";
+type _Test_ContextSetter = SetContextLink.LegacyContextSetter;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/context > setContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/core > ApolloLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloLink } from "@apollo/client/link/core";
+import { ApolloLink } from "@apollo/client/link";
 class _Test_ApolloLink extends ApolloLink {}
 const _test_ApolloLink = new ApolloLink(request)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > ApolloPayloadResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloPayloadResult } from "@apollo/client/link/core";
+import { ApolloPayloadResult } from "@apollo/client/link";
 type _Test_ApolloPayloadResult = ApolloPayloadResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > DocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DocumentNode } from "@apollo/client/link/core";
+import { DocumentNode } from "@apollo/client/link";
 type _Test_DocumentNode = DocumentNode;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > ExecutionPatchIncrementalResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchIncrementalResult } from "@apollo/client/link/core";
-type _Test_ExecutionPatchIncrementalResult = ExecutionPatchIncrementalResult<TData, TExtensions>;
\\ No newline at end of file
+import type { Defer20220824Handler } from "@apollo/client/incremental";
+type _Test_ExecutionPatchIncrementalResult = Defer20220824Handler.SubsequentResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > ExecutionPatchInitialResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchInitialResult } from "@apollo/client/link/core";
-type _Test_ExecutionPatchInitialResult = ExecutionPatchInitialResult<TData, TExtensions>;
\\ No newline at end of file
+import type { Defer20220824Handler } from "@apollo/client/incremental";
+type _Test_ExecutionPatchInitialResult = Defer20220824Handler.InitialResult<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > ExecutionPatchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ExecutionPatchResult } from "@apollo/client/link/core";
-type _Test_ExecutionPatchResult = ExecutionPatchResult<TData, TExtensions>;
\\ No newline at end of file
+import type { Defer20220824Handler } from "@apollo/client/incremental";
+type _Test_ExecutionPatchResult = Defer20220824Handler.Chunk<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > FetchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FetchResult } from "@apollo/client/link/core";
-type _Test_FetchResult = FetchResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client/link";
+type _Test_FetchResult = ApolloLink.Result<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > GraphQLRequest 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { GraphQLRequest } from "@apollo/client/link/core";
-type _Test_GraphQLRequest = GraphQLRequest<TVariables>;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client/link";
+type _Test_GraphQLRequest = ApolloLink.Request<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > IncrementalPayload 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { IncrementalPayload } from "@apollo/client/link/core";
-type _Test_IncrementalPayload = IncrementalPayload<TData, TExtensions>;
\\ No newline at end of file
+import type { Defer20220824Handler } from "@apollo/client/incremental";
+type _Test_IncrementalPayload = Defer20220824Handler.IncrementalDeferPayload<TData, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > NextLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NextLink } from "@apollo/client/link/core";
-type _Test_NextLink = NextLink;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client/link";
+type _Test_NextLink = ApolloLink.ForwardFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > Operation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Operation } from "@apollo/client/link/core";
-type _Test_Operation = Operation;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client/link";
+type _Test_Operation = ApolloLink.Operation;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > Path 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Path } from "@apollo/client/link/core";
-type _Test_Path = Path;
\\ No newline at end of file
+import type { Incremental } from "@apollo/client/incremental";
+type _Test_Path = Incremental.Path;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > RequestHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RequestHandler } from "@apollo/client/link/core";
-type _Test_RequestHandler = RequestHandler;
\\ No newline at end of file
+import { ApolloLink } from "@apollo/client/link";
+type _Test_RequestHandler = ApolloLink.RequestHandler;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > SingleExecutionResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SingleExecutionResult } from "@apollo/client/link/core";
-type _Test_SingleExecutionResult = SingleExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
+import type { FormattedExecutionResult } from "graphql";
+type _Test_SingleExecutionResult = FormattedExecutionResult<TData, TContext, TExtensions>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > concat 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { concat } from "@apollo/client/link/core";
+import { concat } from "@apollo/client/link";
 const _Test_concat = concat;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > empty 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { empty } from "@apollo/client/link/core";
+import { empty } from "@apollo/client/link";
 const _Test_empty = empty;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > execute 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { execute } from "@apollo/client/link/core";
+import { execute } from "@apollo/client/link";
 const _Test_execute = execute;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > from 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { from } from "@apollo/client/link/core";
+import { from } from "@apollo/client/link";
 const _Test_from = from;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/core > split 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { split } from "@apollo/client/link/core";
+import { split } from "@apollo/client/link";
 const _Test_split = split;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/error > ErrorHandler 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ErrorHandler } from "@apollo/client/link/error";
-type _Test_ErrorHandler = ErrorHandler;
\\ No newline at end of file
+import { ErrorLink } from "@apollo/client/link/error";
+type _Test_ErrorHandler = ErrorLink.ErrorHandler;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/error > ErrorLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/error > ErrorResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ErrorResponse } from "@apollo/client/link/error";
-type _Test_ErrorResponse = ErrorResponse;
\\ No newline at end of file
+import { ErrorLink } from "@apollo/client/link/error";
+type _Test_ErrorResponse = ErrorLink.ErrorHandlerOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/error > onError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > ClientParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > HttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > HttpOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > ServerParseError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ServerParseError } from "@apollo/client/link/http";
+import type { ServerParseError } from "@apollo/client/errors";
 type _Test_ServerParseError = ServerParseError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/http > UriFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > checkFetcher 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > createHttpLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > createSignalIfSupported 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > defaultPrinter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > fallbackHttpConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > parseAndCheckHttpResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > rewriteURIForGET 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > selectHttpOptionsAndBody 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > selectHttpOptionsAndBodyInternal 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > selectURI 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/http > serializeFetchParameter 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/persisted-queries > ErrorResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ErrorResponse } from "@apollo/client/link/persisted-queries";
-type _Test_ErrorResponse = ErrorResponse;
\\ No newline at end of file
+import { PersistedQueryLink } from "@apollo/client/link/persisted-queries";
+type _Test_ErrorResponse = PersistedQueryLink.DisableFunctionOptions;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/persisted-queries > PersistedQueryLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/persisted-queries > VERSION 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/persisted-queries > createPersistedQueryLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/remove-typename > KEEP 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/remove-typename > RemoveTypenameFromVariablesOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RemoveTypenameFromVariablesOptions } from "@apollo/client/link/remove-typename";
-type _Test_RemoveTypenameFromVariablesOptions = RemoveTypenameFromVariablesOptions;
\\ No newline at end of file
+import { RemoveTypenameFromVariablesLink } from "@apollo/client/link/remove-typename";
+type _Test_RemoveTypenameFromVariablesOptions = RemoveTypenameFromVariablesLink.Options;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/remove-typename > removeTypenameFromVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/retry > RetryLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/schema > SchemaLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/subscriptions > GraphQLWsLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > ServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ServerError } from "@apollo/client/link/utils";
+import type { ServerError } from "@apollo/client/errors";
 type _Test_ServerError = ServerError;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/link/utils > createOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > filterOperationVariables 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > fromError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > fromPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > throwServerError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > toPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > transformOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/utils > validateOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/ws > WebSocketLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/link/ws > WebSocketParams 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { WebSocketParams } from "@apollo/client/link/ws";
-type _Test_WebSocketParams = WebSocketParams;
\\ No newline at end of file
+import { WebSocketLink } from "@apollo/client/link/ws";
+type _Test_WebSocketParams = WebSocketLink.Configuration;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/masking > DataMasking 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > FragmentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > Masked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > MaskedDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > MaybeMasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > Unmasked 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > disableWarningsSlot 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > maskFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/masking > maskOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > ApolloConsumer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > ApolloContextValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > ApolloProvider 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > BackgroundQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BackgroundQueryHookFetchPolicy } from "@apollo/client/react";
-type _Test_BackgroundQueryHookFetchPolicy = BackgroundQueryHookFetchPolicy;
\\ No newline at end of file
+import { useBackgroundQuery } from "@apollo/client/react";
+type _Test_BackgroundQueryHookFetchPolicy = useBackgroundQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > BackgroundQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BackgroundQueryHookOptions } from "@apollo/client/react";
-type _Test_BackgroundQueryHookOptions = BackgroundQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import { useBackgroundQuery } from "@apollo/client/react";
+type _Test_BackgroundQueryHookOptions = useBackgroundQuery.Options<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > BaseMutationOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > BaseQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > BaseSubscriptionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { BaseSubscriptionOptions } from "@apollo/client/react";
-type _Test_BaseSubscriptionOptions = BaseSubscriptionOptions<TData, TVariables>;
\\ No newline at end of file
+import { useSubscription } from "@apollo/client/react";
+type _Test_BaseSubscriptionOptions = useSubscription.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > CommonOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > Context 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Context } from "@apollo/client/react";
-type _Test_Context = Context;
\\ No newline at end of file
+import type { DefaultContext } from "@apollo/client";
+type _Test_Context = DefaultContext;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > DocumentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > IDocumentDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > LazyQueryExecFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryExecFunction } from "@apollo/client/react";
-type _Test_LazyQueryExecFunction = LazyQueryExecFunction<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryExecFunction = useLazyQuery.ExecFunction<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LazyQueryHookExecOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryHookExecOptions } from "@apollo/client/react";
-type _Test_LazyQueryHookExecOptions = LazyQueryHookExecOptions<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryHookExecOptions = useLazyQuery.ExecOptions<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LazyQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryHookOptions } from "@apollo/client/react";
-type _Test_LazyQueryHookOptions = LazyQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryHookOptions = useLazyQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LazyQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryResult } from "@apollo/client/react";
-type _Test_LazyQueryResult = LazyQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryResult = useLazyQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LazyQueryResultTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LazyQueryResultTuple } from "@apollo/client/react";
-type _Test_LazyQueryResultTuple = LazyQueryResultTuple<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_LazyQueryResultTuple = useLazyQuery.ResultTuple<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LoadQueryFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadQueryFunction } from "@apollo/client/react";
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LoadableQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadableQueryHookFetchPolicy } from "@apollo/client/react";
-type _Test_LoadableQueryHookFetchPolicy = LoadableQueryHookFetchPolicy;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadableQueryHookFetchPolicy = useLoadableQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > LoadableQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadableQueryHookOptions } from "@apollo/client/react";
-type _Test_LoadableQueryHookOptions = LoadableQueryHookOptions;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadableQueryHookOptions = useLoadableQuery.Options;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > MutationDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > MutationFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > MutationFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationFunctionOptions } from "@apollo/client/react";
-type _Test_MutationFunctionOptions = MutationFunctionOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import { useMutation } from "@apollo/client/react";
+type _Test_MutationFunctionOptions = useMutation.MutationFunctionOptions<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > MutationHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationHookOptions } from "@apollo/client/react";
-type _Test_MutationHookOptions = MutationHookOptions<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import { useMutation } from "@apollo/client/react";
+type _Test_MutationHookOptions = useMutation.Options<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > MutationResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationResult } from "@apollo/client/react";
-type _Test_MutationResult = MutationResult<TData>;
\\ No newline at end of file
+import { useMutation } from "@apollo/client/react";
+type _Test_MutationResult = useMutation.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > MutationTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MutationTuple } from "@apollo/client/react";
-type _Test_MutationTuple = MutationTuple<TData, TVariables, TContext, TCache>;
\\ No newline at end of file
+import { useMutation } from "@apollo/client/react";
+type _Test_MutationTuple = useMutation.ResultTuple<TData, TVariables, TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > NoInfer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NoInfer } from "@apollo/client/react";
+import type { NoInfer } from "@apollo/client/utilities/internal";
 type _Test_NoInfer = NoInfer<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > ObservableQueryFields 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > OnDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OnDataOptions } from "@apollo/client/react";
-type _Test_OnDataOptions = OnDataOptions<TData>;
\\ No newline at end of file
+import { useSubscription } from "@apollo/client/react";
+type _Test_OnDataOptions = useSubscription.OnDataOptions<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > OnSubscriptionDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { OnSubscriptionDataOptions } from "@apollo/client/react";
-type _Test_OnSubscriptionDataOptions = OnSubscriptionDataOptions<TData>;
\\ No newline at end of file
+import { useSubscription } from "@apollo/client/react";
+type _Test_OnSubscriptionDataOptions = useSubscription.OnSubscriptionDataOptions<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > PreloadQueryFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > PreloadQueryFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > PreloadQueryOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > PreloadedQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > QueryDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > QueryFunctionOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryFunctionOptions } from "@apollo/client/react";
-type _Test_QueryFunctionOptions = QueryFunctionOptions<TData, TVariables>;
\\ No newline at end of file
+import { useQuery } from "@apollo/client/react";
+type _Test_QueryFunctionOptions = useQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > QueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryHookOptions } from "@apollo/client/react";
-type _Test_QueryHookOptions = QueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import { useQuery } from "@apollo/client/react";
+type _Test_QueryHookOptions = useQuery.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > QueryLazyOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > QueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > QueryReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryReference } from "@apollo/client/react";
-type _Test_QueryReference = QueryReference<TData, TVariables>;
\\ No newline at end of file
+import { QueryRef } from "@apollo/client/react";
+type _Test_QueryReference = QueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > QueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryResult } from "@apollo/client/react";
-type _Test_QueryResult = QueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useQuery } from "@apollo/client/react";
+type _Test_QueryResult = useQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > QueryTuple 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryTuple } from "@apollo/client/react";
-type _Test_QueryTuple = QueryTuple<TData, TVariables>;
\\ No newline at end of file
+import { useLazyQuery } from "@apollo/client/react";
+type _Test_QueryTuple = useLazyQuery.ResultTuple<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > RefetchQueriesFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > SkipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > SubscriptionCurrentObservable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > SubscriptionDataOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > SubscriptionHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionHookOptions } from "@apollo/client/react";
-type _Test_SubscriptionHookOptions = SubscriptionHookOptions<TData, TVariables>;
\\ No newline at end of file
+import { useSubscription } from "@apollo/client/react";
+type _Test_SubscriptionHookOptions = useSubscription.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > SubscriptionResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SubscriptionResult } from "@apollo/client/react";
-type _Test_SubscriptionResult = SubscriptionResult<TData, TVariables>;
\\ No newline at end of file
+import { useSubscription } from "@apollo/client/react";
+type _Test_SubscriptionResult = useSubscription.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > SuspenseQueryHookFetchPolicy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SuspenseQueryHookFetchPolicy } from "@apollo/client/react";
-type _Test_SuspenseQueryHookFetchPolicy = SuspenseQueryHookFetchPolicy;
\\ No newline at end of file
+import { useSuspenseQuery } from "@apollo/client/react";
+type _Test_SuspenseQueryHookFetchPolicy = useSuspenseQuery.FetchPolicy;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > SuspenseQueryHookOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SuspenseQueryHookOptions } from "@apollo/client/react";
-type _Test_SuspenseQueryHookOptions = SuspenseQueryHookOptions<TData, TVariables>;
\\ No newline at end of file
+import { useSuspenseQuery } from "@apollo/client/react";
+type _Test_SuspenseQueryHookOptions = useSuspenseQuery.Options<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseBackgroundQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseBackgroundQueryResult } from "@apollo/client/react";
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useBackgroundQuery } from "@apollo/client/react";
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentOptions } from "@apollo/client/react";
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
\\ No newline at end of file
+import { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentResult } from "@apollo/client/react";
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
\\ No newline at end of file
+import { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentResult = useFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseLoadableQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseLoadableQueryResult } from "@apollo/client/react";
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseQueryRefHandlersResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseQueryRefHandlersResult } from "@apollo/client/react";
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
\\ No newline at end of file
+import { useQueryRefHandlers } from "@apollo/client/react";
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseReadQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseReadQueryResult } from "@apollo/client/react";
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
\\ No newline at end of file
+import { useReadQuery } from "@apollo/client/react";
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseSuspenseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentOptions } from "@apollo/client/react";
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
\\ No newline at end of file
+import { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseSuspenseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentResult } from "@apollo/client/react";
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
\\ No newline at end of file
+import { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > UseSuspenseQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseQueryResult } from "@apollo/client/react";
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useSuspenseQuery } from "@apollo/client/react";
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > VariablesOption 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { VariablesOption } from "@apollo/client/react";
+import type { VariablesOption } from "@apollo/client/utilities/internal";
 type _Test_VariablesOption = VariablesOption<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react > createQueryPreloader 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > getApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > operationName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > parser 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > resetApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > skipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useBackgroundQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useLazyQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useLoadableQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useMutation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useQueryRefHandlers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useReadQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useSuspenseFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react > useSuspenseQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > Mutation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > MutationComponentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > Query 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > QueryComponentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > Subscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/components > SubscriptionComponentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/context > ApolloConsumer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloConsumer } from "@apollo/client/react/context";
+import { ApolloConsumer } from "@apollo/client/react";
 const _Test_ApolloConsumer = ApolloConsumer;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > ApolloConsumerProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloConsumerProps } from "@apollo/client/react/context";
+import { ApolloConsumerProps } from "@apollo/client/react";
 type _Test_ApolloConsumerProps = ApolloConsumerProps;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > ApolloContextValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloContextValue } from "@apollo/client/react/context";
+import { ApolloContextValue } from "@apollo/client/react";
 type _Test_ApolloContextValue = ApolloContextValue;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > ApolloProvider 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloProvider } from "@apollo/client/react/context";
+import { ApolloProvider } from "@apollo/client/react";
 const _Test_ApolloProvider = ApolloProvider;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > ApolloProviderProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ApolloProviderProps } from "@apollo/client/react/context";
-type _Test_ApolloProviderProps = ApolloProviderProps<TCache>;
\\ No newline at end of file
+import { ApolloProvider } from "@apollo/client/react";
+type _Test_ApolloProviderProps = ApolloProvider.Props<TCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > getApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getApolloContext } from "@apollo/client/react/context";
+import { getApolloContext } from "@apollo/client/react";
 getApolloContext()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/context > resetApolloContext 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { resetApolloContext } from "@apollo/client/react/context";
+import { resetApolloContext } from "@apollo/client/react";
 const _Test_resetApolloContext = resetApolloContext;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hoc > ChildDataProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > ChildMutateProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > ChildProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > DataProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > DataValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > MutateProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > OperationOption 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > OptionProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > QueryControls 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > WithApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > graphql 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > withApollo 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > withMutation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > withQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hoc > withSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/hooks > LoadQueryFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { LoadQueryFunction } from "@apollo/client/react/hooks";
-type _Test_LoadQueryFunction = LoadQueryFunction<TVariables>;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_LoadQueryFunction = useLoadableQuery.LoadQueryFunction<TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > SkipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { SkipToken } from "@apollo/client/react/hooks";
+import { SkipToken } from "@apollo/client/react";
 type _Test_SkipToken = SkipToken;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseBackgroundQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseBackgroundQueryResult } from "@apollo/client/react/hooks";
-type _Test_UseBackgroundQueryResult = UseBackgroundQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useBackgroundQuery } from "@apollo/client/react";
+type _Test_UseBackgroundQueryResult = useBackgroundQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentOptions } from "@apollo/client/react/hooks";
-type _Test_UseFragmentOptions = UseFragmentOptions<TData, TVars>;
\\ No newline at end of file
+import { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentOptions = useFragment.Options<TData, TVars>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseFragmentResult } from "@apollo/client/react/hooks";
-type _Test_UseFragmentResult = UseFragmentResult<TData>;
\\ No newline at end of file
+import { useFragment } from "@apollo/client/react";
+type _Test_UseFragmentResult = useFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseLoadableQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseLoadableQueryResult } from "@apollo/client/react/hooks";
-type _Test_UseLoadableQueryResult = UseLoadableQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useLoadableQuery } from "@apollo/client/react";
+type _Test_UseLoadableQueryResult = useLoadableQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseQueryRefHandlersResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseQueryRefHandlersResult } from "@apollo/client/react/hooks";
-type _Test_UseQueryRefHandlersResult = UseQueryRefHandlersResult<TData, TVariables>;
\\ No newline at end of file
+import { useQueryRefHandlers } from "@apollo/client/react";
+type _Test_UseQueryRefHandlersResult = useQueryRefHandlers.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseReadQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseReadQueryResult } from "@apollo/client/react/hooks";
-type _Test_UseReadQueryResult = UseReadQueryResult<TData>;
\\ No newline at end of file
+import { useReadQuery } from "@apollo/client/react";
+type _Test_UseReadQueryResult = useReadQuery.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseSuspenseFragmentOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentOptions } from "@apollo/client/react/hooks";
-type _Test_UseSuspenseFragmentOptions = UseSuspenseFragmentOptions<TData, TVariables>;
\\ No newline at end of file
+import { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentOptions = useSuspenseFragment.Options<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseSuspenseFragmentResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseFragmentResult } from "@apollo/client/react/hooks";
-type _Test_UseSuspenseFragmentResult = UseSuspenseFragmentResult<TData>;
\\ No newline at end of file
+import { useSuspenseFragment } from "@apollo/client/react";
+type _Test_UseSuspenseFragmentResult = useSuspenseFragment.Result<TData>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > UseSuspenseQueryResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { UseSuspenseQueryResult } from "@apollo/client/react/hooks";
-type _Test_UseSuspenseQueryResult = UseSuspenseQueryResult<TData, TVariables>;
\\ No newline at end of file
+import { useSuspenseQuery } from "@apollo/client/react";
+type _Test_UseSuspenseQueryResult = useSuspenseQuery.Result<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > skipToken 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { skipToken } from "@apollo/client/react/hooks";
+import { skipToken } from "@apollo/client/react";
 const _Test_skipToken = skipToken;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useApolloClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useApolloClient } from "@apollo/client/react/hooks";
+import { useApolloClient } from "@apollo/client/react";
 useApolloClient(override)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useBackgroundQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useBackgroundQuery } from "@apollo/client/react/hooks";
+import { useBackgroundQuery } from "@apollo/client/react";
 useBackgroundQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useFragment } from "@apollo/client/react/hooks";
+import { useFragment } from "@apollo/client/react";
 useFragment<TData, TVars>(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useLazyQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useLazyQuery } from "@apollo/client/react/hooks";
+import { useLazyQuery } from "@apollo/client/react";
 useLazyQuery<TData, TVariables>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useLoadableQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useLoadableQuery } from "@apollo/client/react/hooks";
+import { useLoadableQuery } from "@apollo/client/react";
 useLoadableQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useMutation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useMutation } from "@apollo/client/react/hooks";
+import { useMutation } from "@apollo/client/react";
 useMutation<TData, TVariables, TContext, TCache>(mutation, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useQuery } from "@apollo/client/react/hooks";
+import { useQuery } from "@apollo/client/react";
 useQuery<TData, TVariables>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useQueryRefHandlers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useQueryRefHandlers } from "@apollo/client/react/hooks";
+import { useQueryRefHandlers } from "@apollo/client/react";
 useQueryRefHandlers<TData, TVariables>(queryRef)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useReactiveVar 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useReactiveVar } from "@apollo/client/react/hooks";
+import { useReactiveVar } from "@apollo/client/react";
 useReactiveVar<T>(rv)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useReadQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useReadQuery } from "@apollo/client/react/hooks";
+import { useReadQuery } from "@apollo/client/react";
 useReadQuery<TData>(queryRef)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSubscription } from "@apollo/client/react/hooks";
+import { useSubscription } from "@apollo/client/react";
 useSubscription<TData, TVariables>(subscription, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useSuspenseFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSuspenseFragment } from "@apollo/client/react/hooks";
+import { useSuspenseFragment } from "@apollo/client/react";
 useSuspenseFragment<TData, TVariables>(options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/hooks > useSuspenseQuery 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { useSuspenseQuery } from "@apollo/client/react/hooks";
+import { useSuspenseQuery } from "@apollo/client/react";
 useSuspenseQuery<TData, TVariables, TOptions>(query, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/internal > CacheKey 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > HookWrappers 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > InternalQueryReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > PreloadedQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { PreloadedQueryRef } from "@apollo/client/react/internal";
+import type { PreloadedQueryRef } from "@apollo/client/react";
 type _Test_PreloadedQueryRef = PreloadedQueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/internal > QueryKey 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > QueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryRef } from "@apollo/client/react/internal";
+import type { QueryRef } from "@apollo/client/react";
 type _Test_QueryRef = QueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/internal > QueryReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { QueryReference } from "@apollo/client/react/internal";
-type _Test_QueryReference = QueryReference<TData, TVariables>;
\\ No newline at end of file
+import type { QueryRef } from "@apollo/client/react";
+type _Test_QueryReference = QueryRef<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/react/internal > SuspenseCacheOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > assertWrappedQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > getSuspenseCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > getWrappedPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > unwrapQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > updateWrappedQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/internal > wrapQueryRef 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/parser > DocumentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/parser > IDocumentDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/parser > operationName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/parser > parser 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/parser > verifyDocumentType 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/ssr > RenderPromises 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/ssr > getDataFromTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/ssr > getMarkupFromTree 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/react/ssr > renderToStringWithData 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > MockLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > MockLinkOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockLinkOptions } from "@apollo/client/testing";
-type _Test_MockLinkOptions = MockLinkOptions;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_MockLinkOptions = MockLink.Options;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing > MockSubscriptionLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > MockedProvider 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockedProvider } from "@apollo/client/testing";
+import { MockedProvider } from "@apollo/client/testing/react";
 class _Test_MockedProvider extends MockedProvider {}
 const _test_MockedProvider = new MockedProvider(props)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing > MockedProviderProps 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockedProviderProps } from "@apollo/client/testing";
+import type { MockedProviderProps } from "@apollo/client/testing/react";
 type _Test_MockedProviderProps = MockedProviderProps<TSerializedCache>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing > MockedResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockedResponse } from "@apollo/client/testing";
-type _Test_MockedResponse = MockedResponse<TData, TVariables>;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_MockedResponse = MockLink.MockedResponse<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing > ResultFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ResultFunction } from "@apollo/client/testing";
-type _Test_ResultFunction = ResultFunction<T, V>;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_ResultFunction = MockLink.ResultFunction<T, V>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing > createMockClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > itAsync 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > mockObservableLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > mockSingleLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > subscribeAndCount 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > tick 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > wait 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > withErrorSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > withLogSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing > withWarningSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing/core > MockLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockLink } from "@apollo/client/testing/core";
+import { MockLink } from "@apollo/client/testing";
 class _Test_MockLink extends MockLink {}
 const _test_MockLink = new MockLink(mockedResponses, addTypename, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > MockLinkOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockLinkOptions } from "@apollo/client/testing/core";
-type _Test_MockLinkOptions = MockLinkOptions;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_MockLinkOptions = MockLink.Options;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > MockSubscriptionLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockSubscriptionLink } from "@apollo/client/testing/core";
+import { MockSubscriptionLink } from "@apollo/client/testing";
 class _Test_MockSubscriptionLink extends MockSubscriptionLink {}
 const _test_MockSubscriptionLink = new MockSubscriptionLink()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > MockedResponse 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { MockedResponse } from "@apollo/client/testing/core";
-type _Test_MockedResponse = MockedResponse<TData, TVariables>;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_MockedResponse = MockLink.MockedResponse<TData, TVariables>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > ResultFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { ResultFunction } from "@apollo/client/testing/core";
-type _Test_ResultFunction = ResultFunction<T, V>;
\\ No newline at end of file
+import { MockLink } from "@apollo/client/testing";
+type _Test_ResultFunction = MockLink.ResultFunction<T, V>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > createMockClient 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createMockClient } from "@apollo/client/testing/core";
+import { createMockClient } from "@apollo/client/testing";
 createMockClient<TData>(data, query, variables)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > itAsync 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { itAsync } from "@apollo/client/testing/core";
+import { itAsync } from "@apollo/client/testing";
 const _Test_itAsync = itAsync;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > mockObservableLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mockObservableLink } from "@apollo/client/testing/core";
+import { mockObservableLink } from "@apollo/client/testing";
 mockObservableLink()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > mockSingleLink 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mockSingleLink } from "@apollo/client/testing/core";
+import { mockSingleLink } from "@apollo/client/testing";
 mockSingleLink(mockedResponses)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > subscribeAndCount 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { subscribeAndCount } from "@apollo/client/testing/core";
+import { subscribeAndCount } from "@apollo/client/testing";
 subscribeAndCount<TResult>(reject, observable, cb)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > tick 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { tick } from "@apollo/client/testing/core";
+import { tick } from "@apollo/client/testing";
 tick()
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > wait 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { wait } from "@apollo/client/testing/core";
+import { wait } from "@apollo/client/testing";
 wait(ms)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > withErrorSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { withErrorSpy } from "@apollo/client/testing/core";
+import { withErrorSpy } from "@apollo/client/testing";
 withErrorSpy<TArgs, TResult>(it, args)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > withLogSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { withLogSpy } from "@apollo/client/testing/core";
+import { withLogSpy } from "@apollo/client/testing";
 withLogSpy<TArgs, TResult>(it, args)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/core > withWarningSpy 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { withWarningSpy } from "@apollo/client/testing/core";
+import { withWarningSpy } from "@apollo/client/testing";
 withWarningSpy<TArgs, TResult>(it, args)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/testing/experimental > createSchemaFetch 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/testing/experimental > createTestSchema 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > AsStoreObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > AutoCleanedStrongCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { AutoCleanedStrongCache } from "@apollo/client/utilities";
+import { AutoCleanedStrongCache } from "@apollo/client/utilities/internal";
 const _Test_AutoCleanedStrongCache = AutoCleanedStrongCache;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > AutoCleanedWeakCache 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { AutoCleanedWeakCache } from "@apollo/client/utilities";
+import { AutoCleanedWeakCache } from "@apollo/client/utilities/internal";
 const _Test_AutoCleanedWeakCache = AutoCleanedWeakCache;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > CacheSizes 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > Concast 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > ConcastSourcesArray 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > ConcastSourcesIterable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > DEV 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DEV } from "@apollo/client/utilities";
-const _Test_DEV = DEV;
\\ No newline at end of file
+const _Test_DEV = __DEV__;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > DeepMerger 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DeepMerger } from "@apollo/client/utilities";
+import { DeepMerger } from "@apollo/client/utilities/internal";
 class _Test_DeepMerger extends DeepMerger<TContextArgs> {}
 const _test_DeepMerger = new DeepMerger<TContextArgs>(reconciler)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > DeepOmit 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { DeepOmit } from "@apollo/client/utilities";
+import type { DeepOmit } from "@apollo/client/utilities/internal";
 type _Test_DeepOmit = DeepOmit<T, K>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > DeepPartial 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > DirectiveInfo 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > Directives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > DocumentTransform 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > DocumentTransformCacheKey 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > FragmentMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FragmentMap } from "@apollo/client/utilities";
+import type { FragmentMap } from "@apollo/client/utilities/internal";
 type _Test_FragmentMap = FragmentMap;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > FragmentMapFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { FragmentMapFunction } from "@apollo/client/utilities";
+import type { FragmentMapFunction } from "@apollo/client/utilities/internal";
 type _Test_FragmentMapFunction = FragmentMapFunction;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > GetDirectiveConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > GetFragmentSpreadConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > GetNodeConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > InclusionDirectives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > IsStrictlyAny 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > NoInfer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { NoInfer } from "@apollo/client/utilities";
+import type { NoInfer } from "@apollo/client/utilities/internal";
 type _Test_NoInfer = NoInfer<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > Observable 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > ObservableSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > Observer 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > OnlyRequiredProperties 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > Prettify 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Prettify } from "@apollo/client/utilities";
+import type { Prettify } from "@apollo/client/utilities/internal";
 type _Test_Prettify = Prettify<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > Primitive 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { Primitive } from "@apollo/client/utilities";
+import type { Primitive } from "@apollo/client/utilities/internal";
 type _Test_Primitive = Primitive;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > PromiseWithState 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > ReconcilerFunction 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > Reference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveArgumentsConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveDirectiveConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveFragmentDefinitionConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveFragmentSpreadConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveIndexSignature 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { RemoveIndexSignature } from "@apollo/client/utilities";
+import type { RemoveIndexSignature } from "@apollo/client/utilities/internal";
 type _Test_RemoveIndexSignature = RemoveIndexSignature<T>;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveNodeConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > RemoveVariableDefinitionConfig 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > StoreObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > StoreValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > TupleToIntersection 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > UnionToIntersection 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > VariableValue 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > addNonReactiveToNamedFragments 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > addTypenameToDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > argumentsObjectFromField 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { argumentsObjectFromField } from "@apollo/client/utilities";
+import { argumentsObjectFromField } from "@apollo/client/utilities/internal";
 argumentsObjectFromField(field, variables)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > asyncMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > buildQueryFromSelectionSet 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > cacheSizes 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canUseAsyncIteratorSymbol 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canUseDOM 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { canUseDOM } from "@apollo/client/utilities";
+import { canUseDOM } from "@apollo/client/utilities/internal";
 const _Test_canUseDOM = canUseDOM;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > canUseLayoutEffect 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canUseSymbol 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canUseWeakMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canUseWeakSet 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > canonicalStringify 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > checkDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { checkDocument } from "@apollo/client/utilities";
+import { checkDocument } from "@apollo/client/utilities/internal";
 checkDocument(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > cloneDeep 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { cloneDeep } from "@apollo/client/utilities";
+import { cloneDeep } from "@apollo/client/utilities/internal";
 cloneDeep<T>(value)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > compact 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { compact } from "@apollo/client/utilities";
+import { compact } from "@apollo/client/utilities/internal";
 compact<TArgs>(objects)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > concatPagination 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > createFragmentMap 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createFragmentMap } from "@apollo/client/utilities";
+import { createFragmentMap } from "@apollo/client/utilities/internal";
 createFragmentMap(fragments)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > createFulfilledPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createFulfilledPromise } from "@apollo/client/utilities";
+import { createFulfilledPromise } from "@apollo/client/utilities/internal";
 createFulfilledPromise<TValue>(value)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > createRejectedPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { createRejectedPromise } from "@apollo/client/utilities";
+import { createRejectedPromise } from "@apollo/client/utilities/internal";
 createRejectedPromise<TValue>(reason)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > defaultCacheSizes 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > fixObservableSubclass 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > getDefaultValues 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getDefaultValues } from "@apollo/client/utilities";
+import { getDefaultValues } from "@apollo/client/utilities/internal";
 getDefaultValues(definition)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getDirectiveNames 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > getFragmentDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getFragmentDefinition } from "@apollo/client/utilities";
+import { getFragmentDefinition } from "@apollo/client/utilities/internal";
 getFragmentDefinition(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getFragmentDefinitions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getFragmentDefinitions } from "@apollo/client/utilities";
+import { getFragmentDefinitions } from "@apollo/client/utilities/internal";
 getFragmentDefinitions(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getFragmentFromSelection 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getFragmentFromSelection } from "@apollo/client/utilities";
+import { getFragmentFromSelection } from "@apollo/client/utilities/internal";
 getFragmentFromSelection(selection, fragmentMap)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getFragmentMaskMode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > getFragmentQueryDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getFragmentQueryDocument } from "@apollo/client/utilities";
+import { getFragmentQueryDocument } from "@apollo/client/utilities/internal";
 getFragmentQueryDocument(document, fragmentName)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getGraphQLErrorsFromResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getGraphQLErrorsFromResult } from "@apollo/client/utilities";
+import { getGraphQLErrorsFromResult } from "@apollo/client/utilities/internal";
 getGraphQLErrorsFromResult<T>(result)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getInclusionDirectives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > getMainDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > getOperationDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getOperationDefinition } from "@apollo/client/utilities";
+import { getOperationDefinition } from "@apollo/client/utilities/internal";
 getOperationDefinition(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getOperationName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getOperationName } from "@apollo/client/utilities";
+import { getOperationName } from "@apollo/client/utilities/internal";
 getOperationName(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getQueryDefinition 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getQueryDefinition } from "@apollo/client/utilities";
+import { getQueryDefinition } from "@apollo/client/utilities/internal";
 getQueryDefinition(doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getStoreKeyName 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { getStoreKeyName } from "@apollo/client/utilities";
+import { getStoreKeyName } from "@apollo/client/utilities/internal";
 const _Test_getStoreKeyName = getStoreKeyName;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > getTypenameFromResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > graphQLResultHasError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { graphQLResultHasError } from "@apollo/client/utilities";
+import { graphQLResultHasError } from "@apollo/client/utilities/internal";
 graphQLResultHasError<T>(result)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > hasAllDirectives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > hasAnyDirectives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > hasClientExports 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > hasDirectives 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { hasDirectives } from "@apollo/client/utilities";
+import { hasDirectives } from "@apollo/client/utilities/internal";
 hasDirectives(names, root, all)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isApolloPayloadResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isArray 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isArray } from "@apollo/client/utilities";
+import { isArray } from "@apollo/client/utilities/internal";
 const _Test_isArray = isArray;
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isDocumentNode 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isDocumentNode } from "@apollo/client/utilities";
+import { isDocumentNode } from "@apollo/client/utilities/internal";
 isDocumentNode(value)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isExecutionPatchIncrementalResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isExecutionPatchInitialResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isExecutionPatchResult 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isField 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isField } from "@apollo/client/utilities";
+import { isField } from "@apollo/client/utilities/internal";
 isField(selection)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isFullyUnmaskedOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isInlineFragment 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isMutationOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isNonEmptyArray 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isNonEmptyArray } from "@apollo/client/utilities";
+import { isNonEmptyArray } from "@apollo/client/utilities/internal";
 isNonEmptyArray<T>(value)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isNonNullObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isNonNullObject } from "@apollo/client/utilities";
+import { isNonNullObject } from "@apollo/client/utilities/internal";
 isNonNullObject(obj)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isPlainObject 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { isPlainObject } from "@apollo/client/utilities";
+import { isPlainObject } from "@apollo/client/utilities/internal";
 isPlainObject(obj)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > isQueryOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isStatefulPromise 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > isSubscriptionOperation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > iterateObserversSafely 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > makeReference 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeReference } from "@apollo/client/utilities";
+import { makeReference } from "@apollo/client/utilities/internal";
 makeReference(id)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > makeUniqueId 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { makeUniqueId } from "@apollo/client/utilities";
+import { makeUniqueId } from "@apollo/client/utilities/internal";
 makeUniqueId(prefix)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > maybe 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { maybe } from "@apollo/client/utilities";
 maybe<T>(thunk)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > maybeDeepFreeze 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { maybeDeepFreeze } from "@apollo/client/utilities";
+import { maybeDeepFreeze } from "@apollo/client/utilities/internal";
 maybeDeepFreeze<T>(obj)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > mergeDeep 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mergeDeep } from "@apollo/client/utilities";
+import { mergeDeep } from "@apollo/client/utilities/internal";
 mergeDeep<T>(sources)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > mergeDeepArray 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mergeDeepArray } from "@apollo/client/utilities";
+import { mergeDeepArray } from "@apollo/client/utilities/internal";
 mergeDeepArray<T>(sources)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > mergeIncrementalData 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > mergeOptions 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { mergeOptions } from "@apollo/client/utilities";
+import { mergeOptions } from "@apollo/client/utilities/internal";
 mergeOptions<TDefaultOptions, TOptions>(defaults, options)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > offsetLimitPagination 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > omitDeep 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { omitDeep } from "@apollo/client/utilities";
+import { omitDeep } from "@apollo/client/utilities/internal";
 omitDeep<T, K>(value, key)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > preventUnhandledRejection 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { preventUnhandledRejection } from "@apollo/client/utilities";
+import { preventUnhandledRejection } from "@apollo/client/utilities/internal";
 preventUnhandledRejection<T>(promise)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > print 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > relayStylePagination 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > removeArgumentsFromDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > removeClientSetsFromDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > removeConnectionDirectiveFromDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > removeDirectivesFromDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { removeDirectivesFromDocument } from "@apollo/client/utilities";
+import { removeDirectivesFromDocument } from "@apollo/client/utilities/internal";
 removeDirectivesFromDocument(directives, doc)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > removeFragmentSpreadFromDocument 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > resultKeyNameFromField 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { resultKeyNameFromField } from "@apollo/client/utilities";
+import { resultKeyNameFromField } from "@apollo/client/utilities/internal";
 resultKeyNameFromField(field)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > shouldInclude 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { shouldInclude } from "@apollo/client/utilities";
+import { shouldInclude } from "@apollo/client/utilities/internal";
 shouldInclude(param0, variables)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > storeKeyNameFromField 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { storeKeyNameFromField } from "@apollo/client/utilities";
+import { storeKeyNameFromField } from "@apollo/client/utilities/internal";
 storeKeyNameFromField(field, variables)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > stringifyForDisplay 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
-import { stringifyForDisplay } from "@apollo/client/utilities";
+import { stringifyForDisplay } from "@apollo/client/utilities/internal";
 stringifyForDisplay(value, space)
\\ No newline at end of file
"
`;

exports[`individual exports > @apollo/client/utilities > stripTypename 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > valueToObjectRepresentation 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities > wrapPromiseWithState 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > ___DEV__ 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > DEV 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > InvariantError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > global 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > invariant 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > maybe 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/globals > newInvariantError 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;

exports[`individual exports > @apollo/client/utilities/subscriptions/relay > createFetchMultipartSubscription 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
"
`;
