{
  "@apollo/client/cache": ["DataProxy", "makeReference"],
  "@apollo/client": [
    "mergeOptions",
    "FetchMoreOptions",
    "FetchMoreQueryOptions",
    "Resolver",
    "FragmentMatcher",
    "isApolloError",
    "ApolloError",
    "DataProxy",
    "fromError",
    "toPromise",
    "fromPromise",
    "throwServerError",
    "Observer",
    "ObservableSubscription",
    "makeReference",
    "MethodKeys",
    "PureQueryOptions",
    "MutationUpdaterFn",
    "Resolvers",
    "Path",
    "ExecutionPatchInitialResult",
    "IncrementalPayload",
    "ExecutionPatchIncrementalResult",
    "ExecutionPatchResult",
    "SingleExecutionResult",
    "NextLink",
    "ClientParseError",
    "serializeFetchParameter",
    "HttpOptions",
    "UriFunction",
    "ApolloContextValue",
    "ApolloProvider",
    "ApolloConsumer",
    "getApolloContext",
    "resetApolloContext",
    "IDocumentDefinition",
    "DocumentType",
    "operationName",
    "parser",
    "PreloadQueryOptions",
    "PreloadQueryFetchPolicy",
    "PreloadQueryFunction",
    "createQueryPreloader",
    "useQuery",
    "UseSuspenseQueryResult",
    "useSuspenseQuery",
    "UseBackgroundQueryResult",
    "useBackgroundQuery",
    "UseSuspenseFragmentResult",
    "UseSuspenseFragmentOptions",
    "useSuspenseFragment",
    "LoadQueryFunction",
    "UseLoadableQueryResult",
    "useLoadableQuery",
    "UseQueryRefHandlersResult",
    "useQueryRefHandlers",
    "UseReadQueryResult",
    "useReadQuery",
    "skipToken",
    "SkipToken",
    "useApolloClient",
    "useLazyQuery",
    "useMutation",
    "useSubscription",
    "useReactiveVar",
    "useFragment",
    "UseFragmentOptions",
    "UseFragmentResult",
    "QueryReference",
    "QueryRef",
    "PreloadedQueryRef",
    "Context",
    "CommonOptions",
    "BaseQueryOptions",
    "QueryFunctionOptions",
    "ObservableQueryFields",
    "QueryResult",
    "QueryDataOptions",
    "QueryHookOptions",
    "LazyQueryHookOptions",
    "LazyQueryHookExecOptions",
    "SuspenseQueryHookFetchPolicy",
    "SuspenseQueryHookOptions",
    "BackgroundQueryHookFetchPolicy",
    "BackgroundQueryHookOptions",
    "LoadableQueryHookFetchPolicy",
    "LoadableQueryHookOptions",
    "QueryLazyOptions",
    "LazyQueryResult",
    "QueryTuple",
    "LazyQueryExecFunction",
    "LazyQueryResultTuple",
    "RefetchQueriesFunction",
    "BaseMutationOptions",
    "MutationFunctionOptions",
    "MutationResult",
    "MutationFunction",
    "MutationHookOptions",
    "MutationDataOptions",
    "MutationTuple",
    "OnDataOptions",
    "OnSubscriptionDataOptions",
    "BaseSubscriptionOptions",
    "SubscriptionResult",
    "SubscriptionHookOptions",
    "SubscriptionDataOptions",
    "SubscriptionCurrentObservable",
    "VariablesOption",
    "NoInfer"
  ],
  "@apollo/client/core": [
    "mergeOptions",
    "FetchMoreOptions",
    "FetchMoreQueryOptions",
    "Resolver",
    "FragmentMatcher",
    "isApolloError",
    "ApolloError",
    "DataProxy",
    "fromError",
    "toPromise",
    "fromPromise",
    "throwServerError",
    "Observer",
    "ObservableSubscription",
    "makeReference",
    "MethodKeys",
    "PureQueryOptions",
    "MutationUpdaterFn",
    "Resolvers",
    "Path",
    "ExecutionPatchInitialResult",
    "IncrementalPayload",
    "ExecutionPatchIncrementalResult",
    "ExecutionPatchResult",
    "SingleExecutionResult",
    "NextLink",
    "ClientParseError",
    "serializeFetchParameter",
    "HttpOptions",
    "UriFunction"
  ],
  "@apollo/client/dev": [],
  "@apollo/client/errors": [
    "isApolloError",
    "ApolloErrorOptions",
    "GraphQLErrors",
    "NetworkError",
    "ApolloError"
  ],
  "@apollo/client/link/batch": [
    "BatchableRequest",
    "BatchHandler",
    "OperationBatcher"
  ],
  "@apollo/client/link/batch-http": [],
  "@apollo/client/link/context": ["ContextSetter"],
  "@apollo/client/link/core": [
    "Path",
    "ExecutionPatchInitialResult",
    "IncrementalPayload",
    "ExecutionPatchIncrementalResult",
    "ExecutionPatchResult",
    "SingleExecutionResult",
    "NextLink"
  ],
  "@apollo/client/link/error": ["ErrorResponse", "ErrorHandler"],
  "@apollo/client/link/http": [
    "ServerParseError",
    "ClientParseError",
    "serializeFetchParameter",
    "HttpOptions",
    "UriFunction"
  ],
  "@apollo/client/link/persisted-queries": ["ErrorResponse"],
  "@apollo/client/link/retry": [],
  "@apollo/client/link/remove-typename": ["RemoveTypenameFromVariablesOptions"],
  "@apollo/client/link/schema": [],
  "@apollo/client/link/subscriptions": [],
  "@apollo/client/link/utils": [
    "fromError",
    "toPromise",
    "fromPromise",
    "ServerError",
    "throwServerError",
    "validateOperation",
    "transformOperation"
  ],
  "@apollo/client/link/ws": ["WebSocketParams"],
  "@apollo/client/masking": [],
  "@apollo/client/react": [
    "ApolloConsumer",
    "resetApolloContext",
    "IDocumentDefinition",
    "DocumentType",
    "operationName",
    "parser",
    "QueryReference",
    "Context",
    "CommonOptions",
    "BaseQueryOptions",
    "QueryFunctionOptions",
    "ObservableQueryFields",
    "QueryDataOptions",
    "LoadableQueryHookFetchPolicy",
    "QueryLazyOptions",
    "QueryTuple",
    "RefetchQueriesFunction",
    "BaseMutationOptions",
    "MutationFunction",
    "MutationDataOptions",
    "BaseSubscriptionOptions",
    "SubscriptionDataOptions",
    "SubscriptionCurrentObservable",
    "VariablesOption",
    "NoInfer"
  ],
  "@apollo/client/react/components": [
    "Query",
    "Mutation",
    "Subscription",
    "QueryComponentOptions",
    "MutationComponentOptions",
    "SubscriptionComponentOptions"
  ],
  "@apollo/client/react/context": [
    "ApolloConsumerProps",
    "ApolloConsumer",
    "ApolloContextValue",
    "getApolloContext",
    "resetApolloContext",
    "ApolloProviderProps",
    "ApolloProvider"
  ],
  "@apollo/client/react/hoc": [
    "graphql",
    "withQuery",
    "withMutation",
    "withSubscription",
    "withApollo",
    "QueryControls",
    "DataValue",
    "DataProps",
    "MutateProps",
    "ChildProps",
    "ChildDataProps",
    "ChildMutateProps",
    "OptionProps",
    "OperationOption",
    "WithApolloClient"
  ],
  "@apollo/client/react/hooks": [
    "useQuery",
    "UseSuspenseQueryResult",
    "useSuspenseQuery",
    "UseBackgroundQueryResult",
    "useBackgroundQuery",
    "UseSuspenseFragmentResult",
    "UseSuspenseFragmentOptions",
    "useSuspenseFragment",
    "LoadQueryFunction",
    "UseLoadableQueryResult",
    "useLoadableQuery",
    "UseQueryRefHandlersResult",
    "useQueryRefHandlers",
    "UseReadQueryResult",
    "useReadQuery",
    "skipToken",
    "SkipToken",
    "useApolloClient",
    "useLazyQuery",
    "useMutation",
    "useSubscription",
    "useReactiveVar",
    "useFragment",
    "UseFragmentOptions",
    "UseFragmentResult"
  ],
  "@apollo/client/react/internal": ["QueryReference"],
  "@apollo/client/react/parser": [
    "operationName",
    "parser",
    "verifyDocumentType",
    "DocumentType",
    "IDocumentDefinition"
  ],
  "@apollo/client/react/ssr": ["RenderPromises"],
  "@apollo/client/testing": [
    "MockedProviderProps",
    "MockedProvider",
    "mockSingleLink",
    "mockObservableLink",
    "createMockClient",
    "subscribeAndCount",
    "itAsync",
    "wait",
    "tick",
    "withErrorSpy",
    "withWarningSpy",
    "withLogSpy"
  ],
  "@apollo/client/testing/core": [
    "MockedResponse",
    "MockLinkOptions",
    "ResultFunction",
    "MockLink",
    "mockSingleLink",
    "MockSubscriptionLink",
    "mockObservableLink",
    "createMockClient",
    "subscribeAndCount",
    "itAsync",
    "wait",
    "tick",
    "withErrorSpy",
    "withWarningSpy",
    "withLogSpy"
  ],
  "@apollo/client/testing/experimental": [
    "createTestSchema",
    "createSchemaFetch"
  ],
  "@apollo/client/utilities": [
    "DEV",
    "maybe",
    "DirectiveInfo",
    "InclusionDirectives",
    "shouldInclude",
    "hasDirectives",
    "hasAnyDirectives",
    "hasAllDirectives",
    "hasClientExports",
    "getDirectiveNames",
    "getInclusionDirectives",
    "getFragmentMaskMode",
    "FragmentMap",
    "FragmentMapFunction",
    "createFragmentMap",
    "getFragmentQueryDocument",
    "getFragmentFromSelection",
    "isFullyUnmaskedOperation",
    "checkDocument",
    "getOperationDefinition",
    "getOperationName",
    "getFragmentDefinitions",
    "getQueryDefinition",
    "getFragmentDefinition",
    "getDefaultValues",
    "Directives",
    "VariableValue",
    "makeReference",
    "isDocumentNode",
    "isField",
    "isInlineFragment",
    "valueToObjectRepresentation",
    "storeKeyNameFromField",
    "argumentsObjectFromField",
    "resultKeyNameFromField",
    "getStoreKeyName",
    "getTypenameFromResult",
    "RemoveNodeConfig",
    "GetNodeConfig",
    "RemoveDirectiveConfig",
    "GetDirectiveConfig",
    "RemoveArgumentsConfig",
    "GetFragmentSpreadConfig",
    "RemoveFragmentSpreadConfig",
    "RemoveFragmentDefinitionConfig",
    "RemoveVariableDefinitionConfig",
    "addNonReactiveToNamedFragments",
    "buildQueryFromSelectionSet",
    "removeDirectivesFromDocument",
    "removeConnectionDirectiveFromDocument",
    "removeArgumentsFromDocument",
    "removeFragmentSpreadFromDocument",
    "removeClientSetsFromDocument",
    "Observer",
    "ObservableSubscription",
    "PromiseWithState",
    "isStatefulPromise",
    "createFulfilledPromise",
    "createRejectedPromise",
    "wrapPromiseWithState",
    "preventUnhandledRejection",
    "maybeDeepFreeze",
    "omitDeep",
    "DeepOmit",
    "OnlyRequiredProperties",
    "Prettify",
    "Primitive",
    "UnionToIntersection",
    "NoInfer",
    "RemoveIndexSignature",
    "AutoCleanedStrongCache",
    "AutoCleanedWeakCache",
    "defaultCacheSizes",
    "mergeDeep",
    "mergeDeepArray",
    "TupleToIntersection",
    "ReconcilerFunction",
    "DeepMerger",
    "cloneDeep",
    "iterateObserversSafely",
    "asyncMap",
    "ConcastSourcesIterable",
    "ConcastSourcesArray",
    "Concast",
    "fixObservableSubclass",
    "isNonEmptyArray",
    "isArray",
    "isNonNullObject",
    "isPlainObject",
    "graphQLResultHasError",
    "getGraphQLErrorsFromResult",
    "canUseWeakMap",
    "canUseWeakSet",
    "canUseSymbol",
    "canUseAsyncIteratorSymbol",
    "canUseDOM",
    "canUseLayoutEffect",
    "compact",
    "makeUniqueId",
    "stringifyForDisplay",
    "mergeOptions",
    "isExecutionPatchIncrementalResult",
    "isExecutionPatchInitialResult",
    "isExecutionPatchResult",
    "isApolloPayloadResult",
    "mergeIncrementalData",
    "IsStrictlyAny"
  ],
  "@apollo/client/utilities/globals": [
    "maybe",
    "global",
    "invariant",
    "newInvariantError",
    "InvariantError",
    "DEV",
    "___DEV__"
  ],
  "@apollo/client/utilities/subscriptions/relay": []
}
