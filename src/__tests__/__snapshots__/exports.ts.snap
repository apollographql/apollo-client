// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`exports of public entry points @apollo/client 1`] = `
Array [
  "ApolloCache",
  "ApolloClient",
  "ApolloLink",
  "CombinedGraphQLErrors",
  "CombinedProtocolErrors",
  "DocumentTransform",
  "HttpLink",
  "InMemoryCache",
  "LinkError",
  "MissingFieldError",
  "NetworkStatus",
  "Observable",
  "ObservableQuery",
  "ServerError",
  "ServerParseError",
  "UnconventionalError",
  "checkFetcher",
  "concat",
  "createHttpLink",
  "createSignalIfSupported",
  "defaultDataIdFromObject",
  "defaultPrinter",
  "disableExperimentalFragmentVariables",
  "disableFragmentWarnings",
  "empty",
  "enableExperimentalFragmentVariables",
  "execute",
  "fallbackHttpConfig",
  "from",
  "gql",
  "isNetworkRequestSettled",
  "isReference",
  "makeReference",
  "makeVar",
  "mergeOptions",
  "parseAndCheckHttpResponse",
  "resetCaches",
  "rewriteURIForGET",
  "selectHttpOptionsAndBody",
  "selectHttpOptionsAndBodyInternal",
  "selectURI",
  "serializeFetchParameter",
  "setLogVerbosity",
  "split",
  "version",
]
`;

exports[`exports of public entry points @apollo/client/cache 1`] = `
Array [
  "ApolloCache",
  "EntityStore",
  "InMemoryCache",
  "MissingFieldError",
  "Policies",
  "cacheSlot",
  "canonicalStringify",
  "createFragmentRegistry",
  "defaultDataIdFromObject",
  "fieldNameFromStoreName",
  "isReference",
  "makeReference",
  "makeVar",
]
`;

exports[`exports of public entry points @apollo/client/core 1`] = `
Array [
  "ApolloCache",
  "ApolloClient",
  "ApolloLink",
  "CombinedGraphQLErrors",
  "CombinedProtocolErrors",
  "DocumentTransform",
  "HttpLink",
  "InMemoryCache",
  "LinkError",
  "MissingFieldError",
  "NetworkStatus",
  "Observable",
  "ObservableQuery",
  "ServerError",
  "ServerParseError",
  "UnconventionalError",
  "checkFetcher",
  "concat",
  "createHttpLink",
  "createSignalIfSupported",
  "defaultDataIdFromObject",
  "defaultPrinter",
  "disableExperimentalFragmentVariables",
  "disableFragmentWarnings",
  "empty",
  "enableExperimentalFragmentVariables",
  "execute",
  "fallbackHttpConfig",
  "from",
  "gql",
  "isNetworkRequestSettled",
  "isReference",
  "makeReference",
  "makeVar",
  "mergeOptions",
  "parseAndCheckHttpResponse",
  "resetCaches",
  "rewriteURIForGET",
  "selectHttpOptionsAndBody",
  "selectHttpOptionsAndBodyInternal",
  "selectURI",
  "serializeFetchParameter",
  "setLogVerbosity",
  "split",
  "version",
]
`;

exports[`exports of public entry points @apollo/client/dev 1`] = `
Array [
  "loadDevMessages",
  "loadErrorMessageHandler",
  "loadErrorMessages",
  "setErrorMessageHandler",
]
`;

exports[`exports of public entry points @apollo/client/errors 1`] = `
Array [
  "CombinedGraphQLErrors",
  "CombinedProtocolErrors",
  "LinkError",
  "PROTOCOL_ERRORS_SYMBOL",
  "ServerError",
  "ServerParseError",
  "UnconventionalError",
  "graphQLResultHasProtocolErrors",
  "registerLinkError",
  "toErrorLike",
]
`;

exports[`exports of public entry points @apollo/client/link/batch 1`] = `
Array [
  "BatchLink",
  "OperationBatcher",
]
`;

exports[`exports of public entry points @apollo/client/link/batch-http 1`] = `
Array [
  "BatchHttpLink",
]
`;

exports[`exports of public entry points @apollo/client/link/context 1`] = `
Array [
  "setContext",
]
`;

exports[`exports of public entry points @apollo/client/link/core 1`] = `
Array [
  "ApolloLink",
  "concat",
  "empty",
  "execute",
  "from",
  "split",
]
`;

exports[`exports of public entry points @apollo/client/link/error 1`] = `
Array [
  "ErrorLink",
  "onError",
]
`;

exports[`exports of public entry points @apollo/client/link/http 1`] = `
Array [
  "HttpLink",
  "checkFetcher",
  "createHttpLink",
  "createSignalIfSupported",
  "defaultPrinter",
  "fallbackHttpConfig",
  "parseAndCheckHttpResponse",
  "rewriteURIForGET",
  "selectHttpOptionsAndBody",
  "selectHttpOptionsAndBodyInternal",
  "selectURI",
  "serializeFetchParameter",
]
`;

exports[`exports of public entry points @apollo/client/link/persisted-queries 1`] = `
Array [
  "VERSION",
  "createPersistedQueryLink",
]
`;

exports[`exports of public entry points @apollo/client/link/remove-typename 1`] = `
Array [
  "KEEP",
  "removeTypenameFromVariables",
]
`;

exports[`exports of public entry points @apollo/client/link/retry 1`] = `
Array [
  "RetryLink",
]
`;

exports[`exports of public entry points @apollo/client/link/schema 1`] = `
Array [
  "SchemaLink",
]
`;

exports[`exports of public entry points @apollo/client/link/subscriptions 1`] = `
Array [
  "GraphQLWsLink",
]
`;

exports[`exports of public entry points @apollo/client/link/utils 1`] = `
Array [
  "createOperation",
  "filterOperationVariables",
  "transformOperation",
  "validateOperation",
]
`;

exports[`exports of public entry points @apollo/client/link/ws 1`] = `
Array [
  "WebSocketLink",
]
`;

exports[`exports of public entry points @apollo/client/masking 1`] = `
Array [
  "disableWarningsSlot",
  "maskFragment",
  "maskOperation",
]
`;

exports[`exports of public entry points @apollo/client/react 1`] = `
Array [
  "ApolloConsumer",
  "ApolloProvider",
  "createQueryPreloader",
  "getApolloContext",
  "gql",
  "skipToken",
  "useApolloClient",
  "useBackgroundQuery",
  "useFragment",
  "useLazyQuery",
  "useLoadableQuery",
  "useMutation",
  "useQuery",
  "useQueryRefHandlers",
  "useReactiveVar",
  "useReadQuery",
  "useSubscription",
  "useSuspenseFragment",
  "useSuspenseQuery",
]
`;

exports[`exports of public entry points @apollo/client/react with conditions [react-server] 1`] = `
Array [
  "ApolloConsumer",
  "ApolloProvider",
  "createQueryPreloader",
  "getApolloContext",
  "useApolloClient",
  "useBackgroundQuery",
  "useFragment",
  "useLazyQuery",
  "useLoadableQuery",
  "useMutation",
  "useQuery",
  "useQueryRefHandlers",
  "useReactiveVar",
  "useReadQuery",
  "useSubscription",
  "useSuspenseFragment",
  "useSuspenseQuery",
]
`;

exports[`exports of public entry points @apollo/client/react/internal 1`] = `
Array [
  "InternalQueryReference",
  "assertWrappedQueryRef",
  "getSuspenseCache",
  "getWrappedPromise",
  "unwrapQueryRef",
  "updateWrappedQueryRef",
  "wrapQueryRef",
  "wrapperSymbol",
]
`;

exports[`exports of public entry points @apollo/client/react/ssr 1`] = `
Array [
  "getDataFromTree",
  "getMarkupFromTree",
  "prerenderStatic",
  "renderToStringWithData",
]
`;

exports[`exports of public entry points @apollo/client/testing 1`] = `
Array [
  "MockLink",
  "MockSubscriptionLink",
  "createMockClient",
  "mockObservableLink",
  "mockSingleLink",
  "realisticDelay",
  "tick",
  "wait",
  "withErrorSpy",
  "withLogSpy",
  "withWarningSpy",
]
`;

exports[`exports of public entry points @apollo/client/testing/core 1`] = `
Array [
  "MockLink",
  "MockSubscriptionLink",
  "createMockClient",
  "mockObservableLink",
  "mockSingleLink",
  "realisticDelay",
  "tick",
  "wait",
  "withErrorSpy",
  "withLogSpy",
  "withWarningSpy",
]
`;

exports[`exports of public entry points @apollo/client/testing/experimental 1`] = `
Array [
  "createSchemaFetch",
  "createTestSchema",
]
`;

exports[`exports of public entry points @apollo/client/testing/internal 1`] = `
Array [
  "ObservableStream",
  "actAsync",
  "addDelayToMocks",
  "createClientWrapper",
  "createMockWrapper",
  "enableFakeTimers",
  "mockDeferStream",
  "mockMultipartSubscriptionStream",
  "renderAsync",
  "renderHookAsync",
  "resetApolloContext",
  "setupMaskedVariablesCase",
  "setupPaginatedCase",
  "setupSimpleCase",
  "setupVariablesCase",
  "spyOnConsole",
  "withCleanup",
  "withProdMode",
]
`;

exports[`exports of public entry points @apollo/client/testing/react 1`] = `
Array [
  "MockedProvider",
]
`;

exports[`exports of public entry points @apollo/client/utilities 1`] = `
Array [
  "AutoCleanedStrongCache",
  "AutoCleanedWeakCache",
  "DeepMerger",
  "DocumentTransform",
  "Observable",
  "addNonReactiveToNamedFragments",
  "addTypenameToDocument",
  "argumentsObjectFromField",
  "buildQueryFromSelectionSet",
  "cacheSizes",
  "canUseDOM",
  "canUseLayoutEffect",
  "canonicalStringify",
  "checkDocument",
  "cloneDeep",
  "compact",
  "concatPagination",
  "createFragmentMap",
  "createFulfilledPromise",
  "createRejectedPromise",
  "getDefaultValues",
  "getDirectiveNames",
  "getFragmentDefinition",
  "getFragmentDefinitions",
  "getFragmentFromSelection",
  "getFragmentMaskMode",
  "getFragmentQueryDocument",
  "getGraphQLErrorsFromResult",
  "getInclusionDirectives",
  "getMainDefinition",
  "getOperationDefinition",
  "getOperationName",
  "getQueryDefinition",
  "getStoreKeyName",
  "getTypenameFromResult",
  "graphQLResultHasError",
  "hasAllDirectives",
  "hasAnyDirectives",
  "hasClientExports",
  "hasDirectives",
  "isApolloPayloadResult",
  "isArray",
  "isDocumentNode",
  "isExecutionPatchIncrementalResult",
  "isExecutionPatchInitialResult",
  "isExecutionPatchResult",
  "isField",
  "isFullyUnmaskedOperation",
  "isInlineFragment",
  "isMutationOperation",
  "isNonEmptyArray",
  "isNonNullObject",
  "isPlainObject",
  "isQueryOperation",
  "isReference",
  "isStatefulPromise",
  "isSubscriptionOperation",
  "makeReference",
  "makeUniqueId",
  "maybe",
  "maybeDeepFreeze",
  "mergeDeep",
  "mergeDeepArray",
  "mergeIncrementalData",
  "mergeOptions",
  "offsetLimitPagination",
  "omitDeep",
  "preventUnhandledRejection",
  "print",
  "relayStylePagination",
  "removeArgumentsFromDocument",
  "removeClientSetsFromDocument",
  "removeConnectionDirectiveFromDocument",
  "removeDirectivesFromDocument",
  "removeFragmentSpreadFromDocument",
  "resultKeyNameFromField",
  "shouldInclude",
  "storeKeyNameFromField",
  "stringifyForDisplay",
  "stripTypename",
  "valueToObjectRepresentation",
  "wrapPromiseWithState",
]
`;

exports[`exports of public entry points @apollo/client/utilities/environment 1`] = `
Array [
  "__DEV__",
]
`;

exports[`exports of public entry points @apollo/client/utilities/globals 1`] = `
Array [
  "global",
  "maybe",
]
`;

exports[`exports of public entry points @apollo/client/utilities/internal 1`] = `
Array [
  "getApolloCacheMemoryInternals",
  "getApolloClientMemoryInternals",
  "getInMemoryCacheMemoryInternals",
  "onAnyEvent",
  "registerGlobalCache",
  "toQueryResult",
]
`;

exports[`exports of public entry points @apollo/client/utilities/invariant 1`] = `
Array [
  "ApolloErrorMessageHandler",
  "InvariantError",
  "invariant",
  "newInvariantError",
  "setVerbosity",
]
`;
