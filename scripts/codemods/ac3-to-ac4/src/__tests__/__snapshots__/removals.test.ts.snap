// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`all exports 1`] = `
"Index: test.ts
===================================================================
--- test.ts	original
+++ test.ts	transformed
@@  @@
   WatchFragmentOptions as cache_WatchFragmentOptions,
   WatchFragmentResult as cache_WatchFragmentResult,
   ApolloCache as cache_ApolloCache,
   Cache as cache_Cache,
-  DataProxy as cache_DataProxy,
   MissingTree as cache_MissingTree,
   Modifier as cache_Modifier,
   Modifiers as cache_Modifiers,
   ModifierDetails as cache_ModifierDetails,
@@  @@
   WatchQueryFetchPolicy as _WatchQueryFetchPolicy,
   MutationFetchPolicy as _MutationFetchPolicy,
   RefetchWritePolicy as _RefetchWritePolicy,
   ErrorPolicy as _ErrorPolicy,
-  FetchMoreQueryOptions as _FetchMoreQueryOptions,
   SubscribeToMoreOptions as _SubscribeToMoreOptions,
   SubscribeToMoreFunction as _SubscribeToMoreFunction,
   UpdateQueryMapFn as _UpdateQueryMapFn,
   UpdateQueryOptions as _UpdateQueryOptions,
   SubscribeToMoreUpdateQueryFn as _SubscribeToMoreUpdateQueryFn,
   NetworkStatus as _NetworkStatus,
   isNetworkRequestSettled as _isNetworkRequestSettled,
-  Resolver as _Resolver,
-  FragmentMatcher as _FragmentMatcher,
-  isApolloError as _isApolloError,
-  ApolloError as _ApolloError,
   Transaction as _Transaction,
-  DataProxy as _DataProxy,
   InMemoryCacheConfig as _InMemoryCacheConfig,
   ReactiveVar as _ReactiveVar,
   TypePolicies as _TypePolicies,
   TypePolicy as _TypePolicy,
@@  @@
   MissingFieldError as _MissingFieldError,
   defaultDataIdFromObject as _defaultDataIdFromObject,
   makeVar as _makeVar,
   ServerError as _ServerError,
-  fromError as _fromError,
-  toPromise as _toPromise,
-  fromPromise as _fromPromise,
-  throwServerError as _throwServerError,
   DataMasking as _DataMasking,
   FragmentType as _FragmentType,
   Masked as _Masked,
   MaskedDocumentNode as _MaskedDocumentNode,
   MaybeMasked as _MaybeMasked,
   Unmasked as _Unmasked,
   DocumentTransformCacheKey as _DocumentTransformCacheKey,
-  Observer as _Observer,
-  ObservableSubscription as _ObservableSubscription,
   Reference as _Reference,
   StoreObject as _StoreObject,
   DocumentTransform as _DocumentTransform,
   Observable as _Observable,
@@  @@
   disableFragmentWarnings as _disableFragmentWarnings,
   enableExperimentalFragmentVariables as _enableExperimentalFragmentVariables,
   disableExperimentalFragmentVariables as _disableExperimentalFragmentVariables,
   TypedDocumentNode as _TypedDocumentNode,
-  MethodKeys as _MethodKeys,
   DefaultContext as _DefaultContext,
   OnQueryUpdated as _OnQueryUpdated,
   RefetchQueryDescriptor as _RefetchQueryDescriptor,
   InternalRefetchQueryDescriptor as _InternalRefetchQueryDescriptor,
@@  @@
   RefetchQueriesResult as _RefetchQueriesResult,
   InternalRefetchQueriesOptions as _InternalRefetchQueriesOptions,
   InternalRefetchQueriesResult as _InternalRefetchQueriesResult,
   InternalRefetchQueriesMap as _InternalRefetchQueriesMap,
-  PureQueryOptions as _PureQueryOptions,
   OperationVariables as _OperationVariables,
   ApolloQueryResult as _ApolloQueryResult,
   MutationQueryReducer as _MutationQueryReducer,
   MutationQueryReducersMap as _MutationQueryReducersMap,
-  MutationUpdaterFn as _MutationUpdaterFn,
   MutationUpdaterFunction as _MutationUpdaterFunction,
-  Resolvers as _Resolvers,
   StoreValue as _StoreValue,
   IdGetterObj as _IdGetterObj,
   IdGetter as _IdGetter,
   NormalizedCache as _NormalizedCache,
@@  @@
   NextLink as _NextLink,
   RequestHandler as _RequestHandler,
   ServerParseError as _ServerParseError,
   parseAndCheckHttpResponse as _parseAndCheckHttpResponse,
-  ClientParseError as _ClientParseError,
-  serializeFetchParameter as _serializeFetchParameter,
   HttpOptions as _HttpOptions,
   UriFunction as _UriFunction,
   fallbackHttpConfig as _fallbackHttpConfig,
   defaultPrinter as _defaultPrinter,
@@  @@
   HttpLink as _HttpLink,
   rewriteURIForGET as _rewriteURIForGET,
   ApolloContextValue as _ApolloContextValue,
   ApolloProvider as _ApolloProvider,
-  ApolloConsumer as _ApolloConsumer,
   getApolloContext as _getApolloContext,
-  resetApolloContext as _resetApolloContext,
-  IDocumentDefinition as _IDocumentDefinition,
-  DocumentType as _DocumentType,
-  operationName as _operationName,
-  parser as _parser,
   PreloadQueryOptions as _PreloadQueryOptions,
   PreloadQueryFetchPolicy as _PreloadQueryFetchPolicy,
   PreloadQueryFunction as _PreloadQueryFunction,
   createQueryPreloader as _createQueryPreloader,
@@  @@
   QueryReference as _QueryReference,
   QueryRef as _QueryRef,
   PreloadedQueryRef as _PreloadedQueryRef,
   Context as _Context,
-  CommonOptions as _CommonOptions,
-  BaseQueryOptions as _BaseQueryOptions,
   QueryFunctionOptions as _QueryFunctionOptions,
-  ObservableQueryFields as _ObservableQueryFields,
   QueryResult as _QueryResult,
-  QueryDataOptions as _QueryDataOptions,
   QueryHookOptions as _QueryHookOptions,
   LazyQueryHookOptions as _LazyQueryHookOptions,
   LazyQueryHookExecOptions as _LazyQueryHookExecOptions,
   SuspenseQueryHookFetchPolicy as _SuspenseQueryHookFetchPolicy,
@@  @@
   BackgroundQueryHookFetchPolicy as _BackgroundQueryHookFetchPolicy,
   BackgroundQueryHookOptions as _BackgroundQueryHookOptions,
   LoadableQueryHookFetchPolicy as _LoadableQueryHookFetchPolicy,
   LoadableQueryHookOptions as _LoadableQueryHookOptions,
-  QueryLazyOptions as _QueryLazyOptions,
   LazyQueryResult as _LazyQueryResult,
   QueryTuple as _QueryTuple,
   LazyQueryExecFunction as _LazyQueryExecFunction,
   LazyQueryResultTuple as _LazyQueryResultTuple,
-  RefetchQueriesFunction as _RefetchQueriesFunction,
-  BaseMutationOptions as _BaseMutationOptions,
   MutationFunctionOptions as _MutationFunctionOptions,
   MutationResult as _MutationResult,
   MutationFunction as _MutationFunction,
   MutationHookOptions as _MutationHookOptions,
-  MutationDataOptions as _MutationDataOptions,
   MutationTuple as _MutationTuple,
   OnDataOptions as _OnDataOptions,
   OnSubscriptionDataOptions as _OnSubscriptionDataOptions,
   BaseSubscriptionOptions as _BaseSubscriptionOptions,
   SubscriptionResult as _SubscriptionResult,
   SubscriptionHookOptions as _SubscriptionHookOptions,
   SubscriptionDataOptions as _SubscriptionDataOptions,
-  SubscriptionCurrentObservable as _SubscriptionCurrentObservable,
   VariablesOption as _VariablesOption,
   NoInfer as _NoInfer,
 } from "@apollo/client";
 
 import {
+  ApolloError as _ApolloError,
+  DataProxy as _DataProxy,
+  fromError as _fromError,
+  fromPromise as _fromPromise,
+  isApolloError as _isApolloError,
+  ObservableSubscription as _ObservableSubscription,
+  Observer as _Observer,
+  serializeFetchParameter as _serializeFetchParameter,
+  throwServerError as _throwServerError,
+  toPromise as _toPromise,
+  OperationBatcher as link_batch_OperationBatcher,
+  transformOperation as link_utils_transformOperation,
+  validateOperation as link_utils_validateOperation,
+  ApolloConsumer as react_ApolloConsumer,
+  DocumentType as react_DocumentType,
+  operationName as react_operationName,
+  parser as react_parser,
+  resetApolloContext as react_resetApolloContext,
+  Mutation as react_components_Mutation,
+  Query as react_components_Query,
+  Subscription as react_components_Subscription,
+  graphql as react_hoc_graphql,
+  withApollo as react_hoc_withApollo,
+  withMutation as react_hoc_withMutation,
+  withQuery as react_hoc_withQuery,
+  withSubscription as react_hoc_withSubscription,
+  verifyDocumentType as react_parser_verifyDocumentType,
+  RenderPromises as react_ssr_RenderPromises,
+  createMockClient as testing_createMockClient,
+  itAsync as testing_itAsync,
+  mockObservableLink as testing_mockObservableLink,
+  mockSingleLink as testing_mockSingleLink,
+  subscribeAndCount as testing_subscribeAndCount,
+  tick as testing_tick,
+  wait as testing_wait,
+  withErrorSpy as testing_withErrorSpy,
+  withLogSpy as testing_withLogSpy,
+  withWarningSpy as testing_withWarningSpy,
+  createSchemaFetch as testing_experimental_createSchemaFetch,
+  createTestSchema as testing_experimental_createTestSchema,
+  addNonReactiveToNamedFragments as utilities_addNonReactiveToNamedFragments,
+  asyncMap as utilities_asyncMap,
+  buildQueryFromSelectionSet as utilities_buildQueryFromSelectionSet,
+  canUseAsyncIteratorSymbol as utilities_canUseAsyncIteratorSymbol,
+  canUseLayoutEffect as utilities_canUseLayoutEffect,
+  canUseSymbol as utilities_canUseSymbol,
+  canUseWeakMap as utilities_canUseWeakMap,
+  canUseWeakSet as utilities_canUseWeakSet,
+  Concast as utilities_Concast,
+  defaultCacheSizes as utilities_defaultCacheSizes,
+  fixObservableSubclass as utilities_fixObservableSubclass,
+  getDirectiveNames as utilities_getDirectiveNames,
+  getFragmentMaskMode as utilities_getFragmentMaskMode,
+  getInclusionDirectives as utilities_getInclusionDirectives,
+  getTypenameFromResult as utilities_getTypenameFromResult,
+  hasAllDirectives as utilities_hasAllDirectives,
+  hasAnyDirectives as utilities_hasAnyDirectives,
+  hasClientExports as utilities_hasClientExports,
+  isApolloPayloadResult as utilities_isApolloPayloadResult,
+  isExecutionPatchIncrementalResult as utilities_isExecutionPatchIncrementalResult,
+  isExecutionPatchInitialResult as utilities_isExecutionPatchInitialResult,
+  isExecutionPatchResult as utilities_isExecutionPatchResult,
+  isFullyUnmaskedOperation as utilities_isFullyUnmaskedOperation,
+  isInlineFragment as utilities_isInlineFragment,
+  isStatefulPromise as utilities_isStatefulPromise,
+  iterateObserversSafely as utilities_iterateObserversSafely,
+  mergeIncrementalData as utilities_mergeIncrementalData,
+  removeArgumentsFromDocument as utilities_removeArgumentsFromDocument,
+  removeClientSetsFromDocument as utilities_removeClientSetsFromDocument,
+  removeConnectionDirectiveFromDocument as utilities_removeConnectionDirectiveFromDocument,
+  removeFragmentSpreadFromDocument as utilities_removeFragmentSpreadFromDocument,
+  valueToObjectRepresentation as utilities_valueToObjectRepresentation,
+} from "@apollo/client/v4-migration";
+
+import type {
+  ClientParseError as _ClientParseError,
+  ClientParseError as core_ClientParseError,
+  FetchMoreQueryOptions as _FetchMoreQueryOptions,
+  FetchMoreQueryOptions as core_FetchMoreQueryOptions,
+  FragmentMatcher as _FragmentMatcher,
+  FragmentMatcher as core_FragmentMatcher,
+  MethodKeys as _MethodKeys,
+  MethodKeys as core_MethodKeys,
+  MutationUpdaterFn as _MutationUpdaterFn,
+  MutationUpdaterFn as core_MutationUpdaterFn,
+  PureQueryOptions as _PureQueryOptions,
+  PureQueryOptions as core_PureQueryOptions,
+  Resolver as _Resolver,
+  Resolver as core_Resolver,
+  Resolvers as _Resolvers,
+  Resolvers as core_Resolvers,
+  ApolloErrorOptions as errors_ApolloErrorOptions,
+  GraphQLErrors as errors_GraphQLErrors,
+  NetworkError as errors_NetworkError,
+  BatchableRequest as link_batch_BatchableRequest,
+  ClientParseError as link_http_ClientParseError,
+  BaseMutationOptions as react_BaseMutationOptions,
+  BaseMutationOptions as _BaseMutationOptions,
+  BaseQueryOptions as react_BaseQueryOptions,
+  BaseQueryOptions as _BaseQueryOptions,
+  CommonOptions as react_CommonOptions,
+  CommonOptions as _CommonOptions,
+  IDocumentDefinition as react_IDocumentDefinition,
+  IDocumentDefinition as _IDocumentDefinition,
+  MutationDataOptions as react_MutationDataOptions,
+  MutationDataOptions as _MutationDataOptions,
+  ObservableQueryFields as react_ObservableQueryFields,
+  ObservableQueryFields as _ObservableQueryFields,
+  QueryDataOptions as react_QueryDataOptions,
+  QueryDataOptions as _QueryDataOptions,
+  QueryLazyOptions as react_QueryLazyOptions,
+  QueryLazyOptions as _QueryLazyOptions,
+  RefetchQueriesFunction as react_RefetchQueriesFunction,
+  RefetchQueriesFunction as _RefetchQueriesFunction,
+  SubscriptionCurrentObservable as react_SubscriptionCurrentObservable,
+  SubscriptionCurrentObservable as _SubscriptionCurrentObservable,
+  MutationComponentOptions as react_components_MutationComponentOptions,
+  QueryComponentOptions as react_components_QueryComponentOptions,
+  SubscriptionComponentOptions as react_components_SubscriptionComponentOptions,
+  ApolloConsumerProps as react_context_ApolloConsumerProps,
+  ChildDataProps as react_hoc_ChildDataProps,
+  ChildMutateProps as react_hoc_ChildMutateProps,
+  ChildProps as react_hoc_ChildProps,
+  DataProps as react_hoc_DataProps,
+  DataValue as react_hoc_DataValue,
+  MutateProps as react_hoc_MutateProps,
+  OperationOption as react_hoc_OperationOption,
+  OptionProps as react_hoc_OptionProps,
+  QueryControls as react_hoc_QueryControls,
+  WithApolloClient as react_hoc_WithApolloClient,
+  IDocumentDefinition as react_parser_IDocumentDefinition,
+  ConcastSourcesArray as utilities_ConcastSourcesArray,
+  ConcastSourcesIterable as utilities_ConcastSourcesIterable,
+  DirectiveInfo as utilities_DirectiveInfo,
+  Directives as utilities_Directives,
+  GetDirectiveConfig as utilities_GetDirectiveConfig,
+  GetFragmentSpreadConfig as utilities_GetFragmentSpreadConfig,
+  GetNodeConfig as utilities_GetNodeConfig,
+  InclusionDirectives as utilities_InclusionDirectives,
+  IsStrictlyAny as utilities_IsStrictlyAny,
+  OnlyRequiredProperties as utilities_OnlyRequiredProperties,
+  PromiseWithState as utilities_PromiseWithState,
+  ReconcilerFunction as utilities_ReconcilerFunction,
+  RemoveArgumentsConfig as utilities_RemoveArgumentsConfig,
+  RemoveDirectiveConfig as utilities_RemoveDirectiveConfig,
+  RemoveFragmentDefinitionConfig as utilities_RemoveFragmentDefinitionConfig,
+  RemoveFragmentSpreadConfig as utilities_RemoveFragmentSpreadConfig,
+  RemoveNodeConfig as utilities_RemoveNodeConfig,
+  RemoveVariableDefinitionConfig as utilities_RemoveVariableDefinitionConfig,
+  TupleToIntersection as utilities_TupleToIntersection,
+  UnionToIntersection as utilities_UnionToIntersection,
+  VariableValue as utilities_VariableValue,
+} from "@apollo/client/v4-migration";
+
+import {
   ApolloClientOptions as core_ApolloClientOptions,
   DefaultOptions as core_DefaultOptions,
   ApolloClient as core_ApolloClient,
   mergeOptions as core_mergeOptions,
@@  @@
   WatchQueryFetchPolicy as core_WatchQueryFetchPolicy,
   MutationFetchPolicy as core_MutationFetchPolicy,
   RefetchWritePolicy as core_RefetchWritePolicy,
   ErrorPolicy as core_ErrorPolicy,
-  FetchMoreQueryOptions as core_FetchMoreQueryOptions,
   SubscribeToMoreOptions as core_SubscribeToMoreOptions,
   SubscribeToMoreFunction as core_SubscribeToMoreFunction,
   UpdateQueryMapFn as core_UpdateQueryMapFn,
   UpdateQueryOptions as core_UpdateQueryOptions,
   SubscribeToMoreUpdateQueryFn as core_SubscribeToMoreUpdateQueryFn,
   NetworkStatus as core_NetworkStatus,
   isNetworkRequestSettled as core_isNetworkRequestSettled,
-  Resolver as core_Resolver,
-  FragmentMatcher as core_FragmentMatcher,
-  isApolloError as core_isApolloError,
-  ApolloError as core_ApolloError,
   Transaction as core_Transaction,
-  DataProxy as core_DataProxy,
   InMemoryCacheConfig as core_InMemoryCacheConfig,
   ReactiveVar as core_ReactiveVar,
   TypePolicies as core_TypePolicies,
   TypePolicy as core_TypePolicy,
@@  @@
   MissingFieldError as core_MissingFieldError,
   defaultDataIdFromObject as core_defaultDataIdFromObject,
   makeVar as core_makeVar,
   ServerError as core_ServerError,
-  fromError as core_fromError,
-  toPromise as core_toPromise,
-  fromPromise as core_fromPromise,
-  throwServerError as core_throwServerError,
   DataMasking as core_DataMasking,
   FragmentType as core_FragmentType,
   Masked as core_Masked,
   MaskedDocumentNode as core_MaskedDocumentNode,
   MaybeMasked as core_MaybeMasked,
   Unmasked as core_Unmasked,
   DocumentTransformCacheKey as core_DocumentTransformCacheKey,
-  Observer as core_Observer,
-  ObservableSubscription as core_ObservableSubscription,
   Reference as core_Reference,
   StoreObject as core_StoreObject,
   DocumentTransform as core_DocumentTransform,
   Observable as core_Observable,
@@  @@
   disableFragmentWarnings as core_disableFragmentWarnings,
   enableExperimentalFragmentVariables as core_enableExperimentalFragmentVariables,
   disableExperimentalFragmentVariables as core_disableExperimentalFragmentVariables,
   TypedDocumentNode as core_TypedDocumentNode,
-  MethodKeys as core_MethodKeys,
   DefaultContext as core_DefaultContext,
   OnQueryUpdated as core_OnQueryUpdated,
   RefetchQueryDescriptor as core_RefetchQueryDescriptor,
   InternalRefetchQueryDescriptor as core_InternalRefetchQueryDescriptor,
@@  @@
   RefetchQueriesResult as core_RefetchQueriesResult,
   InternalRefetchQueriesOptions as core_InternalRefetchQueriesOptions,
   InternalRefetchQueriesResult as core_InternalRefetchQueriesResult,
   InternalRefetchQueriesMap as core_InternalRefetchQueriesMap,
-  PureQueryOptions as core_PureQueryOptions,
   OperationVariables as core_OperationVariables,
   ApolloQueryResult as core_ApolloQueryResult,
   MutationQueryReducer as core_MutationQueryReducer,
   MutationQueryReducersMap as core_MutationQueryReducersMap,
-  MutationUpdaterFn as core_MutationUpdaterFn,
   MutationUpdaterFunction as core_MutationUpdaterFunction,
-  Resolvers as core_Resolvers,
   StoreValue as core_StoreValue,
   IdGetterObj as core_IdGetterObj,
   IdGetter as core_IdGetter,
   NormalizedCache as core_NormalizedCache,
@@  @@
   NextLink as core_NextLink,
   RequestHandler as core_RequestHandler,
   ServerParseError as core_ServerParseError,
   parseAndCheckHttpResponse as core_parseAndCheckHttpResponse,
-  ClientParseError as core_ClientParseError,
-  serializeFetchParameter as core_serializeFetchParameter,
   HttpOptions as core_HttpOptions,
   UriFunction as core_UriFunction,
   fallbackHttpConfig as core_fallbackHttpConfig,
   defaultPrinter as core_defaultPrinter,
@@  @@
 } from "@apollo/client/dev";
 
 import {
   graphQLResultHasProtocolErrors as errors_graphQLResultHasProtocolErrors,
-  isApolloError as errors_isApolloError,
   PROTOCOL_ERRORS_SYMBOL as errors_PROTOCOL_ERRORS_SYMBOL,
-  ApolloErrorOptions as errors_ApolloErrorOptions,
-  GraphQLErrors as errors_GraphQLErrors,
-  NetworkError as errors_NetworkError,
-  ApolloError as errors_ApolloError,
 } from "@apollo/client/errors";
 
-import {
-  BatchableRequest as link_batch_BatchableRequest,
-  BatchHandler as link_batch_BatchHandler,
-  OperationBatcher as link_batch_OperationBatcher,
-  BatchLink as link_batch_BatchLink,
-} from "@apollo/client/link/batch";
+import { BatchHandler as link_batch_BatchHandler, BatchLink as link_batch_BatchLink } from "@apollo/client/link/batch";
 
 import {
   BatchHttpLink as link_batch_http_BatchHttpLink,
 } from "@apollo/client/link/batch-http";
@@  @@
 
 import {
   ServerParseError as link_http_ServerParseError,
   parseAndCheckHttpResponse as link_http_parseAndCheckHttpResponse,
-  ClientParseError as link_http_ClientParseError,
-  serializeFetchParameter as link_http_serializeFetchParameter,
   HttpOptions as link_http_HttpOptions,
   UriFunction as link_http_UriFunction,
   fallbackHttpConfig as link_http_fallbackHttpConfig,
   defaultPrinter as link_http_defaultPrinter,
@@  @@
   GraphQLWsLink as link_subscriptions_GraphQLWsLink,
 } from "@apollo/client/link/subscriptions";
 
 import {
-  fromError as link_utils_fromError,
-  toPromise as link_utils_toPromise,
-  fromPromise as link_utils_fromPromise,
   ServerError as link_utils_ServerError,
-  throwServerError as link_utils_throwServerError,
-  validateOperation as link_utils_validateOperation,
   createOperation as link_utils_createOperation,
-  transformOperation as link_utils_transformOperation,
   filterOperationVariables as link_utils_filterOperationVariables,
 } from "@apollo/client/link/utils";
 
 import {
@@  @@
 
 import {
   ApolloContextValue as react_ApolloContextValue,
   ApolloProvider as react_ApolloProvider,
-  ApolloConsumer as react_ApolloConsumer,
   getApolloContext as react_getApolloContext,
-  resetApolloContext as react_resetApolloContext,
-  IDocumentDefinition as react_IDocumentDefinition,
-  DocumentType as react_DocumentType,
-  operationName as react_operationName,
-  parser as react_parser,
   PreloadQueryOptions as react_PreloadQueryOptions,
   PreloadQueryFetchPolicy as react_PreloadQueryFetchPolicy,
   PreloadQueryFunction as react_PreloadQueryFunction,
   createQueryPreloader as react_createQueryPreloader,
@@  @@
   QueryReference as react_QueryReference,
   QueryRef as react_QueryRef,
   PreloadedQueryRef as react_PreloadedQueryRef,
   Context as react_Context,
-  CommonOptions as react_CommonOptions,
-  BaseQueryOptions as react_BaseQueryOptions,
   QueryFunctionOptions as react_QueryFunctionOptions,
-  ObservableQueryFields as react_ObservableQueryFields,
   QueryResult as react_QueryResult,
-  QueryDataOptions as react_QueryDataOptions,
   QueryHookOptions as react_QueryHookOptions,
   LazyQueryHookOptions as react_LazyQueryHookOptions,
   LazyQueryHookExecOptions as react_LazyQueryHookExecOptions,
   SuspenseQueryHookFetchPolicy as react_SuspenseQueryHookFetchPolicy,
@@  @@
   BackgroundQueryHookFetchPolicy as react_BackgroundQueryHookFetchPolicy,
   BackgroundQueryHookOptions as react_BackgroundQueryHookOptions,
   LoadableQueryHookFetchPolicy as react_LoadableQueryHookFetchPolicy,
   LoadableQueryHookOptions as react_LoadableQueryHookOptions,
-  QueryLazyOptions as react_QueryLazyOptions,
   LazyQueryResult as react_LazyQueryResult,
   QueryTuple as react_QueryTuple,
   LazyQueryExecFunction as react_LazyQueryExecFunction,
   LazyQueryResultTuple as react_LazyQueryResultTuple,
-  RefetchQueriesFunction as react_RefetchQueriesFunction,
-  BaseMutationOptions as react_BaseMutationOptions,
   MutationFunctionOptions as react_MutationFunctionOptions,
   MutationResult as react_MutationResult,
   MutationFunction as react_MutationFunction,
   MutationHookOptions as react_MutationHookOptions,
-  MutationDataOptions as react_MutationDataOptions,
   MutationTuple as react_MutationTuple,
   OnDataOptions as react_OnDataOptions,
   OnSubscriptionDataOptions as react_OnSubscriptionDataOptions,
   BaseSubscriptionOptions as react_BaseSubscriptionOptions,
   SubscriptionResult as react_SubscriptionResult,
   SubscriptionHookOptions as react_SubscriptionHookOptions,
   SubscriptionDataOptions as react_SubscriptionDataOptions,
-  SubscriptionCurrentObservable as react_SubscriptionCurrentObservable,
   VariablesOption as react_VariablesOption,
   NoInfer as react_NoInfer,
 } from "@apollo/client/react";
 
 import {
-  Query as react_components_Query,
-  Mutation as react_components_Mutation,
-  Subscription as react_components_Subscription,
-  QueryComponentOptions as react_components_QueryComponentOptions,
-  MutationComponentOptions as react_components_MutationComponentOptions,
-  SubscriptionComponentOptions as react_components_SubscriptionComponentOptions,
-} from "@apollo/client/react/components";
-
-import {
-  ApolloConsumerProps as react_context_ApolloConsumerProps,
-  ApolloConsumer as react_context_ApolloConsumer,
   ApolloContextValue as react_context_ApolloContextValue,
   getApolloContext as react_context_getApolloContext,
-  resetApolloContext as react_context_resetApolloContext,
   ApolloProviderProps as react_context_ApolloProviderProps,
   ApolloProvider as react_context_ApolloProvider,
 } from "@apollo/client/react/context";
 
 import {
-  graphql as react_hoc_graphql,
-  withQuery as react_hoc_withQuery,
-  withMutation as react_hoc_withMutation,
-  withSubscription as react_hoc_withSubscription,
-  withApollo as react_hoc_withApollo,
-  QueryControls as react_hoc_QueryControls,
-  DataValue as react_hoc_DataValue,
-  DataProps as react_hoc_DataProps,
-  MutateProps as react_hoc_MutateProps,
-  ChildProps as react_hoc_ChildProps,
-  ChildDataProps as react_hoc_ChildDataProps,
-  ChildMutateProps as react_hoc_ChildMutateProps,
-  OptionProps as react_hoc_OptionProps,
-  OperationOption as react_hoc_OperationOption,
-  WithApolloClient as react_hoc_WithApolloClient,
-} from "@apollo/client/react/hoc";
-
-import {
   useQuery as react_hooks_useQuery,
   UseSuspenseQueryResult as react_hooks_UseSuspenseQueryResult,
   useSuspenseQuery as react_hooks_useSuspenseQuery,
   UseBackgroundQueryResult as react_hooks_UseBackgroundQueryResult,
@@  @@
   HookWrappers as react_internal_HookWrappers,
 } from "@apollo/client/react/internal";
 
 import {
-  operationName as react_parser_operationName,
-  parser as react_parser_parser,
-  verifyDocumentType as react_parser_verifyDocumentType,
-  DocumentType as react_parser_DocumentType,
-  IDocumentDefinition as react_parser_IDocumentDefinition,
-} from "@apollo/client/react/parser";
-
-import {
   getMarkupFromTree as react_ssr_getMarkupFromTree,
   getDataFromTree as react_ssr_getDataFromTree,
   renderToStringWithData as react_ssr_renderToStringWithData,
-  RenderPromises as react_ssr_RenderPromises,
 } from "@apollo/client/react/ssr";
 
 import {
   MockedProviderProps as testing_MockedProviderProps,
@@  @@
   MockedResponse as testing_MockedResponse,
   MockLinkOptions as testing_MockLinkOptions,
   ResultFunction as testing_ResultFunction,
   MockLink as testing_MockLink,
-  mockSingleLink as testing_mockSingleLink,
   MockSubscriptionLink as testing_MockSubscriptionLink,
-  mockObservableLink as testing_mockObservableLink,
-  createMockClient as testing_createMockClient,
-  subscribeAndCount as testing_subscribeAndCount,
-  itAsync as testing_itAsync,
-  wait as testing_wait,
-  tick as testing_tick,
-  withErrorSpy as testing_withErrorSpy,
-  withWarningSpy as testing_withWarningSpy,
-  withLogSpy as testing_withLogSpy,
 } from "@apollo/client/testing";
 
 import {
   MockedResponse as testing_core_MockedResponse,
   MockLinkOptions as testing_core_MockLinkOptions,
   ResultFunction as testing_core_ResultFunction,
   MockLink as testing_core_MockLink,
-  mockSingleLink as testing_core_mockSingleLink,
   MockSubscriptionLink as testing_core_MockSubscriptionLink,
-  mockObservableLink as testing_core_mockObservableLink,
-  createMockClient as testing_core_createMockClient,
-  subscribeAndCount as testing_core_subscribeAndCount,
-  itAsync as testing_core_itAsync,
   wait as testing_core_wait,
-  tick as testing_core_tick,
-  withErrorSpy as testing_core_withErrorSpy,
-  withWarningSpy as testing_core_withWarningSpy,
-  withLogSpy as testing_core_withLogSpy,
 } from "@apollo/client/testing/core";
 
 import {
-  createTestSchema as testing_experimental_createTestSchema,
-  createSchemaFetch as testing_experimental_createSchemaFetch,
-} from "@apollo/client/testing/experimental";
-
-import {
   DEV as utilities_DEV,
   maybe as utilities_maybe,
-  DirectiveInfo as utilities_DirectiveInfo,
-  InclusionDirectives as utilities_InclusionDirectives,
   shouldInclude as utilities_shouldInclude,
   hasDirectives as utilities_hasDirectives,
-  hasAnyDirectives as utilities_hasAnyDirectives,
-  hasAllDirectives as utilities_hasAllDirectives,
-  hasClientExports as utilities_hasClientExports,
-  getDirectiveNames as utilities_getDirectiveNames,
-  getInclusionDirectives as utilities_getInclusionDirectives,
-  getFragmentMaskMode as utilities_getFragmentMaskMode,
   DocumentTransformCacheKey as utilities_DocumentTransformCacheKey,
   DocumentTransform as utilities_DocumentTransform,
   FragmentMap as utilities_FragmentMap,
   FragmentMapFunction as utilities_FragmentMapFunction,
   createFragmentMap as utilities_createFragmentMap,
   getFragmentQueryDocument as utilities_getFragmentQueryDocument,
   getFragmentFromSelection as utilities_getFragmentFromSelection,
-  isFullyUnmaskedOperation as utilities_isFullyUnmaskedOperation,
   checkDocument as utilities_checkDocument,
   getOperationDefinition as utilities_getOperationDefinition,
   getOperationName as utilities_getOperationName,
   getFragmentDefinitions as utilities_getFragmentDefinitions,
@@  @@
   StoreObject as utilities_StoreObject,
   AsStoreObject as utilities_AsStoreObject,
   Reference as utilities_Reference,
   StoreValue as utilities_StoreValue,
-  Directives as utilities_Directives,
-  VariableValue as utilities_VariableValue,
   makeReference as utilities_makeReference,
   isDocumentNode as utilities_isDocumentNode,
   isReference as utilities_isReference,
   isField as utilities_isField,
-  isInlineFragment as utilities_isInlineFragment,
-  valueToObjectRepresentation as utilities_valueToObjectRepresentation,
   storeKeyNameFromField as utilities_storeKeyNameFromField,
   argumentsObjectFromField as utilities_argumentsObjectFromField,
   resultKeyNameFromField as utilities_resultKeyNameFromField,
   getStoreKeyName as utilities_getStoreKeyName,
-  getTypenameFromResult as utilities_getTypenameFromResult,
-  RemoveNodeConfig as utilities_RemoveNodeConfig,
-  GetNodeConfig as utilities_GetNodeConfig,
-  RemoveDirectiveConfig as utilities_RemoveDirectiveConfig,
-  GetDirectiveConfig as utilities_GetDirectiveConfig,
-  RemoveArgumentsConfig as utilities_RemoveArgumentsConfig,
-  GetFragmentSpreadConfig as utilities_GetFragmentSpreadConfig,
-  RemoveFragmentSpreadConfig as utilities_RemoveFragmentSpreadConfig,
-  RemoveFragmentDefinitionConfig as utilities_RemoveFragmentDefinitionConfig,
-  RemoveVariableDefinitionConfig as utilities_RemoveVariableDefinitionConfig,
   addTypenameToDocument as utilities_addTypenameToDocument,
-  addNonReactiveToNamedFragments as utilities_addNonReactiveToNamedFragments,
-  buildQueryFromSelectionSet as utilities_buildQueryFromSelectionSet,
   removeDirectivesFromDocument as utilities_removeDirectivesFromDocument,
-  removeConnectionDirectiveFromDocument as utilities_removeConnectionDirectiveFromDocument,
-  removeArgumentsFromDocument as utilities_removeArgumentsFromDocument,
-  removeFragmentSpreadFromDocument as utilities_removeFragmentSpreadFromDocument,
-  removeClientSetsFromDocument as utilities_removeClientSetsFromDocument,
   isMutationOperation as utilities_isMutationOperation,
   isQueryOperation as utilities_isQueryOperation,
   isSubscriptionOperation as utilities_isSubscriptionOperation,
   concatPagination as utilities_concatPagination,
   offsetLimitPagination as utilities_offsetLimitPagination,
   relayStylePagination as utilities_relayStylePagination,
-  Observer as utilities_Observer,
-  ObservableSubscription as utilities_ObservableSubscription,
   Observable as utilities_Observable,
-  PromiseWithState as utilities_PromiseWithState,
-  isStatefulPromise as utilities_isStatefulPromise,
   createFulfilledPromise as utilities_createFulfilledPromise,
   createRejectedPromise as utilities_createRejectedPromise,
   wrapPromiseWithState as utilities_wrapPromiseWithState,
   preventUnhandledRejection as utilities_preventUnhandledRejection,
@@  @@
   omitDeep as utilities_omitDeep,
   stripTypename as utilities_stripTypename,
   DeepOmit as utilities_DeepOmit,
   DeepPartial as utilities_DeepPartial,
-  OnlyRequiredProperties as utilities_OnlyRequiredProperties,
   Prettify as utilities_Prettify,
   Primitive as utilities_Primitive,
-  UnionToIntersection as utilities_UnionToIntersection,
   NoInfer as utilities_NoInfer,
   RemoveIndexSignature as utilities_RemoveIndexSignature,
   AutoCleanedStrongCache as utilities_AutoCleanedStrongCache,
   AutoCleanedWeakCache as utilities_AutoCleanedWeakCache,
   cacheSizes as utilities_cacheSizes,
-  defaultCacheSizes as utilities_defaultCacheSizes,
   CacheSizes as utilities_CacheSizes,
   mergeDeep as utilities_mergeDeep,
   mergeDeepArray as utilities_mergeDeepArray,
-  TupleToIntersection as utilities_TupleToIntersection,
-  ReconcilerFunction as utilities_ReconcilerFunction,
   DeepMerger as utilities_DeepMerger,
   cloneDeep as utilities_cloneDeep,
-  iterateObserversSafely as utilities_iterateObserversSafely,
-  asyncMap as utilities_asyncMap,
-  ConcastSourcesIterable as utilities_ConcastSourcesIterable,
-  ConcastSourcesArray as utilities_ConcastSourcesArray,
-  Concast as utilities_Concast,
-  fixObservableSubclass as utilities_fixObservableSubclass,
   isNonEmptyArray as utilities_isNonEmptyArray,
   isArray as utilities_isArray,
   isNonNullObject as utilities_isNonNullObject,
   isPlainObject as utilities_isPlainObject,
   graphQLResultHasError as utilities_graphQLResultHasError,
   getGraphQLErrorsFromResult as utilities_getGraphQLErrorsFromResult,
-  canUseWeakMap as utilities_canUseWeakMap,
-  canUseWeakSet as utilities_canUseWeakSet,
-  canUseSymbol as utilities_canUseSymbol,
-  canUseAsyncIteratorSymbol as utilities_canUseAsyncIteratorSymbol,
   canUseDOM as utilities_canUseDOM,
-  canUseLayoutEffect as utilities_canUseLayoutEffect,
   compact as utilities_compact,
   makeUniqueId as utilities_makeUniqueId,
   stringifyForDisplay as utilities_stringifyForDisplay,
   mergeOptions as utilities_mergeOptions,
-  isExecutionPatchIncrementalResult as utilities_isExecutionPatchIncrementalResult,
-  isExecutionPatchInitialResult as utilities_isExecutionPatchInitialResult,
-  isExecutionPatchResult as utilities_isExecutionPatchResult,
-  isApolloPayloadResult as utilities_isApolloPayloadResult,
-  mergeIncrementalData as utilities_mergeIncrementalData,
-  IsStrictlyAny as utilities_IsStrictlyAny,
 } from "@apollo/client/utilities";
 
 import {
   maybe as utilities_globals_maybe,
"
`;
