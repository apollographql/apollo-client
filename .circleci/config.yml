version: 2.1

jobs:
  # Filesize:
  #   docker:
  #     - image: cimg/node:20.2.0
  #   steps:
  #     - checkout
  #     - run: npm version
  #     - run: npm ci
  #     - run: npm run bundlesize

  Circularity:
    docker:
      - image: cimg/node:23.7.0
    steps:
      - checkout
      - run: npm version
      - run: npm ci
      - run: npm run madge

  Publint:
    docker:
      - image: cimg/node:23.7.0
    steps:
      - checkout
      - run: npm version
      - run: npm ci
      - run: npm run build
      - run: npm run publint

  Lint:
    docker:
      - image: cimg/node:23.9.0
    steps:
      - checkout
      - run: npm version
      - run: npm ci
      - run: npm run build
      - run: npm run lint

  Formatting:
    docker:
      - image: cimg/node:23.9.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run check:format

  Tests:
    docker:
      - image: cimg/node:23.9.0
    parameters:
      project:
        type: string
    steps:
      - checkout
      - run: npm run ci:precheck
      - run: npm version
      - run: npm ci
      - run: npm run build
      - run: npm run typecheck
      - run: if test "<< parameters.project >>" = "Core Tests"; then npm run test:memory; fi
      - run:
          name: Jest suite with coverage
          command: npm run test:ci -- --selectProjects "<< parameters.project >>"
          environment:
            JEST_JUNIT_OUTPUT_FILE: "reports/junit/js-test-results-<< parameters.project >>.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
  Attest:
    docker:
      - image: cimg/node:23.9.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run test:type-benches

  BuildTarball:
    docker:
      - image: cimg/node:23.9.0
    steps:
      - checkout
      - run: npm run ci:precheck
      - run: npm version
      - run: npm ci
      - run: npm run build && cd dist && mv "$(npm pack --json | jq --raw-output '.[0].filename')" apollo-client.tgz
      - persist_to_workspace:
          root: dist
          paths:
            - apollo-client.tgz

  IntegrationTests:
    parameters:
      framework:
        type: string
      react:
        type: string
    docker:
      - image: cimg/node:23.9.0-browsers
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: pnpm version
      - run:
          command: pnpm pkg set "pnpm.overrides[@apollo/client]=/tmp/workspace/apollo-client.tgz"
          working_directory: integration-tests
      - run:
          command: |
            export VERSION=$(pnpm view react@<< parameters.react >> version)
            pnpm pkg set "pnpm.overrides[react]=${VERSION}" "pnpm.overrides[react-dom]=${VERSION}"
          working_directory: integration-tests
      - run:
          command: pnpm run --if-present --filter << parameters.framework >> ci-preparations
          working_directory: integration-tests
      - run:
          command: pnpm install --no-frozen-lockfile
          working_directory: integration-tests
      - run:
          command: cat pnpm-lock.yaml
          working_directory: integration-tests
      - run:
          command: pnpm exec playwright install-deps
          working_directory: integration-tests
      - run:
          command: pnpm exec playwright install
          working_directory: integration-tests
      - run:
          command: pnpm run --if-present --filter << parameters.framework >> build
          working_directory: integration-tests
      - run:
          command: pnpm run --if-present --filter << parameters.framework >> "/test(:.*|$)/"
          working_directory: integration-tests

  TestPeerDepTypes:
    parameters:
      externalPackage:
        type: string
    docker:
      - image: cimg/node:23.9.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          working_directory: integration-tests/peerdeps-tsc
          command: |
            npm install
            npm install @apollo/client@/tmp/workspace/apollo-client.tgz
            npm install << parameters.externalPackage >>
            npm test

workflows:
  Build and Test:
    jobs:
      # - Filesize
      - Tests:
          matrix:
            parameters:
              project:
                [
                  "Core Tests",
                  "Core Tests - RxJS min version",
                  "ReactDOM 17",
                  "ReactDOM 18",
                  "ReactDOM 19",
                ]
      - Circularity
      - Publint
      - Attest
      - Formatting
      - Lint
      - BuildTarball
      - IntegrationTests:
          name: Integration Test << matrix.framework >> with React << matrix.react >>
          requires:
            - BuildTarball
          matrix:
            parameters:
              framework:
                - cra5
                #- next
                - node
                - vite
                - vite-swc
                - wrapping-library
                # -browser-esm would need a package publish to npm/CDNs
              react:
                - "18.3.0"
                - latest
                - next
            exclude:
              # CRA only works with React 18
              - framework: cra5
                react: next
              - framework: cra5
                react: latest
              # next ships it's own React version anyways
              - framework: next
                react: next
              - framework: next
                react: "18.3.0"
              # node doesn't use React in the tests
              - framework: node
                react: next
              - framework: node
                react: "18.3.0"
      - TestPeerDepTypes:
          name: Test external types for << matrix.externalPackage >>
          requires:
            - BuildTarball
          matrix:
            parameters:
              externalPackage:
                - "graphql@15"
                - "graphql@16"
                - "graphql@^17.0.0-alpha"
                - "@types/react@17 @types/react-dom@17"
                - "@types/react@18 @types/react-dom@18"
                - "@types/react@19 @types/react-dom@19"
                - "typescript@next"
