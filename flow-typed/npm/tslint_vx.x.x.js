// flow-typed signature: 4fb3c5c1cf0a66729bce804f9a11fa80
// flow-typed version: <<STUB>>/tslint_v^5.1.0/flow_v0.48.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'tslint'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'tslint' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'tslint/lib/configs/all' {
  declare module.exports: any;
}

declare module 'tslint/lib/configs/latest' {
  declare module.exports: any;
}

declare module 'tslint/lib/configs/recommended' {
  declare module.exports: any;
}

declare module 'tslint/lib/configuration' {
  declare module.exports: any;
}

declare module 'tslint/lib/enableDisableRules' {
  declare module.exports: any;
}

declare module 'tslint/lib/error' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatterLoader' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/checkstyleFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/codeFrameFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/fileslistFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/index' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/jsonFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/msbuildFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/pmdFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/proseFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/stylishFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/tapFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/verboseFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/formatters/vsoFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/index' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/formatter/abstractFormatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/formatter/formatter' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/rule/abstractRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/rule/optionallyTypedRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/rule/rule' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/rule/typedRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/utils' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/blockScopeAwareRuleWalker' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/index' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/programAwareRuleWalker' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/ruleWalker' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/scopeAwareRuleWalker' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/syntaxWalker' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/walkContext' {
  declare module.exports: any;
}

declare module 'tslint/lib/language/walker/walker' {
  declare module.exports: any;
}

declare module 'tslint/lib/linter' {
  declare module.exports: any;
}

declare module 'tslint/lib/ruleLoader' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/adjacentOverloadSignaturesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/alignRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/arrayTypeRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/arrowParensRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/arrowReturnShorthandRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/awaitPromiseRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/banRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/banTypesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/binaryExpressionOperandOrderRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/callableTypesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/classNameRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/commentFormatRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/completedDocsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/curlyRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/cyclomaticComplexityRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/deprecationRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/encodingRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/eoflineRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/fileHeaderRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/forinRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/importBlacklistRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/importSpacingRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/indentRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/interfaceNameRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/interfaceOverTypeLiteralRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/jsdocFormatRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/labelPositionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/linebreakStyleRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/matchDefaultExportNameRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/maxClassesPerFileRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/maxFileLineCountRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/maxLineLengthRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/memberAccessRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/memberOrderingRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/newlineBeforeReturnRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/newParensRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noAngleBracketTypeAssertionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noAnyRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noArgRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noBitwiseRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noBooleanLiteralCompareRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noConditionalAssignmentRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noConsecutiveBlankLinesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noConsoleRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noConstructRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noDebuggerRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noDefaultExportRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noDuplicateSuperRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noDuplicateVariableRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noEmptyInterfaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noEmptyRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noEvalRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noFloatingPromisesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noForInArrayRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noImportSideEffectRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noInferrableTypesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noInferredEmptyObjectTypeRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noInternalModuleRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noInvalidTemplateStringsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noInvalidThisRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noIrregularWhitespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noMagicNumbersRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noMergeableNamespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noMisusedNewRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noNamespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noNonNullAssertionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noNullKeywordRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noObjectLiteralTypeAssertionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noParameterPropertiesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noReferenceImportRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noReferenceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noRequireImportsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noShadowedVariableRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noSparseArraysRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noStringLiteralRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noStringThrowRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noSwitchCaseFallThroughRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noTrailingWhitespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnboundMethodRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnnecessaryCallbackWrapperRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnnecessaryInitializerRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnnecessaryQualifierRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnnecessaryTypeAssertionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnsafeAnyRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnsafeFinallyRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnusedExpressionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUnusedVariableRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noUseBeforeDeclareRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noVarKeywordRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noVarRequiresRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/noVoidExpressionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/numberLiteralFormatRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/objectLiteralKeyQuotesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/objectLiteralShorthandRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/objectLiteralSortKeysRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/oneLineRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/oneVariablePerDeclarationRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/onlyArrowFunctionsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/orderedImportsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferConditionalExpressionRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferConstRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferForOfRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferFunctionOverMethodRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferMethodSignatureRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferObjectSpreadRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferSwitchRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/preferTemplateRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/promiseFunctionAsyncRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/quotemarkRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/radixRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/restrictPlusOperandsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/returnUndefinedRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/semicolonRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/spaceBeforeFunctionParenRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/strictBooleanExpressionsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/strictTypePredicatesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/switchDefaultRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/switchFinalBreakRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/trailingCommaRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/tripleEqualsRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/typedefRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/typedefWhitespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/typeLiteralDelimiterRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/typeofCompareRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/unifiedSignaturesRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/useDefaultTypeParameterRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/useIsnanRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/variableNameRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/rules/whitespaceRule' {
  declare module.exports: any;
}

declare module 'tslint/lib/runner' {
  declare module.exports: any;
}

declare module 'tslint/lib/test' {
  declare module.exports: any;
}

declare module 'tslint/lib/test/lines' {
  declare module.exports: any;
}

declare module 'tslint/lib/test/lintError' {
  declare module.exports: any;
}

declare module 'tslint/lib/test/parse' {
  declare module.exports: any;
}

declare module 'tslint/lib/tslint-cli' {
  declare module.exports: any;
}

declare module 'tslint/lib/utils' {
  declare module.exports: any;
}

// Filename aliases
declare module 'tslint/lib/configs/all.js' {
  declare module.exports: $Exports<'tslint/lib/configs/all'>;
}
declare module 'tslint/lib/configs/latest.js' {
  declare module.exports: $Exports<'tslint/lib/configs/latest'>;
}
declare module 'tslint/lib/configs/recommended.js' {
  declare module.exports: $Exports<'tslint/lib/configs/recommended'>;
}
declare module 'tslint/lib/configuration.js' {
  declare module.exports: $Exports<'tslint/lib/configuration'>;
}
declare module 'tslint/lib/enableDisableRules.js' {
  declare module.exports: $Exports<'tslint/lib/enableDisableRules'>;
}
declare module 'tslint/lib/error.js' {
  declare module.exports: $Exports<'tslint/lib/error'>;
}
declare module 'tslint/lib/formatterLoader.js' {
  declare module.exports: $Exports<'tslint/lib/formatterLoader'>;
}
declare module 'tslint/lib/formatters.js' {
  declare module.exports: $Exports<'tslint/lib/formatters'>;
}
declare module 'tslint/lib/formatters/checkstyleFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/checkstyleFormatter'>;
}
declare module 'tslint/lib/formatters/codeFrameFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/codeFrameFormatter'>;
}
declare module 'tslint/lib/formatters/fileslistFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/fileslistFormatter'>;
}
declare module 'tslint/lib/formatters/index.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/index'>;
}
declare module 'tslint/lib/formatters/jsonFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/jsonFormatter'>;
}
declare module 'tslint/lib/formatters/msbuildFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/msbuildFormatter'>;
}
declare module 'tslint/lib/formatters/pmdFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/pmdFormatter'>;
}
declare module 'tslint/lib/formatters/proseFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/proseFormatter'>;
}
declare module 'tslint/lib/formatters/stylishFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/stylishFormatter'>;
}
declare module 'tslint/lib/formatters/tapFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/tapFormatter'>;
}
declare module 'tslint/lib/formatters/verboseFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/verboseFormatter'>;
}
declare module 'tslint/lib/formatters/vsoFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/formatters/vsoFormatter'>;
}
declare module 'tslint/lib/index.js' {
  declare module.exports: $Exports<'tslint/lib/index'>;
}
declare module 'tslint/lib/language/formatter/abstractFormatter.js' {
  declare module.exports: $Exports<'tslint/lib/language/formatter/abstractFormatter'>;
}
declare module 'tslint/lib/language/formatter/formatter.js' {
  declare module.exports: $Exports<'tslint/lib/language/formatter/formatter'>;
}
declare module 'tslint/lib/language/rule/abstractRule.js' {
  declare module.exports: $Exports<'tslint/lib/language/rule/abstractRule'>;
}
declare module 'tslint/lib/language/rule/optionallyTypedRule.js' {
  declare module.exports: $Exports<'tslint/lib/language/rule/optionallyTypedRule'>;
}
declare module 'tslint/lib/language/rule/rule.js' {
  declare module.exports: $Exports<'tslint/lib/language/rule/rule'>;
}
declare module 'tslint/lib/language/rule/typedRule.js' {
  declare module.exports: $Exports<'tslint/lib/language/rule/typedRule'>;
}
declare module 'tslint/lib/language/utils.js' {
  declare module.exports: $Exports<'tslint/lib/language/utils'>;
}
declare module 'tslint/lib/language/walker/blockScopeAwareRuleWalker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/blockScopeAwareRuleWalker'>;
}
declare module 'tslint/lib/language/walker/index.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/index'>;
}
declare module 'tslint/lib/language/walker/programAwareRuleWalker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/programAwareRuleWalker'>;
}
declare module 'tslint/lib/language/walker/ruleWalker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/ruleWalker'>;
}
declare module 'tslint/lib/language/walker/scopeAwareRuleWalker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/scopeAwareRuleWalker'>;
}
declare module 'tslint/lib/language/walker/syntaxWalker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/syntaxWalker'>;
}
declare module 'tslint/lib/language/walker/walkContext.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/walkContext'>;
}
declare module 'tslint/lib/language/walker/walker.js' {
  declare module.exports: $Exports<'tslint/lib/language/walker/walker'>;
}
declare module 'tslint/lib/linter.js' {
  declare module.exports: $Exports<'tslint/lib/linter'>;
}
declare module 'tslint/lib/ruleLoader.js' {
  declare module.exports: $Exports<'tslint/lib/ruleLoader'>;
}
declare module 'tslint/lib/rules.js' {
  declare module.exports: $Exports<'tslint/lib/rules'>;
}
declare module 'tslint/lib/rules/adjacentOverloadSignaturesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/adjacentOverloadSignaturesRule'>;
}
declare module 'tslint/lib/rules/alignRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/alignRule'>;
}
declare module 'tslint/lib/rules/arrayTypeRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/arrayTypeRule'>;
}
declare module 'tslint/lib/rules/arrowParensRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/arrowParensRule'>;
}
declare module 'tslint/lib/rules/arrowReturnShorthandRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/arrowReturnShorthandRule'>;
}
declare module 'tslint/lib/rules/awaitPromiseRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/awaitPromiseRule'>;
}
declare module 'tslint/lib/rules/banRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/banRule'>;
}
declare module 'tslint/lib/rules/banTypesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/banTypesRule'>;
}
declare module 'tslint/lib/rules/binaryExpressionOperandOrderRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/binaryExpressionOperandOrderRule'>;
}
declare module 'tslint/lib/rules/callableTypesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/callableTypesRule'>;
}
declare module 'tslint/lib/rules/classNameRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/classNameRule'>;
}
declare module 'tslint/lib/rules/commentFormatRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/commentFormatRule'>;
}
declare module 'tslint/lib/rules/completedDocsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/completedDocsRule'>;
}
declare module 'tslint/lib/rules/curlyRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/curlyRule'>;
}
declare module 'tslint/lib/rules/cyclomaticComplexityRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/cyclomaticComplexityRule'>;
}
declare module 'tslint/lib/rules/deprecationRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/deprecationRule'>;
}
declare module 'tslint/lib/rules/encodingRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/encodingRule'>;
}
declare module 'tslint/lib/rules/eoflineRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/eoflineRule'>;
}
declare module 'tslint/lib/rules/fileHeaderRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/fileHeaderRule'>;
}
declare module 'tslint/lib/rules/forinRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/forinRule'>;
}
declare module 'tslint/lib/rules/importBlacklistRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/importBlacklistRule'>;
}
declare module 'tslint/lib/rules/importSpacingRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/importSpacingRule'>;
}
declare module 'tslint/lib/rules/indentRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/indentRule'>;
}
declare module 'tslint/lib/rules/interfaceNameRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/interfaceNameRule'>;
}
declare module 'tslint/lib/rules/interfaceOverTypeLiteralRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/interfaceOverTypeLiteralRule'>;
}
declare module 'tslint/lib/rules/jsdocFormatRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/jsdocFormatRule'>;
}
declare module 'tslint/lib/rules/labelPositionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/labelPositionRule'>;
}
declare module 'tslint/lib/rules/linebreakStyleRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/linebreakStyleRule'>;
}
declare module 'tslint/lib/rules/matchDefaultExportNameRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/matchDefaultExportNameRule'>;
}
declare module 'tslint/lib/rules/maxClassesPerFileRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/maxClassesPerFileRule'>;
}
declare module 'tslint/lib/rules/maxFileLineCountRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/maxFileLineCountRule'>;
}
declare module 'tslint/lib/rules/maxLineLengthRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/maxLineLengthRule'>;
}
declare module 'tslint/lib/rules/memberAccessRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/memberAccessRule'>;
}
declare module 'tslint/lib/rules/memberOrderingRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/memberOrderingRule'>;
}
declare module 'tslint/lib/rules/newlineBeforeReturnRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/newlineBeforeReturnRule'>;
}
declare module 'tslint/lib/rules/newParensRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/newParensRule'>;
}
declare module 'tslint/lib/rules/noAngleBracketTypeAssertionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noAngleBracketTypeAssertionRule'>;
}
declare module 'tslint/lib/rules/noAnyRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noAnyRule'>;
}
declare module 'tslint/lib/rules/noArgRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noArgRule'>;
}
declare module 'tslint/lib/rules/noBitwiseRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noBitwiseRule'>;
}
declare module 'tslint/lib/rules/noBooleanLiteralCompareRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noBooleanLiteralCompareRule'>;
}
declare module 'tslint/lib/rules/noConditionalAssignmentRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noConditionalAssignmentRule'>;
}
declare module 'tslint/lib/rules/noConsecutiveBlankLinesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noConsecutiveBlankLinesRule'>;
}
declare module 'tslint/lib/rules/noConsoleRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noConsoleRule'>;
}
declare module 'tslint/lib/rules/noConstructRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noConstructRule'>;
}
declare module 'tslint/lib/rules/noDebuggerRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noDebuggerRule'>;
}
declare module 'tslint/lib/rules/noDefaultExportRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noDefaultExportRule'>;
}
declare module 'tslint/lib/rules/noDuplicateSuperRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noDuplicateSuperRule'>;
}
declare module 'tslint/lib/rules/noDuplicateVariableRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noDuplicateVariableRule'>;
}
declare module 'tslint/lib/rules/noEmptyInterfaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noEmptyInterfaceRule'>;
}
declare module 'tslint/lib/rules/noEmptyRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noEmptyRule'>;
}
declare module 'tslint/lib/rules/noEvalRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noEvalRule'>;
}
declare module 'tslint/lib/rules/noFloatingPromisesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noFloatingPromisesRule'>;
}
declare module 'tslint/lib/rules/noForInArrayRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noForInArrayRule'>;
}
declare module 'tslint/lib/rules/noImportSideEffectRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noImportSideEffectRule'>;
}
declare module 'tslint/lib/rules/noInferrableTypesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noInferrableTypesRule'>;
}
declare module 'tslint/lib/rules/noInferredEmptyObjectTypeRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noInferredEmptyObjectTypeRule'>;
}
declare module 'tslint/lib/rules/noInternalModuleRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noInternalModuleRule'>;
}
declare module 'tslint/lib/rules/noInvalidTemplateStringsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noInvalidTemplateStringsRule'>;
}
declare module 'tslint/lib/rules/noInvalidThisRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noInvalidThisRule'>;
}
declare module 'tslint/lib/rules/noIrregularWhitespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noIrregularWhitespaceRule'>;
}
declare module 'tslint/lib/rules/noMagicNumbersRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noMagicNumbersRule'>;
}
declare module 'tslint/lib/rules/noMergeableNamespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noMergeableNamespaceRule'>;
}
declare module 'tslint/lib/rules/noMisusedNewRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noMisusedNewRule'>;
}
declare module 'tslint/lib/rules/noNamespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noNamespaceRule'>;
}
declare module 'tslint/lib/rules/noNonNullAssertionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noNonNullAssertionRule'>;
}
declare module 'tslint/lib/rules/noNullKeywordRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noNullKeywordRule'>;
}
declare module 'tslint/lib/rules/noObjectLiteralTypeAssertionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noObjectLiteralTypeAssertionRule'>;
}
declare module 'tslint/lib/rules/noParameterPropertiesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noParameterPropertiesRule'>;
}
declare module 'tslint/lib/rules/noReferenceImportRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noReferenceImportRule'>;
}
declare module 'tslint/lib/rules/noReferenceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noReferenceRule'>;
}
declare module 'tslint/lib/rules/noRequireImportsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noRequireImportsRule'>;
}
declare module 'tslint/lib/rules/noShadowedVariableRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noShadowedVariableRule'>;
}
declare module 'tslint/lib/rules/noSparseArraysRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noSparseArraysRule'>;
}
declare module 'tslint/lib/rules/noStringLiteralRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noStringLiteralRule'>;
}
declare module 'tslint/lib/rules/noStringThrowRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noStringThrowRule'>;
}
declare module 'tslint/lib/rules/noSwitchCaseFallThroughRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noSwitchCaseFallThroughRule'>;
}
declare module 'tslint/lib/rules/noTrailingWhitespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noTrailingWhitespaceRule'>;
}
declare module 'tslint/lib/rules/noUnboundMethodRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnboundMethodRule'>;
}
declare module 'tslint/lib/rules/noUnnecessaryCallbackWrapperRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnnecessaryCallbackWrapperRule'>;
}
declare module 'tslint/lib/rules/noUnnecessaryInitializerRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnnecessaryInitializerRule'>;
}
declare module 'tslint/lib/rules/noUnnecessaryQualifierRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnnecessaryQualifierRule'>;
}
declare module 'tslint/lib/rules/noUnnecessaryTypeAssertionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnnecessaryTypeAssertionRule'>;
}
declare module 'tslint/lib/rules/noUnsafeAnyRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnsafeAnyRule'>;
}
declare module 'tslint/lib/rules/noUnsafeFinallyRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnsafeFinallyRule'>;
}
declare module 'tslint/lib/rules/noUnusedExpressionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnusedExpressionRule'>;
}
declare module 'tslint/lib/rules/noUnusedVariableRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUnusedVariableRule'>;
}
declare module 'tslint/lib/rules/noUseBeforeDeclareRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noUseBeforeDeclareRule'>;
}
declare module 'tslint/lib/rules/noVarKeywordRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noVarKeywordRule'>;
}
declare module 'tslint/lib/rules/noVarRequiresRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noVarRequiresRule'>;
}
declare module 'tslint/lib/rules/noVoidExpressionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/noVoidExpressionRule'>;
}
declare module 'tslint/lib/rules/numberLiteralFormatRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/numberLiteralFormatRule'>;
}
declare module 'tslint/lib/rules/objectLiteralKeyQuotesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/objectLiteralKeyQuotesRule'>;
}
declare module 'tslint/lib/rules/objectLiteralShorthandRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/objectLiteralShorthandRule'>;
}
declare module 'tslint/lib/rules/objectLiteralSortKeysRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/objectLiteralSortKeysRule'>;
}
declare module 'tslint/lib/rules/oneLineRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/oneLineRule'>;
}
declare module 'tslint/lib/rules/oneVariablePerDeclarationRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/oneVariablePerDeclarationRule'>;
}
declare module 'tslint/lib/rules/onlyArrowFunctionsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/onlyArrowFunctionsRule'>;
}
declare module 'tslint/lib/rules/orderedImportsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/orderedImportsRule'>;
}
declare module 'tslint/lib/rules/preferConditionalExpressionRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferConditionalExpressionRule'>;
}
declare module 'tslint/lib/rules/preferConstRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferConstRule'>;
}
declare module 'tslint/lib/rules/preferForOfRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferForOfRule'>;
}
declare module 'tslint/lib/rules/preferFunctionOverMethodRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferFunctionOverMethodRule'>;
}
declare module 'tslint/lib/rules/preferMethodSignatureRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferMethodSignatureRule'>;
}
declare module 'tslint/lib/rules/preferObjectSpreadRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferObjectSpreadRule'>;
}
declare module 'tslint/lib/rules/preferSwitchRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferSwitchRule'>;
}
declare module 'tslint/lib/rules/preferTemplateRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/preferTemplateRule'>;
}
declare module 'tslint/lib/rules/promiseFunctionAsyncRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/promiseFunctionAsyncRule'>;
}
declare module 'tslint/lib/rules/quotemarkRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/quotemarkRule'>;
}
declare module 'tslint/lib/rules/radixRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/radixRule'>;
}
declare module 'tslint/lib/rules/restrictPlusOperandsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/restrictPlusOperandsRule'>;
}
declare module 'tslint/lib/rules/returnUndefinedRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/returnUndefinedRule'>;
}
declare module 'tslint/lib/rules/semicolonRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/semicolonRule'>;
}
declare module 'tslint/lib/rules/spaceBeforeFunctionParenRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/spaceBeforeFunctionParenRule'>;
}
declare module 'tslint/lib/rules/strictBooleanExpressionsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/strictBooleanExpressionsRule'>;
}
declare module 'tslint/lib/rules/strictTypePredicatesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/strictTypePredicatesRule'>;
}
declare module 'tslint/lib/rules/switchDefaultRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/switchDefaultRule'>;
}
declare module 'tslint/lib/rules/switchFinalBreakRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/switchFinalBreakRule'>;
}
declare module 'tslint/lib/rules/trailingCommaRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/trailingCommaRule'>;
}
declare module 'tslint/lib/rules/tripleEqualsRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/tripleEqualsRule'>;
}
declare module 'tslint/lib/rules/typedefRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/typedefRule'>;
}
declare module 'tslint/lib/rules/typedefWhitespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/typedefWhitespaceRule'>;
}
declare module 'tslint/lib/rules/typeLiteralDelimiterRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/typeLiteralDelimiterRule'>;
}
declare module 'tslint/lib/rules/typeofCompareRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/typeofCompareRule'>;
}
declare module 'tslint/lib/rules/unifiedSignaturesRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/unifiedSignaturesRule'>;
}
declare module 'tslint/lib/rules/useDefaultTypeParameterRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/useDefaultTypeParameterRule'>;
}
declare module 'tslint/lib/rules/useIsnanRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/useIsnanRule'>;
}
declare module 'tslint/lib/rules/variableNameRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/variableNameRule'>;
}
declare module 'tslint/lib/rules/whitespaceRule.js' {
  declare module.exports: $Exports<'tslint/lib/rules/whitespaceRule'>;
}
declare module 'tslint/lib/runner.js' {
  declare module.exports: $Exports<'tslint/lib/runner'>;
}
declare module 'tslint/lib/test.js' {
  declare module.exports: $Exports<'tslint/lib/test'>;
}
declare module 'tslint/lib/test/lines.js' {
  declare module.exports: $Exports<'tslint/lib/test/lines'>;
}
declare module 'tslint/lib/test/lintError.js' {
  declare module.exports: $Exports<'tslint/lib/test/lintError'>;
}
declare module 'tslint/lib/test/parse.js' {
  declare module.exports: $Exports<'tslint/lib/test/parse'>;
}
declare module 'tslint/lib/tslint-cli.js' {
  declare module.exports: $Exports<'tslint/lib/tslint-cli'>;
}
declare module 'tslint/lib/utils.js' {
  declare module.exports: $Exports<'tslint/lib/utils'>;
}
