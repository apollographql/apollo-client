// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`writing to the store "Cache data maybe lost..." warnings should not warn when scalar fields are updated 1`] = `
Object {
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "currentTime({\\"tz\\":\\"UTC-5\\"})": Object {
      "localeString": "9/25/2020, 1:08:33 PM",
    },
    "someJSON": Object {
      "foos": Array [
        "bar",
        "baz",
      ],
      "oyez": 3,
    },
  },
}
`;

exports[`writing to the store "Cache data maybe lost..." warnings should not warn when scalar fields are updated 2`] = `
Object {
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "currentTime({\\"tz\\":\\"UTC-5\\"})": Object {
      "msSinceEpoch": 1601053713081,
    },
    "someJSON": Object {
      "asdf": "middle",
      "qwer": "upper",
      "zxcv": "lower",
    },
  },
}
`;

exports[`writing to the store correctly merges fragment fields along multiple paths 1`] = `
Object {
  "Item:0f47f85d-8081-466e-9121-c94069a77c3e": Object {
    "__typename": "Item",
    "id": "0f47f85d-8081-466e-9121-c94069a77c3e",
    "value": Object {
      "__typename": "Container",
      "value": Object {
        "__typename": "Value",
        "item": Object {
          "__ref": "Item:6dc3530b-6731-435e-b12a-0089d0ae05ac",
        },
      },
    },
  },
  "Item:6dc3530b-6731-435e-b12a-0089d0ae05ac": Object {
    "__typename": "Item",
    "id": "6dc3530b-6731-435e-b12a-0089d0ae05ac",
    "value": Object {
      "__typename": "Container",
      "text": "Hello World",
      "value": Object {
        "__typename": "Value",
      },
    },
  },
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "item({\\"id\\":\\"123\\"})": Object {
      "__ref": "Item:0f47f85d-8081-466e-9121-c94069a77c3e",
    },
  },
}
`;

exports[`writing to the store should not keep reference when type of mixed inlined field changes to non-inlined field 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Missing field 'price' while writing result {
  \\"id\\": \\"1\\",
  \\"name\\": \\"Todo 1\\",
  \\"description\\": \\"Description 1\\",
  \\"__typename\\": \\"ShoppingCartItem\\"
}",
    ],
    Array [
      "Missing field 'expensive' while writing result {
  \\"id\\": 1
}",
    ],
    Array [
      "Missing field 'id' while writing result {
  \\"__typename\\": \\"Cat\\",
  \\"name\\": \\"cat\\"
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`writing to the store should respect id fields added by fragments 1`] = `
Object {
  "AType:a-id": Object {
    "__typename": "AType",
    "b": Array [
      Object {
        "__ref": "BType:b-id",
      },
    ],
    "id": "a-id",
  },
  "BType:b-id": Object {
    "__typename": "BType",
    "c": Object {
      "__typename": "CType",
      "title": "Your experience",
      "titleSize": null,
    },
    "id": "b-id",
  },
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "a": Object {
      "__ref": "AType:a-id",
    },
  },
}
`;

exports[`writing to the store user objects should be able to have { __typename: "Mutation" } 1`] = `
Object {
  "Gene:{\\"id\\":\\"SLC45A2\\"}": Object {
    "__typename": "Gene",
    "id": "SLC45A2",
  },
  "Gene:{\\"id\\":\\"SNAI2\\"}": Object {
    "__typename": "Gene",
    "id": "SNAI2",
  },
  "Mutation:{\\"gene\\":{\\"id\\":\\"SLC45A2\\"},\\"name\\":\\"albinism\\"}": Object {
    "__typename": "Mutation",
    "gene": Object {
      "__ref": "Gene:{\\"id\\":\\"SLC45A2\\"}",
      "id": "SLC45A2",
    },
    "name": "albinism",
  },
  "Mutation:{\\"gene\\":{\\"id\\":\\"SNAI2\\"},\\"name\\":\\"piebaldism\\"}": Object {
    "__typename": "Mutation",
    "gene": Object {
      "__ref": "Gene:{\\"id\\":\\"SNAI2\\"}",
      "id": "SNAI2",
    },
    "name": "piebaldism",
  },
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "mutations": Array [
      Object {
        "__ref": "Mutation:{\\"gene\\":{\\"id\\":\\"SLC45A2\\"},\\"name\\":\\"albinism\\"}",
      },
      Object {
        "__ref": "Mutation:{\\"gene\\":{\\"id\\":\\"SNAI2\\"},\\"name\\":\\"piebaldism\\"}",
      },
    ],
  },
}
`;

exports[`writing to the store user objects should be able to have { __typename: "Subscription" } 1`] = `
Object {
  "ROOT_QUERY": Object {
    "__typename": "Query",
    "subscriptions": Array [
      Object {
        "__ref": "Subscription:{\\"subId\\":1}",
      },
      Object {
        "__ref": "Subscription:{\\"subId\\":2}",
      },
      Object {
        "__ref": "Subscription:{\\"subId\\":3}",
      },
    ],
  },
  "Subscription:{\\"subId\\":1}": Object {
    "__typename": "Subscription",
    "subId": 1,
    "subscriber": Object {
      "name": "Alice",
    },
  },
  "Subscription:{\\"subId\\":2}": Object {
    "__typename": "Subscription",
    "subId": 2,
    "subscriber": Object {
      "name": "Bob",
    },
  },
  "Subscription:{\\"subId\\":3}": Object {
    "__typename": "Subscription",
    "subId": 3,
    "subscriber": Object {
      "name": "Clytemnestra",
    },
  },
}
`;

exports[`writing to the store writeResultToStore shape checking should warn when it receives the wrong data with non-union fragments 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Missing field 'description' while writing result {
  \\"id\\": \\"1\\",
  \\"name\\": \\"Todo 1\\"
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`writing to the store writeResultToStore shape checking should write the result data without validating its shape when a fragment matcher is not provided 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Missing field 'description' while writing result {
  \\"id\\": \\"1\\",
  \\"name\\": \\"Todo 1\\"
}",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
