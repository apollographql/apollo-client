// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`writing to the store "Cache data maybe lost..." warnings should not warn when scalar fields are updated 1`] = `
{
  "ROOT_QUERY": {
    "__typename": "Query",
    "currentTime({"tz":"UTC-5"})": {
      "localeString": "9/25/2020, 1:08:33 PM",
    },
    "someJSON": {
      "foos": [
        "bar",
        "baz",
      ],
      "oyez": 3,
    },
  },
}
`;

exports[`writing to the store "Cache data maybe lost..." warnings should not warn when scalar fields are updated 2`] = `
{
  "ROOT_QUERY": {
    "__typename": "Query",
    "currentTime({"tz":"UTC-5"})": {
      "msSinceEpoch": 1601053713081,
    },
    "someJSON": {
      "asdf": "middle",
      "qwer": "upper",
      "zxcv": "lower",
    },
  },
}
`;

exports[`writing to the store "Cache data maybe lost..." warnings should not warn when scalar fields are updated 3`] = `[MockFunction]`;

exports[`writing to the store correctly merges fragment fields along multiple paths 1`] = `
{
  "Item:0f47f85d-8081-466e-9121-c94069a77c3e": {
    "__typename": "Item",
    "id": "0f47f85d-8081-466e-9121-c94069a77c3e",
    "value": {
      "__typename": "Container",
      "value": {
        "__typename": "Value",
        "item": {
          "__ref": "Item:6dc3530b-6731-435e-b12a-0089d0ae05ac",
        },
      },
    },
  },
  "Item:6dc3530b-6731-435e-b12a-0089d0ae05ac": {
    "__typename": "Item",
    "id": "6dc3530b-6731-435e-b12a-0089d0ae05ac",
    "value": {
      "__typename": "Container",
      "text": "Hello World",
      "value": {
        "__typename": "Value",
      },
    },
  },
  "ROOT_QUERY": {
    "__typename": "Query",
    "item({"id":"123"})": {
      "__ref": "Item:0f47f85d-8081-466e-9121-c94069a77c3e",
    },
  },
}
`;

exports[`writing to the store should not keep reference when type of mixed inlined field changes to non-inlined field 1`] = `
[MockFunction] {
  "calls": [
    [
      "Missing field 'id' while writing result {
  "__typename": "Cat",
  "name": "cat"
}",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`writing to the store should respect id fields added by fragments 1`] = `
{
  "AType:a-id": {
    "__typename": "AType",
    "b": [
      {
        "__ref": "BType:b-id",
      },
    ],
    "id": "a-id",
  },
  "BType:b-id": {
    "__typename": "BType",
    "c": {
      "__typename": "CType",
      "title": "Your experience",
      "titleSize": null,
    },
    "id": "b-id",
  },
  "ROOT_QUERY": {
    "__typename": "Query",
    "a": {
      "__ref": "AType:a-id",
    },
  },
}
`;

exports[`writing to the store user objects should be able to have { __typename: "Mutation" } 1`] = `
{
  "Gene:{"id":"SLC45A2"}": {
    "__typename": "Gene",
    "id": "SLC45A2",
  },
  "Gene:{"id":"SNAI2"}": {
    "__typename": "Gene",
    "id": "SNAI2",
  },
  "Mutation:{"gene":{"id":"SLC45A2"},"name":"albinism"}": {
    "__typename": "Mutation",
    "gene": {
      "__ref": "Gene:{"id":"SLC45A2"}",
      "id": "SLC45A2",
    },
    "name": "albinism",
  },
  "Mutation:{"gene":{"id":"SNAI2"},"name":"piebaldism"}": {
    "__typename": "Mutation",
    "gene": {
      "__ref": "Gene:{"id":"SNAI2"}",
      "id": "SNAI2",
    },
    "name": "piebaldism",
  },
  "ROOT_QUERY": {
    "__typename": "Query",
    "mutations": [
      {
        "__ref": "Mutation:{"gene":{"id":"SLC45A2"},"name":"albinism"}",
      },
      {
        "__ref": "Mutation:{"gene":{"id":"SNAI2"},"name":"piebaldism"}",
      },
    ],
  },
}
`;

exports[`writing to the store user objects should be able to have { __typename: "Subscription" } 1`] = `
{
  "ROOT_QUERY": {
    "__typename": "Query",
    "subscriptions": [
      {
        "__ref": "Subscription:{"subId":1}",
      },
      {
        "__ref": "Subscription:{"subId":2}",
      },
      {
        "__ref": "Subscription:{"subId":3}",
      },
    ],
  },
  "Subscription:{"subId":1}": {
    "__typename": "Subscription",
    "subId": 1,
    "subscriber": {
      "name": "Alice",
    },
  },
  "Subscription:{"subId":2}": {
    "__typename": "Subscription",
    "subId": 2,
    "subscriber": {
      "name": "Bob",
    },
  },
  "Subscription:{"subId":3}": {
    "__typename": "Subscription",
    "subId": 3,
    "subscriber": {
      "name": "Clytemnestra",
    },
  },
}
`;

exports[`writing to the store writeResultToStore shape checking should not warn if a field is defered 1`] = `[MockFunction]`;

exports[`writing to the store writeResultToStore shape checking should warn when it receives the wrong data inside a fragment 1`] = `
[MockFunction] {
  "calls": [
    [
      "Missing field 'price' while writing result {
  "id": "1",
  "name": "Todo 1",
  "description": "Description 1",
  "__typename": "ShoppingCartItem"
}",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`writing to the store writeResultToStore shape checking should warn when it receives the wrong data with non-union fragments 1`] = `
[MockFunction] {
  "calls": [
    [
      "Missing field 'description' while writing result {
  "id": "1",
  "name": "Todo 1"
}",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`writing to the store writeResultToStore shape checking should write the result data without validating its shape when a fragment matcher is not provided 1`] = `
[MockFunction] {
  "calls": [
    [
      "Missing field 'description' while writing result {
  "id": "1",
  "name": "Todo 1"
}",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
